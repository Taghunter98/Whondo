/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./app/static/jay-comps/comp-pages/create.js":
/*!***************************************************!*\
  !*** ./app/static/jay-comps/comp-pages/create.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Create: () => (/* binding */ Create)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\n\nclass Create extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\n    \n\n    createHTML() {\n\n        return /* html */`\n        <comp-navbar></comp-navbar>\n        <div class=\"background\">\n            <div class=\"container\">\n                <comp-dialog id=\"describe\"></comp-dialog>\n            </div>\n        </div>\n        `;\n    \n    }\n\n    createCSS() {\n\n        const effect = this.effect.slideUp(20);\n        const prop   = this.effect.prop(\"slideUp\", .5);\n\n        const background = {\n            class: \"background\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            widthPercent: 100,\n            heightVh: 100,\n            justifyContent: \"centre\",\n            alignItems: \"centre\",\n            backgroundVar: \"black10\",\n            overflow: \"hidden\",\n            media: {\n                maxWidthBp: 600,\n                padding: 20,\n                width: \"auto\"\n            }\n        };\n\n        const container = {\n            class: \"container\",\n            background: \"white\",\n            animation: prop, \n            width: \"auto\",        \n        };\n\n        return [effect, background, container];\n         \n    \n    }\n\n    afterRender() {\n\n        const dialogBox = this.getById(\"describe\");\n\n            dialogBox.title     = \"Email Verification\";\n\n            dialogBox.paragraph = \"We have sent you an email with a verification link.<br>If you do not receive an email, please check your spam.\";\n\n            dialogBox.svgIcon   = ` xmlns=\"http://www.w3.org/2000/svg\" height=\"64px\" viewBox=\"0 -960 960 960\" width=\"64px\" fill=\"currentColor\"><path d=\"m734-164-42-42 73-74H584v-60h181l-73-74 42-42 146 146-146 146ZM140-280q-24.75 0-42.37-17.63Q80-315.25 80-340v-440q0-24.75 17.63-42.38Q115.25-840 140-840h560q24.75 0 42.38 17.62Q760-804.75 760-780v232q-7.5-1-15-1.5t-15-.5q-8 0-15 .5t-15 1.5v-185L416-532 140-732v392h351q-1 8-1 13.5v13.75q0 8.25.5 16.5T493-280H140Zm36-500 240 174 246-174H176Zm-36 440v-440 440Z\"/`;\n\n            const btn = dialogBox.query(\"comp-button\");\n            btn.style.display = \"none\";\n    }\n\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\n\n}\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comp-pages/create.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comp-pages/home.js":
/*!*************************************************!*\
  !*** ./app/static/jay-comps/comp-pages/home.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Home: () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\n\nclass Home extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\n\n    text_;\n\n    set text(v){\n        this.text_ = v;\n        this.update();\n    }\n\n    get text() { return this.text_; }\n\n    beforeRender(){\n        if (!this.text_) {\n            const longText = \"e.g I want to live in a flat in London that is £2000 a month, has two bedrooms and one bathroom...\";\n            const shortText = \"e.g I want a flat in London (£2000)...\"\n            \n            this.text_ = window.innerWidth <= 600 ? shortText : longText\n        }\n    }\n\n    createHTML(){\n        \n        return /* html */`\n        <div class=\"background\">\n            <div class=\"container\">\n                <div class=\"modal\">\n                    <div class=\"text\">\n                        <h2 class=\"head\">Describe your perfect home</h2>\n                    </div>\n                    <div class=\"prompt-wrapper\">\n                        <textarea name=\"\" id=\"prompt\" class=\"prompt\" placeholder=\"${this.text_}\"></textarea>\n\n                        <div class=\"iconBtn\">\n                            <comp-ibutton class=\"icon\"></comp-ibutton>\n                        </div>\n                    </div>\n                    <p><a href=\"#\" class=\"help\">Prompting Help</a></p>\n                </div>\n            </div>\n        </div>\n        `;\n    }\n\n    createCSS(){\n\n        return [ \n            {\n                class: \"background\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"centre\",\n                alignItems: \"centre\",\n                widthPercent: 100,\n                heightVh: 100,\n                background: \"white\"\n            },\n            {\n                class: \"container\",\n                display: \"flex\",\n                widthPercent: 100,\n                justifyContent: \"centre\"\n            },\n            {\n                class: \"modal\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"centre\",\n                alignItems: \"centre\",\n                gap: 40,\n                widthPercent: 100,\n                maxWidth: 900,\n                padding: 20,\n                boxSizing: \"border-box\"\n            },\n            {\n                class: \"head\",\n                fontSize: 48,\n                colourVar: \"black100\",\n                textAlign: \"centre\",\n                widthPercent: 100,\n                fontWeight: \"bold\",\n                lineHeight: \"normal\",\n                media: {\n                    maxWidthBp: 600,\n                    fontSize: 32,\n                }\n            },\n            {\n                class: \"prompt-wrapper\",\n                display: \"flex\",\n                alignItems: \"centre\",\n                gap: 20,\n                widthPercent: 100,\n                maxWidth: 900,\n                minHeight: 74,\n                padding: 15,\n                backgroundVar: \"black10\",\n                borderVar: \"border\",\n                borderRadius: 15,\n                boxSizing: \"border-box\",\n            },\n            {\n                class: \"prompt\",\n                flexGrow: 1,\n                flexShrink: 1,\n                widthPercent: 100,\n                backgroundVar: \"black10\",\n                border: \"none\",\n                fontSize: 16,\n                resize: \"none\",\n                lineHeight: 1.5,\n                outline: \"none\",\n                fontFamily: \"Geist\",\n                minHeight: 44,\n                maxHeight: 150,\n                whiteSpace: \"pre-wrap\",\n                media: {\n                maxWidthBp: 600,\n                fontSize: 16,\n                }\n            },\n            {\n                class: \"help\",\n                display: \"flex\",\n                justifyContent: \"centre\",\n                fontSize: 14,\n                cursor: \"pointer\",\n                colourVar: \"black100\"\n            },\n            {\n                class: \"text\",\n                widthPercent: 100,\n                display: \"flex\",\n                justifyContent: \"centre\",\n                textAlign: \"centre\"\n            },\n            {\n                class: \"prompt\",\n                pseudoClass: \":placeholder\",\n                fontFamily: \"Geist, sans-serif\",\n                fontSize: 16\n            }\n        ];\n    }\n\n     autoResize(el) {\n        el.style.height = 'auto';\n        el.style.height = `${el.scrollHeight}px`;\n    }\n\n    afterRender(){\n        const icon = this.query(\".icon\");\n        const textarea = this.query(\".prompt\");\n\n        icon.path = \"forward_arrow.svg\"\n\n        textarea.value = \"\";\n        textarea.text = this.text_;\n\n        this.autoResize(textarea);\n\n        textarea.addEventListener(\"input\", () => {\n            this.autoResize(textarea);\n        });\n    }\n\n     static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\n\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comp-pages/home.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comp-pages/login.js":
/*!**************************************************!*\
  !*** ./app/static/jay-comps/comp-pages/login.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Login: () => (/* binding */ Login)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\n\nclass Login extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\n       \n    createHTML() {\n    \n        return /* html */ `\n        \n        <div class=\"background\">\n\n            <div class=\"itemContainer\">\n\n                <div class=\"modal\">\n\n                    <div class=\"textContainer\">\n                        <h3 class=\"title\">Login</h3>\n                        <p class=\"text\">Welcome back! Let's find you a new home.</p>\n                    </div>\n\n                    <div class=\"inputs\">\n                        <comp-input id=\"email\" name=\"email\"></comp-input>\n                        <comp-input id=\"password\" \n                        name=\"password\"></comp-input>\n                    </div>\n\n                    <div class=\"footer\">\n                        <comp-button id=\"submit\">Refresh Card</comp-button>\n                        <p class=\"link\"><a>Forgot password?</a></p>\n                    </div>\n                    <p id=\"result\"></p>\n                </div>\n\n                <div class=\"backgroundImage\">\n                    <img class=\"image\" src=\"https://images.pexels.com/photos/4781426/pexels-photo-4781426.jpeg\">\n                </div>\n            </div>\n            \n        </div>\n        `;\n    \n    }\n\n    createCSS() {   \n\n        // Background and image styling\n        return[\n            {\n                class: \"background\",\n                widthPercent: 100,\n                backgroundVar: \"black100\",\n                heightVh: 100,\n            },\n            {\n                class: \"itemContainer\",\n                display: \"flex\",\n                media: {\n                    maxWidthBp: 600,\n                    flexDirection: \"column\",\n                    alignItems: \"centre\"\n                }\n            },\n            {\n                class: \"backgroundImage\",\n                widthPercent: 100,\n                heightVh: 100,\n                paddingLeft: 400,\n                media: {\n                    maxWidthBp: 600,\n                    heightVh: 40,\n                    margin: 0,\n                    padding: 0\n                }\n            },\n            {\n                class: \"image\",\n                widthPercent: 100,\n                heightPercent: 100,\n                objectFit: \"cover\"\n            },\n            // Login modal styling\n            {\n                class: \"modal\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"centre\",\n                width: 500,\n                background: \"white\",\n                position: \"absolute\",\n                zIndex: 800,\n                padding: 20,\n                borderRadius: 14,\n                marginLeft: 100,\n                marginTop: 100,\n                media: {\n                    maxWidthBp: 600,\n                    width: \"auto\",\n                    margin: 0,\n                    marginTop: 200\n                }\n            },\n            {\n                class: \"inputs\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                widthPercent: 100,\n                gap: 10,\n                padding: [20, 0, 40, 0]\n            },\n            // Link\n            {\n                class: \"link\",\n                colourVar: \"black80\",\n                textDecoration: \"underline\",\n                cursor: \"pointer\"\n            },\n            {\n                class: \"link\",\n                pseudoClass: \"hover\",\n                colourVar: \"black100\"\n            },\n            {\n                class: \"textContainer\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                widthPercent: 100,\n                gap: 5\n            },\n            {\n                class: \"title\",\n                fontWeight: \"bold\"\n            },\n            {\n                class: \"text\",\n                colourVar: \"black60\"\n            },\n            {\n                class: \"footer\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"centre\",\n                widthPercent: 100,\n                gap: 10\n            }\n        ];\n    }\n\n    openWindow() {\n\n        window.location.assign(\"/register\");\n    \n    }\n\n    async login(result, json) {\n\n        let data = await this.api.request(\"/login\", \"POST\", json);\n        \n        (data.status) ? result.innerHTML = data.message : result.innerHTML = data.error;\n    \n    }\n\n    afterRender() {\n\n        const compButton = this.getById(\"submit\");\n        const result     = this.getById(\"result\");\n        const email      = this.getById(\"email\");\n        const pass       = this.getById(\"password\");\n        \n        compButton.text = \"Login\";\n        email.label     = \"Email\";\n        email.prompt    = \"Enter email\";\n        pass.label      = \"Password\";\n        pass.type       = \"password\";\n        pass.prompt     = \"Enter password\";\n        \n        compButton.addEventListener(\"click\", () => {\n            \n            let cookie   = \"true\";\n            let jsonData = {email : email.value, password : pass.value, consent: cookie};\n\n            this.login(result, jsonData);\n        \n        });\n    \n    }\n\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\n  \n}\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comp-pages/login.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comp-pages/register.js":
/*!*****************************************************!*\
  !*** ./app/static/jay-comps/comp-pages/register.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Register: () => (/* binding */ Register)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\n\nclass Register extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\n    createHTML() {\n        return /* html */ `\n        <comp-navbar></comp-navbar>\n        <div class=\"background\">\n            <div class=\"container\">\n                <div class=\"modal\">\n                    <form class=\"formObj\">\n\n                        <!-- Personal information -->\n                        <div id=\"step1\">\n                            <div class=\"textContainer\">\n                                <p class=\"text\">Step 1/2</p>\n                                <h4 class=\"title\">Personal Details</h4> \n                            </div>\n                            <div class=\"input\">\n                                <div class=\"inputRow\">\n                                    <comp-input id=\"name\" name=\"name\"></comp-input>\n                                    <comp-input id=\"surname\" name=\"surname\"></comp-input>\n                                </div>\n                                <comp-input id=\"email\" name=\"email\"></comp-input>\n                                <comp-password id=\"password\" name=\"password\"></comp-password>\n                                <comp-password id=\"confirm\" name=\"confirm\"></comp-password>\n                            </div>\n\n                            <div class=\"footer\">\n                                <div class=\"btnRow\">\n                                    <comp-button class=\"back\" id=\"backBtn\" type=button></comp-button>\n                                    <comp-button class=\"next\" id=\"nextBtn\" type=button></comp-button>\n                                </div>\n                                <p>Have an account?<a href=\"/login\" class=\"link\"> Login</a></p>\n                            </div>\n                        </div>\n\n                        <!-- User personalisation  -->\n                        <div id=\"step2\" hidden>\n                            <div class=\"textContainer\">\n                                <p class=\"text\">Step 2/2</p>\n                                <h4 class=\"title\">Personalise</h4> \n                            </div>\n                             <div class=\"inputRow\">\n                                <comp-input id=\"age\" name=\"age\"></comp-input>\n                                <comp-input id=\"occupation\" name=\"occupation\"></comp-input>\n                            </div>\n                            <div class=\"input\">\n                                <comp-textarea id=\"bio\" name=\"bio\"></comp-textarea>\n                                <comp-file id=\"picture\" name=\"picture\"></comp-file>\n                            </div>\n                            <div class=\"footer\">\n                                <div class=\"btnRow\">\n                                    <comp-button class=\"back\" id=\"backBtn2\" type=\"button\"></comp-button>\n                                    <comp-button class=\"submit\" id=\"submit\" type=\"submit\"></comp-button>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <div class=\"backgroundImage\">\n                <img class=\"image\" src=\"https://images.pexels.com/photos/4569340/pexels-photo-4569340.jpeg\">\n            </div>\n        </div>\n        `;\n    }\n\n    createCSS() {\n        return [\n            {\n                class: \"background\",\n                widthPercent: 100,\n                heightVh: 100,\n                backgroundVar: \"black100\",\n                overflow: \"hidden\",\n                media: { maxWidthBp: 600, height: 1000 }\n            },\n            { class: \"formObj\", widthPercent: 100 },\n            {\n                class: \"container\",\n                display: \"flex\",\n                media: {\n                    maxWidthBp: 600,\n                    flexDirection: \"column\",\n                    alignItems: \"centre\"\n                }\n            },\n            {\n                class: \"backgroundImage\",\n                widthPercent: 100,\n                heightVh: 100,\n                paddingLeft: 400,\n                media: {\n                    maxWidthBp: 600,\n                    heightVh: 40,\n                    margin: 0,\n                    padding: 0\n                }\n            },\n            {\n                class: \"image\",\n                widthPercent: 100,\n                heightPercent: 100,\n                objectFit: \"cover\"\n            },\n            {\n                class: \"modal\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"centre\",\n                widthPercent: 100,\n                maxWidth: 500,\n                minWidth: 320,\n                background: \"white\",\n                position: \"absolute\",\n                zIndex: 800,\n                padding: 20,\n                borderRadius: 14,\n                marginLeft: 100,\n                marginTop: 110,\n                marginBotton: 50,\n                media: {\n                    maxWidthBp: 600,\n                    widthPercent: 100,\n                    maxWidth: 350,\n                    minWidth: 250,\n                    margin: 0,\n                    marginTop: 150,\n                    boxSizing: \"border-box\"\n                }\n            },\n            {\n                class: \"input\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                widthPercent: 100,\n                gap: 20,\n                padding: [20, 0, 40, 0],\n                media: {\n                    maxWidthBp: 600,\n                    padding: [10, 0, 20, 0],\n                    gap: 15,\n                }\n            },\n            {\n                class: \"inputRow\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                gap: 15,\n                widthPercent: 100,\n                justifyContent: \"space-between\",\n                media: {\n                    maxWidthBp: 600,\n                    flexDirection: \"column\"\n                }\n            },\n            {\n                class: \"btnRow\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                gap: 15,\n                widthPercent: 100,\n                justifyContent: \"space-between\"\n            },\n            {\n                class: \"title\",\n                fontWeight: \"bold\"\n            },\n            {\n                class: \"link\",\n                colourVar: \"black80\",\n                fontWeight: \"bold\",\n                textDecoration: \"underline\",\n                cursor: \"pointer\",\n            },\n            {\n                class: \"link\",\n                pseudoClass: \"hover\",\n                colourVar: \"black100\",\n            },\n            {\n                class: \"textContainer\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                widthPercent: 100,\n                gap: 5,\n            },\n            {\n                class: \"text\",\n                colourVar: \"black60\",\n                display: \"flex\",\n                alignSelf: \"start\",\n\n            },\n            {\n                class: \"footer\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"centre\",\n                widthPercent: 100,\n                gap: 10,\n            },\n        ];\n    }\n\n    checkPassword(input1, input2) {\n        return (input1.value.trim() == input2.value.trim()) ? true : false;\n    }\n\n    validateElements(inputs) {\n        let isValid = true;\n\n        for (let i in inputs) {\n            if (inputs[i].required && inputs[i].isEmpty()) {\n                const inputField = inputs[i].query(\".inputValue\");\n                inputField.classList.add(\"error\");\n                isValid = false;\n            }\n        }\n\n        return (!this.checkPassword(inputs[3], inputs[4])) ? false : isValid;\n    }\n\n    validatePasswords(password, confirmPass) {\n        if (confirmPass.value == '' || password.value == '') return;\n        else if (confirmPass.value === password.value) confirmPass.query(\".inputValue\").classList.add(\"success\");\n        else confirmPass.query(\".inputValue\").classList.remove(\"success\");\n    }\n\n    validateInputs(inputs, state) {\n        if (state) for (let i in inputs) inputs[i].query(\".inputValue\").classList.add(\"error\");\n        else for (let i in inputs) inputs[i].query(\".inputValue\").classList.remove(\"error\");\n    }\n\n    clearError(inputs) {\n        const field = inputs.query(\".inputValue\");\n        field.classList.remove(\"error\");\n    };\n\n    async register() {\n        const fd = new FormData();\n\n        fd.append(\"name\", this.getById(\"name\").value);\n        fd.append(\"surname\", this.getById(\"surname\").value);\n        fd.append(\"email\", this.getById(\"email\").value);\n        fd.append(\"password\", this.getById(\"password\").value);\n        fd.append(\"age\", this.getById(\"age\").value);\n\n        const p = this.getById(\"picture\");\n        const a = this.getById(\"age\");\n        const o = this.getById(\"occupation\");\n        const b = this.getById(\"bio\");\n\n        if (o.value) fd.append(\"occupation\", o.value);\n        if (b.value) fd.append(\"bio\", b.value);\n        if (p.value) fd.append(\"file\", p.value);\n\n        const result = await this.submitForm(\"/register\", fd);\n\n        if (result.ok) this.update(\"<comp-create></comp-create>\")\n        else this.alert(result.error);\n    }\n\n    afterRender() {\n        const step1 = this.getById(\"step1\");\n        const step2 = this.getById(\"step2\");\n        const backButton = this.getById(\"backBtn\");\n        const backBtn2 = this.getById(\"backBtn2\");\n        const nextButton = this.getById(\"nextBtn\");\n        const submitButton = this.getById(\"submit\");\n        const email = this.getById(\"email\");\n        const password = this.getById(\"password\");\n        const confirmPass = this.getById(\"confirm\");\n        const name = this.getById(\"name\");\n        const surname = this.getById(\"surname\");\n        const age = this.getById(\"age\");\n        const occupation = this.getById(\"occupation\");\n        const bio = this.getById(\"bio\");\n        const picture = this.getById(\"picture\");\n\n        backButton.text = \"Back\";\n        backButton.variant = 2;\n        backBtn2.text = \"Back\";\n        backBtn2.variant = 2;\n        nextButton.text = \"Next\";\n        nextButton.variant = 1;\n        submitButton.text = \"Register\";\n        submitButton.variant = 1;\n\n        /**\n         * Form inputs and required fields\n         */\n        email.label = \"Email\";\n        email.prompt = \"Enter email\";\n        email.type = \"email\";\n        password.label = \"Password\";\n        password.prompt = \"Password\";\n        password.enableEntropy = true;\n        confirmPass.label = \"Confirm Password\";\n        confirmPass.prompt = \"Confirm password\";\n        name.label = \"Name\";\n        name.prompt = \"Enter name\";\n        surname.label = \"Surname\";\n        surname.prompt = \"Enter surname\";\n        age.label = \"Age\";\n        age.prompt = \"Enter your age\";\n        age.type = \"number\";\n        occupation.label = \"Occupation\";\n        occupation.prompt = \"Eg. student\";\n        occupation.type = \"text\";\n        bio.label = \"Bio\";\n        bio.prompt = \"Tell us more about you...\";\n        bio.type = \"textarea\";\n\n        if (picture) {\n            picture.label = \"Profile picture\";\n            picture.prompt = \"Upload photo\";\n            picture.type = \"file\";\n\n        }\n\n        name.required = true;\n        surname.required = true;\n        email.required = true;\n        password.required = true;\n        confirmPass.required = true;\n        age.required = true;\n\n        nextButton.addEventListener(\"click\", () => {\n            const inputs = [name, surname, email, password, confirmPass];\n            let valid = this.validateElements(inputs);\n\n            if (valid) {\n                step1.setAttribute(\"hidden\", \"\");\n                step2.removeAttribute(\"hidden\");\n            } else this.validateInputs(inputs, true);\n        });\n\n        confirmPass.addEventListener(\"input\", () => this.validatePasswords(password, confirmPass));\n        password.addEventListener(\"input\", () => this.validatePasswords(password, confirmPass));\n\n        [name, surname, email, confirmPass].forEach(input => {\n            input.addEventListener(\"input\", () => this.clearError(input));\n        });\n\n        backBtn2.addEventListener(\"click\", () => {\n            step2.setAttribute(\"hidden\", \"\");\n            step1.removeAttribute(\"hidden\");\n        });\n\n        submitButton.addEventListener(\"click\", (e) => {\n            if (!age.value) {\n                age.query(\".inputValue\").classList.add(\"error\");\n                return;\n            }\n            e.preventDefault();\n            this.register();\n        });\n\n        const alert = this.query(\"comp-dialog\");\n        if (alert) {\n            alert.title = \"Something went wrong\";\n            alert.text\n        }\n    }\n\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\n}\n\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comp-pages/register.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comp-pages/verified.js":
/*!*****************************************************!*\
  !*** ./app/static/jay-comps/comp-pages/verified.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Verified: () => (/* binding */ Verified)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\n\nclass Verified extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\n\n    openWindow() {\n\n        window.location.assign(\"/index\");\n\n    }\n\n    createHTML() {\n\n        return /* html */`\n        <div class=\"background\">\n            <div class=\"container\">\n                <comp-dialog id=\"describe\"></comp-dialog>\n            </div>\n        </div>\n        `;\n\n    }\n\n    createCSS() {\n\n        const effect = this.effect.slideUp(20);\n        const prop = this.effect.prop(\"slideUp\", .5);\n\n        const background = {\n            class: \"background\",\n            display: \"flex\",\n            heightVh: 100,\n            flexDirection: \"column\",\n            widthPercent: 100,\n            alignItems: \"centre\",\n            backgroundVar: \"black10\",\n            justifyContent: \"centre\",\n            overflow: \"hidden\",\n            media: {\n                maxWidthBp: 600,\n                padding: 20,\n                width: \"auto\"\n            }\n        };\n\n        const container = {\n            class: \"container\",\n            display: \"flex\",\n            background: \"white\",\n            animation: prop,\n            width: \"auto\",\n        };\n\n        return [effect, background, container];\n    }\n\n    afterRender() {\n        const describe = this.getById(\"describe\");\n        const email = this.getAttribute(\"email\") || \"User\";\n\n        const template = `Welcome {{ email }}!<br>Your account has now been verified.`;\n        const finalText = template.replace(/{{\\s*email\\s*}}/g, email);\n\n        describe.svgIcon = `xmlns=\"http://www.w3.org/2000/svg\" height=\"64px\" viewBox=\"0 -960 960 960\" width=\"64px\" fill=\"currentColor\"><path d=\"m424-296 282-282-56-56-226 226-114-114-56 56 170 170Zm56 216q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z\"/`;\n        describe.title = \"Verified!\";\n        describe.paragraph = finalText;\n\n        const btn = describe.query(\"comp-button\");\n        btn.text = \"continue\"\n\n        btn.addEventListener(\"click\", () => {\n            this.openWindow();\n        })\n    }\n\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comp-pages/verified.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/button.js":
/*!**********************************************!*\
  !*** ./app/static/jay-comps/comps/button.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: () => (/* binding */ Button)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n/**\n * Copyright (c) 2025 Josh Bassett, whondo.com\n * \n * Filename:    button.js\n * Author:      Josh Bassett\n * Date:        10/06/2025\n * Version:     1.0\n * \n * Description: Class that creates a reusable Button Comp.\n */\n\n\n\nclass Button extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\n\n    text_;\n    variant_;   \n\n    /**\n     * @brief A setter method that sets the Comp's button text.\n     * \n     * @param {string} newText\n     */\n    set text(newText) {\n\n        this.text_ = newText;\n        this.update();\n    \n    }\n\n    /**\n     * @brief A setter method that sets the Comp's button variant (1, 2, 3).\n     * \n     * @param {string} newVariant\n     */\n    set variant(newVariant) {\n\n        this.variant_ = newVariant;\n        this.update();\n    \n    }\n    \n    /**\n     * @brief A getter method that returns the Comp's button text.\n     * \n     * @returns {string} Comp's button text. \n     */\n    get text() {\n\n        return this.text_;\n    \n    }\n\n    /**\n     * @brief A getter method that returns the Comp's button variant.\n     * \n     * @returns {number} Comp's button variant. \n     */\n    get variant() {\n\n        return this.variant_;\n    \n    }\n\n    beforeRender(){\n        if (!this.text_) this.text_ = \"this is button\";\n        if (!this.variant_) this.variant_ = 1;\n    }\n    \n    createHTML() {\n\n        \n        return /* html */ `\n            <button class=\"button\">${this.text}</button>`;\n    \n    }\n\n    createCSS() {\n\n        let button, buttonHover, buttonActive;\n\n        const primary = {\n            class: \"button\",\n            colour: \"white\",\n            widthPercent: 100,\n            backgroundVar: \"black100\",\n            padding: [12, 28],\n            borderVar: \"black100\",\n            borderRadius: 8,\n            fontSize: 16,\n            cursor: \"pointer\",\n            transition: [\"background\", \"0.1s\", \"ease-in-out\"]\n        };\n\n        const primaryHover = {\n            class: \"button\",\n            pseudoClass: \"hover\",\n            border: \"black\",\n            backgroundVar: \"black80\",\n        };\n\n        const primaryActive = {\n            class: \"button\",\n            pseudoClass: \"active\",\n            borderVar: \"black60\",\n            backgroundVar: \"black60\"\n        };\n\n        const secondary = {\n            class: \"button\",\n            colourVar: \"black100\",\n            backgroundVar: \"black10\",\n            widthPercent: 100,\n            borderVar: \"border\",\n            padding: [12, 28],\n            borderRadius: 8,\n            fontSize: 16,\n            cursor: \"pointer\",\n            transition: [\"background\", \"0.1s\", \"ease-in-out\"]\n        };\n\n        const secondaryHover = ({\n            class: \"button\",\n            pseudoClass: \"hover\",\n            backgroundVar: \"black20\"\n        });\n\n        const secondaryActive = ({\n            class: \"button\",\n            pseudoClass: \"active\",\n            backgroundVar: \"black40\"\n        });\n        \n        if (this.variant_ == 1) {\n\n            button       = primary;\n            buttonHover  = primaryHover;\n            buttonActive = primaryActive;\n        \n        }\n        \n        else if (this.variant_ == 2) {\n\n            button       = secondary;\n            buttonHover  = secondaryHover;\n            buttonActive = secondaryActive;\n        \n        }\n\n        return [button, buttonHover, buttonActive];\n\n    }\n\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\n\n}\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/button.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/card.js":
/*!********************************************!*\
  !*** ./app/static/jay-comps/comps/card.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Card: () => (/* binding */ Card)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n/**\n * Copyright (c) 2025 Josh Bassett, whondo.com\n * \n * Filename:    card.js\n * Author:      Josh Bassett\n * Date:        10/06/2025\n * Version:     1.0\n * \n * Description: Class that creates a reusable Card Comp.\n */\n\n\n\nclass Card extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp { \n\n    cardTitle_;\n    cardText_;\n    buttonText_;\n    buttonAction_;\n    cardImage_;\n       \n    /**\n     * @brief A setter method that sets the Comp's title.\n     * \n     * @param {string} newCardTitle\n     */\n    set cardTitle(newCardTitle) {\n       \n        this.cardTitle_ = newCardTitle;\n        this.update();\n    \n    }\n\n    /**\n     * @brief A setter method that sets the Comp's text.\n     * \n     * @param {string} newCompText\n     */\n    set cardText(newCompText) {\n\n        this.cardText_ = newCompText;\n        this.update();\n    \n    }\n\n    /**\n     * @brief A setter method that sets the Comp's button text.\n     * \n     * @param {string} newButtonText\n     */\n    set buttonText(newButtonText) {\n\n        this.buttonText_ = newButtonText;\n        this.update();\n    \n    }\n\n    /**\n     * @brief A setter method that sets the Comp's button link.\n     * \n     * @param {string} newButtonAction\n     */\n    set buttonAction(newButtonAction) {\n\n        this.buttonAction_ = newButtonAction;\n        this.update();\n    \n    }\n\n    /**\n     * @brief A setter method that sets the Comp's image link.\n     * \n     * @param {string} newCardImage\n     */\n    set cardImage(newCardImage) {\n\n        this.cardImage_ = newCardImage;\n        this.update();\n    \n    }\n\n    /**\n     * @brief A getter method that returns the Comp's title.\n     * \n     * @returns {string} Comp's title. \n     */\n    get cardTitle() {\n\n        return this.cardTitle_;\n    \n    }\n\n    /**\n     * @brief A getter method that returns the Comp's text.\n     * \n     * @returns {string} Comp's text. \n     */\n    get cardText() {\n\n        return this.cardText_;\n    \n    }\n\n    /**\n     * @brief A getter method that returns the Comp's button text.\n     * \n     * @returns {string} Comp's button text. \n     */\n    get buttonText() {\n\n        return this.buttonText_;\n    \n    }\n\n    /**\n     * @brief A getter method that returns the Comp's button link.\n     * \n     * @returns {string} Comp's button link. \n     */\n    get buttonAction() {\n        \n        return this.buttonAction_;\n    \n    }\n\n    /**\n     * @brief A getter method that returns the Comp's card image.\n     * \n     * @returns {string} Comp's card image. \n     */\n    get cardImage() {\n\n        return this.cardImage_;\n    \n    }\n\n    beforeRender(){\n        if (!this.cardTitle_) this.cardTitle_ = \"Card header\";\n        if (!this.cardText_) this.cardText_ = \"Card text goes here.\";\n        if (!this.buttonText_) this.buttonText_ = \"Card Action\";\n        if (!this.buttonAction_) this.buttonAction_ = this.debug;\n        if (!this.cardImage_) this.cardImage_    = \"\";\n    }\n    \n    /**\n     * @brief A method that builds the card's HTML.\n     * \n     * @returns {literal} HTML to be injected into Comp. \n     */\n    createHTML() {\n\n        imageHTML_;\n\n        if (this.cardImage_) imageHTML_ = /* html */`<img src=\"${this.cardImage_}\">`;\n\n        return /* html */ `\n        <div class=\"cardContainer\">\n            ${imageHTML}\n            <div class=\"textContainer\">\n                <h2>${this.cardTitle_}</h2>\n                <p>${this.cardText_}</p>\n            </div>\n            <comp-button id=\"button\"></comp-button>\n        </div>\n        `;\n    \n    }\n\n    set imageHTML(v){\n        this.imageHTML_ = v;\n        this.update();\n    }\n\n    get innerHTML() { return this.imageHTML_; }\n\n    beforeRender() {\n        if (!this.imageHTML) this.imageHTML_ = \"\";\n    }\n\n    /**\n     * @brief A method that builds the card's CSS.\n     * \n     * @returns {literal} CSS to be injected into Comp.\n     */\n    createCSS() {\n        return [\n            {\n                valueID: \"cardContainer\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                boxSizing: \"border-box\",\n                widthPercent: 100, \n                maxWidth: 500, \n                padding: 20,\n                alignItems: \"start\",\n                border: true,\n                borderRadius: 15,\n                gap: 20,\n                background: \"white\"\n            },\n            {\n                valueID: \"textContainer\",\n                direction: \"column\", \n                widthPercent: 100,\n                maxWidth: 500, \n                padding: 0, \n                alignItems: \"start\", \n                border: false\n            }\n        ];\n    }\n\n    /**\n     * @brief A method that opens a new page, with Safari support.\n     * \n     * @param {any} event \n     */\n    onButtonClick(event) {\n\n        event.preventDefault();\n \n        this.buttonAction_();\n    \n    }\n\n    /**\n     * @brief A method that runs a build hook when the Component is rendered it\n     *        provides the inner JavaScript logic for the Comp. \n     */\n    hook() {\n\n        const cardButton   = this.getById(\"button\");\n        cardButton.variant = 2;\n\n        cardButton.addEventListener(\"click\", this.onButtonClick.bind(this));\n    \n    }\n\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\n\n}\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/card.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/dialog.js":
/*!**********************************************!*\
  !*** ./app/static/jay-comps/comps/dialog.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dialog: () => (/* binding */ Dialog)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\n\nclass Dialog extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\n\n    title_;\n    paragraph_;\n    svgIcon_;\n    text_;\n\n    set title(newTitle) {\n        this.title_ = newTitle;\n        this.update();\n    }\n\n    set paragraph(value) {\n        this.paragraph_ = value;\n        this.update();\n    }\n\n    set svgIcon(value) {\n        this.svgIcon_ = value;\n        this.update();\n    }\n\n    set text(v) {\n        this.text_ = v;\n        this.update();\n    }\n\n    get paragraph() {\n\n        return this.paragraph_;\n\n    }\n\n    get title() {\n\n        return this.title_;\n\n    }\n\n    get svgIcon() {\n\n        return this.svgIcon_;\n\n    }\n\n    get text() { return this.text_ }\n\n    beforeRender() {\n        if (!this.title_) this.title_ = \"Hello World\";\n        if (!this.paragraph_) this.paragraph_ = \"This is a paragraph\";\n        if (!this.svgIcon_) this.svgIcon_ = \"\";\n    }\n\n    createHTML() {\n\n        return /* html */ `\n            <div class=\"background\">\n\n                <div class=\"container\">\n\n                    <!--svg logo go here-->\n                    <svg class=\"icon\" ${this.svgIcon_}></svg>\n                    <h3 class=\"head\">${this.title_}</h3>\n                    <p class=\"dialog\">${this.paragraph_}</p>\n                    <comp-button class=\"nextBtn\">${this.text_}</comp-button>\n                </div>\n\n            </div>\n        `;\n\n    }\n\n    createCSS() {\n        return [\n            {\n                class: \"background\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                widthPercent: 100,\n                heightVh: \"100\",\n                alignItems: \"centre\",\n                border: false,\n                gap: 0,\n                backgroundVar: \"black10\",\n                justifyContent: \"centre\",\n            },\n            {\n                class: \"container\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: \"auto\",\n                maxWidth: 500,\n                padding: 20,\n                alignItems: \"centre\",\n                borderVar: \"border\",\n                borderRadius: 16,\n                gap: 10,\n                background: \"white\",\n                textAlign: \"start\",\n                marginTop: 0,\n            },\n            {\n                class: \"head\",\n                fontSize: 24,\n                alignSelf: \"center\",\n            },\n            {\n                class: \"dialog\",\n                fontSize: 16,\n                textAlign: \"start\",\n                media: {\n                    maxWidthBp: 600,\n                    fontSize: 16\n                }\n            },\n            {\n                class: \"icon\",\n                colourVar: \"black80\",\n            },\n        ];\n    }\n\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\n\n\n}\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/dialog.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/ibutton.js":
/*!***********************************************!*\
  !*** ./app/static/jay-comps/comps/ibutton.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ibutton: () => (/* binding */ Ibutton)\n/* harmony export */ });\n/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icon.js */ \"./app/static/jay-comps/comps/icon.js\");\n\n\nclass Ibutton extends _icon_js__WEBPACK_IMPORTED_MODULE_0__.Icon {\n\n    createHTML() {\n        return /* html */`\n            <div class=\"icon-wrapper\">\n                <img class=\"icon-img\" src=\"/static/icons/${this.path_}\">\n            </div>\n        `;\n    }\n\n    createCSS() {\n        return [\n            {\n                class: \"icon-wrapper\",\n                display: \"flex\",\n                alignItems: \"centre\",\n                justifyContent: \"centre\",\n                width: 44,\n                height: 44,\n                backgroundVar: \"black100\",\n                borderRadius: 8,\n                cursor: \"pointer\",\n                transition: [\"background\", \"0.2s\", \"ease-in-out\"]\n            },\n            {\n                class: \"icon-wrapper\",\n                pseudoClass: \"hover\",\n                backgroundVar: \"black80\"  \n            },\n            {\n             class: \"icon-wrapper\",\n                pseudoClass: \"active\",\n                backgroundVar: \"black20\"\n            },\n            {\n                class: \"icon-img\",\n                alignItems: \"centre\"\n            }\n        ];\n    }\n\n    static { super.register(this); }\n}\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/ibutton.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/icon.js":
/*!********************************************!*\
  !*** ./app/static/jay-comps/comps/icon.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Icon: () => (/* binding */ Icon)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\n\nclass Icon extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\n        \n    path_;\n    name_;\n\n    constructor() {\n\n        super();\n        this.host({width: \"auto\"});\n    \n    }\n       \n    set path(newPath) {\n\n        this.path_ = newPath;\n        this.update();\n    \n    }\n    \n    get path() {\n\n        return this.path_;\n    \n    }\n\n    beforeRender(){\n        if (!this.path_) this.path_ = \"\";\n        if (!this.name_) this.name_ = \"Icon\";\n    }\n\n    createHTML() {\n\n        return /* html */ `\n        <img class=\"icon\" src=\"/static/icons/${this.path_}\">\n        `;\n    \n    }\n\n    createCSS() {\n\n        return [\n            {\n                class: \"icon\",\n                display: \"flex\",\n                borderVar: \"borderDefault\",\n                borderRadius: 8,\n                width: \"auto\",\n                padding: 5,\n                cursor: \"pointer\",\n                transition: [\"background\", \"0.1s\", \"ease-in-out\"]\n            },\n            {\n                class: \"icon\",\n                pseudoClass: \"hover\",\n                backgroundVar: \"black10\",\n                borderVar: \"border\"\n            },\n            {\n                class: \"icon\",\n                pseudoClass: \"active\",\n                backgroundVar: \"black20\"\n            },\n\n        ];\n    \n    }\n\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\n    \n}\n\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/icon.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/inputs/file.js":
/*!***************************************************!*\
  !*** ./app/static/jay-comps/comps/inputs/file.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   File: () => (/* binding */ File)\n/* harmony export */ });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.js */ \"./app/static/jay-comps/comps/inputs/input.js\");\n\n\nclass File extends _input_js__WEBPACK_IMPORTED_MODULE_0__.Input {\n  \n    createHTML(){\n\n        return /* html */`\n           \n        <div class=\"inputContainer\">\n            <label style=\"color: var(--black80); font-size: 14px\">${this.label_}</label>\n            <div class=\"fileWrapper\">\n                <div class=\"fileBox\">\n                    <img class=\"filePreview\" src=\"\" hidden/>\n                    <span class=\"icon\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"currentColor\">\n                            <path d=\"M440-440H200v-80h240v-240h80v240h240v80H520v240h-80v-240Z\"/>\n                        </svg>\n                    </span>\n                    <span class=\"filePrompt\">${this.prompt_}</span>\n                    <input class=\"inputValue fileInput\" type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" hidden />\n                    <comp-button class=\"reuploadBtn\" hidden></comp-button>\n                </div>\n            </div>\n        </div>\n        `;\n    \n    }\n\n    createCSS(){\n        \n        return [\n            {\n                class: \"fileInput\",\n                display: \"none\",\n            },\n            {\n                class: \"fileWrapper\",\n                widthPercent: 100,\n                cursor: \"pointer\"\n            },\n            {\n                class: \"fileBox\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"centre\",\n                justifyContent: \"centre\",\n                widthPercent: 100,\n                maxWidthPercent: 100,\n                padding: 20,\n                border: 2,\n                borderRadius: 12,\n                borderStyle: \"dotted\",\n                background: \"white\",\n                gap: 8,\n                boxSizing: \"border-box\",\n                textAlign: \"centre\"\n            },\n            {\n                class: \"icon\",\n                fontSizeRem: 2,\n                fontWeight: \"bold\",\n                colourVar: \"black80\",\n            },\n            {\n                class: \"filePrompt\",\n                fontSizeRem: 0.9,\n                colourVar: \"black60\",\n                media: {\n                    maxWidthBp: 600,\n                    fontSizeRem: 0.8,\n                    wordWrap: \"break-word\",\n                    maxWidth: 120\n                }\n\n            },\n            {\n                class: \"fileBox\",\n                pseudoClass: \"hover\",\n                outline: [\"solid\", 2, \"var(--black60)\"]\n            },\n            {\n                class: \"fileBox\",\n                pseudoClass: \"focus\",\n                outline: [\"solid\", 2, \"var(--black100)\"]\n            },\n            {\n                class: \"dragover\",\n                outline: [\"solid\", 2, \"var(--black100)\"],\n                backgroundVar: \"back10\",\n            },\n            {\n                class: \"filePreview\",\n                width: \"auto\",             \n                maxWidth: 150,       \n                maxHeight: 150,        \n                objectFit: \"cover\",\n                display: \"block\",\n                marginTop: 8,\n                marginLeft: \"auto\",        \n                marginRight: \"auto\",\n                borderRadius: 6,\n                media: {\n                    maxWidthBp: 600,\n                    maxWidth: 100,     \n                    maxHeight: 100,\n                    marginTop: 8,\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    maxWidthPercent: 100,\n                    height: \"auto\",\n                    objectFit: \"cover\",\n                    borderRadius: 6\n                }\n            },\n            {\n                class: \"reuploadBtn\",\n                width: \"auto\",\n                marginTop: 12,\n                media: {\n                    maxWidthBp: 600,\n                    marginTop:  8,\n                    width: \"auto\",\n                }\n            }\n        ];\n    }\n\n    get value() {\n        return this._selectedFile || this.fileInput?.files?.[0] || null ;\n    }\n\n    afterRender() {\n\n        const filePrompt  = this.query(\".filePrompt\");\n        const icon        = this.query(\".icon\");\n        const preview     = this.query(\".filePreview\");\n        const dropArea    = this.query(\".fileBox\");\n        const reuploadBtn = this.query(\".reuploadBtn\");\n\n        reuploadBtn.text     = \"Upload another\";\n        reuploadBtn. variant = 2;\n\n        const handleFile = (file) => {\n\n            if (!file) return;\n\n            filePrompt.textContent = file.name;\n\n            this._selectedFile = file;\n\n            if (file.type.startsWith(\"image/\")) {\n\n                const reader  = new FileReader();\n                reader.onload = () => {\n\n                    preview.src = reader.result;\n                    preview.removeAttribute(\"hidden\");\n                    icon.setAttribute(\"hidden\", \"\");\n                    reuploadBtn?.removeAttribute(\"hidden\");\n                \n                };\n                reader.readAsDataURL(file);\n            \n            }\n        \n        };\n\n        const createInput = () => {\n\n            const input     = document.createElement(\"input\");\n            input.type      = \"file\";\n            input.className = \"inputValue fileInput\";\n            input.accept    = \"image/png, image/jpeg, image/jpg\";\n            input.hidden    = true;\n\n            input.addEventListener(\"change\", () => {\n\n                if (input.files?.[0]) {\n\n                    this._fileInput = input;\n                    handleFile(input.files[0]);\n                \n                }\n            \n            });\n\n            return input;\n        \n        };\n\n        this._fileInput = this.query(\".fileInput\");\n\n        if (this._fileInput) {\n\n            this._fileInput.addEventListener(\"change\", () => {\n\n                if (this._fileInput.files?.[0]) {\n\n                    handleFile(this._fileInput.files[0]);\n                \n                }\n            \n            });\n\n        }\n\n        dropArea?.addEventListener(\"click\", () => {\n\n            this._fileInput?.click();\n        \n        });\n\n        dropArea?.addEventListener(\"dragover\", (e) => {\n\n            e.preventDefault();\n            dropArea.classList.add(\"dragover\");\n        \n        });\n\n        dropArea?.addEventListener(\"dragleave\", (e) => {\n\n            e.preventDefault();\n            dropArea.classList.remove(\"dragover\");\n        \n        });\n\n        dropArea?.addEventListener(\"drop\", (e) => {\n\n            e.preventDefault();\n            dropArea.classList.remove(\"dragover\");\n\n            const file = e.dataTransfer.files[0];\n            if (file) {\n\n                this._fileInput?.remove(); \n                const input = createInput();\n                dropArea.appendChild(input);\n                this._fileInput = input;\n                \n                handleFile(file);\n            }\n        \n        });\n\n        reuploadBtn?.addEventListener(\"click\", (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            this._fileInput?.remove();\n\n            const newInput = createInput();\n            dropArea.appendChild(newInput);\n            this._fileInput = newInput;\n\n            setTimeout(() => newInput.click(), 10);\n        \n        });\n\n    }\n\n    static { super.register(this); }\n\n}\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/inputs/file.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/inputs/input.js":
/*!****************************************************!*\
  !*** ./app/static/jay-comps/comps/inputs/input.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Input: () => (/* binding */ Input)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\n\nclass Input extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\n\n    label_ ;\n    type_;\n    prompt_;\n    required_ ;\n    error_;\n\n    set label(newLabel) {\n\n        this.label_ = newLabel;\n        this.update();\n    \n    }\n\n    set type(newType) {\n\n        this.type_ = newType;\n        this.update();\n    \n    }\n\n    set prompt(newPrompt) {\n\n        this.prompt_ = newPrompt;\n        this.update();\n    \n    }\n\n    set required (flag){\n\n        this.required_ = flag;\n        this.update();\n\n    }\n\n    get label() { return this.label_; }\n\n    get type() { return this.type_; }\n\n    get prompt() { return this.prompt_; }\n\n    get value() {\n\n        return this.shadowRoot.querySelector(\"input, textarea\").value;\n\n    }\n\n    get required(){ return this.required_; }\n\n    beforeRender(){\n        if (!this.label_) this.label_ = \"Text\";\n        if (!this. type_) this.type_ = \"Label\";\n        if (!this.prompt_) this.prompt_= \"This is placeholder\";\n        if (!this.required_) this.required_ = false;\n        if (!this.error_) this.error_ = false;\n    }\n\n    createHTML() {\n\n        return /* html */ `\n        <div class=\"inputContainer\">\n            <label style=\"color: var(--black80); font-size: 14px\">${this.label}</label>\n            <input class=\"inputValue\" type=\"${this.type}\" placeholder=\"${this.prompt}\">\n        </div>\n        `;\n    \n    }\n\n    createCSS() {\n        \n        return [\n            {\n                class: \"inputContainer\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                widthPercent: 100,\n                maxWidth: \"none\",\n                padding: 0,\n                alignItems: \"start\",\n                gap: 10,\n                background: \"white\"\n            },\n            {\n                class: \"inputValue\",\n                display: \"block\",\n                fontSize: 16,\n                widthPercent: 100,\n                padding: [8, 12],\n                borderVar: \"border\",\n                borderRadius: 8,\n                boxSizing: \"border-box\"\n            },\n            {\n                class: \"inputValue\",\n                pseudoClass: \"hover\",\n                outline: [\"solid\", 2, \"var(--black60)\"]\n            },\n            {\n                class: \"inputValue\",\n                pseudoClass: \"focus\",\n                outline: [\"solid\", 2, \"var(--black100)\"]\n            },\n            {\n                class: \"error\",\n                borderBottom: [\"solid\", 2, \"var(--red100)\"]\n            },\n            {\n                class: \"warning\",\n                borderBottom: [\"solid\", 2, \"var(--yellow100)\"]\n            },\n            {\n                class: \"success\",\n                borderBottom: [\"solid\", 2, \"var(--green100)\"],\n            },\n            {\n                class: \"hint\",\n                fontSizeEm: 0.75,\n                colour: \"black\",\n                paddingTop: 4\n            }\n        ];\n    }\n\n    isEmpty(){ return !this.value.trim(); }\n\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\n\n}\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/inputs/input.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/inputs/password.js":
/*!*******************************************************!*\
  !*** ./app/static/jay-comps/comps/inputs/password.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Password: () => (/* binding */ Password)\n/* harmony export */ });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.js */ \"./app/static/jay-comps/comps/inputs/input.js\");\n\n\nclass Password extends _input_js__WEBPACK_IMPORTED_MODULE_0__.Input {\n    enableEntropy_ = false;\n\n    set entropy(flag) {\n        this.enableEntropy_ = flag;\n        this.update();\n    }\n\n    set enableEntropy(flag) {\n        this.enableEntropy_ = flag;\n        this.update();\n    }\n\n    get enableEntropy() { return this.enableEntropy_; }\n    get entropy() { return this.enableEntropy_; }\n\n    beforeRender() { if (!this.enableEntropy_) this.enableEntropy_ = false; }\n\n    createHTML() {\n        return /* html */`\n            <div class=\"inputContainer\">\n\n                <label style=\"color: var(--black80); font-size: 14px\">${this.label_}</label>\n                <input class=\"inputValue\" type=\"password\" placeholder=\"${this.prompt_}\">\n\n                <div class=\"hint\" style=\"display: none\">\n                    Hint: Use a mix of letters, numbers, and symbols\n                </div>\n            </div>\n        `;\n    }\n\n\n    calculateEntropy(password) {\n\n        let poolSize = 0;\n        if (/[a-z]/.test(password)) poolSize += 26;\n        if (/[A-Z]/.test(password)) poolSize += 26;\n        if (/[0-9]/.test(password)) poolSize += 10;\n        if (/[^A-Za-z0-9]/.test(password)) poolSize += 32;\n\n        return password.length * Math.log2(poolSize || 1);\n    }\n\n    validateInput(input, hint, entropy) {\n        entropy < 78 && entropy > 0 ? hint.style.display = \"block\" : hint.style.display = \"none\";\n\n        if (entropy == 0) input.classList.remove(\"success\", \"warning\", \"error\");\n\n        else if (entropy < 60) {\n            input.classList.add(\"error\");\n            hint.textContent = \"Weak: Try adding symbols, numbers or uppercase letters.\";\n        } else if (entropy < 78) {\n            input.classList.add(\"warning\");\n            hint.textContent = \"Almost strong: Consider mixing symbols and length.\";\n        } else if (entropy > 78) {\n            input.classList.add(\"success\");\n        }\n    }\n\n    afterRender() {\n        const input = this.query(\".inputValue\");\n        const hint = this.query(\".hint\");\n\n        if (this.enableEntropy_) {\n            input.addEventListener(\"input\", () => {\n                const entropy = this.calculateEntropy(input.value);\n                this.validateInput(input, hint, entropy);\n            });\n        }\n    }\n\n    static { super.register(this); }\n}\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/inputs/password.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/inputs/textarea.js":
/*!*******************************************************!*\
  !*** ./app/static/jay-comps/comps/inputs/textarea.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Textarea: () => (/* binding */ Textarea)\n/* harmony export */ });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.js */ \"./app/static/jay-comps/comps/inputs/input.js\");\n\n\nclass Textarea extends _input_js__WEBPACK_IMPORTED_MODULE_0__.Input {\n\n    rows_;\n\n    set rows(newRows) {\n\n        this.rows_ = newRows;\n        this.update();\n\n    }\n\n    get rows() { return this.rows_; }\n\n    beforeRender() { if (!this.rows_) this.rows_ = 6; }\n\n    createHTML() {\n\n        return /* html */ `\n        <div class=\"inputContainer\">\n            <label style=\"color: var(--black80); font-size: 14px\">${this.label_}</label>\n            <textarea class=\"inputValue areaInput\" placeholder=\"${this.prompt_}\" rows=\"${this.rows_}\"></textarea>\n        </div>\n        `;\n\n    }\n\n    createCSS() {\n        return [\n            super.createCSS(),\n            {\n                class: \"areaInput\",\n                resize: \"none\",\n                height: 80,\n                widthPercent: 100,\n                borderVar: \"border\",\n                borderRadius: 8,\n                boxSizing: \"border-box\",\n                padding: [8, 12],\n                fontFamily: \"Geist\",\n            },\n        ];\n    }\n\n    static { super.register(this); }\n\n}\n\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/inputs/textarea.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/navbar.js":
/*!**********************************************!*\
  !*** ./app/static/jay-comps/comps/navbar.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Navbar: () => (/* binding */ Navbar)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\n\nclass Navbar extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\n\n    lastScrollY = window.scrollY;\n\n    createHTML() {\n\n        return /* html */ `\n        <div id=\"navbar\" class=\"container\">\n            <a><h3 class=\"logo\">Whondo</h3></a>\n            <ul class=\"links\">\n                <li class=\"link\">About</li>\n                <li class=\"link\">Landlord Portal</li>\n                <li class=\"link\">GitHub</li>\n            </ul>\n            <comp-icon class=\"menu\" id=\"menu\"></comp-icon>\n            <div class=\"buttons\">\n                <comp-button id=\"register\"></comp-button>\n                <comp-button id=\"login\"></comp-button>\n            </div>\n        </div>\n\n        <div id=\"tray\" class=\"tray\">\n            <div class=\"header\">\n                <a><h3 class=\"logo\">Whondo</h3></a>\n                <comp-icon class=\"close\" id=\"close\"></comp-icon>\n            </div>\n\n            <ul class=\"linksTray\">\n                <li class=\"link\">About</li>\n                <li class=\"link\">Landlord Portal</li>\n                <li class=\"link\">GitHub</li>\n            </ul>\n\n            <div class=\"trayButtons\">\n                <comp-button id=\"registerMob\"></comp-button>\n                <comp-button id=\"loginMob\"></comp-button>\n            </div>\n        </div>\n        \n        `;\n    \n    }\n\n    createCSS() {\n        \n        return [\n            {\n                class: \"container\",\n                top: \"0\",\n                zIndex: \"1000\",\n                position: \"fixed\",\n                display: \"flex\",\n                alignItems: \"centre\",\n                widthPercent: 100,\n                background: \"white\",\n                boxSizing: \"border-box\",\n                padding: [10, 20],\n                justifyContent: \"space-between\",\n                transition: [\"top\",  \"0.4s\"]\n            },\n            {\n                class: \"logo\",\n                fontWeight: \"bold\",\n                media: {\n                    maxWidthBp: 600,\n                    fontSize: 28\n                }\n            },\n            {\n                class: \"links\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"centre\",\n                gap: 20\n            },\n            // Navbar links\n            {\n                class: \"link\",\n                colourVar: \"black80\",\n                fontSize: 16,\n                padding: 10,\n                borderVar: \"borderDefault\",\n                borderRadius: 8,\n                listStyleType: \"None\",\n                cursor: \"pointer\",\n                transition: [\"background\", \"0.1s\", \"ease-in-out\"]\n            },\n            {\n                class: \"link\",\n                colourVar: \"black100\",\n                pseudoClass: \"hover\",\n                borderVar: \"border\",\n                backgroundVar: \"black10\"\n            },\n            {\n                class: \"link\",\n                pseudoClass: \"active\",\n                backgroundVar: \"black20\"\n            },\n            {\n                class: \"menu\",\n                display: \"None\",\n                media: {\n                    maxWidthBp: 600,\n                    display: \"block\"\n                }\n            },\n            {\n                class: \"close\",\n                display: \"None\",\n                media: {\n                    maxWidthBp: 600,\n                    display: \"block\"\n                }\n            },\n            {\n                class: \"buttons\",\n                display: \"flex\",\n                width: \"auto\",\n                gap: 20,\n                media: {\n                    maxWidthBp: 600,\n                    display: \"none\"\n                }\n            },\n            {\n                class: \"tray\",\n                display: \"None\"\n            },\n            // Media quuery adjustments\n            {\n                media: {\n                    maxWidthBp: 600,\n                    class: \"header\",\n                    display: \"flex\",\n                    alignItems: \"centre\",\n                    justifyContent: \"space-between\"\n                }\n            },\n            {\n                media: {\n                    maxWidthBp: 600,\n                    class: \"links\",\n                    display: \"None\"\n                }\n            \n            },\n            {\n                media: {\n                    maxWidthBp: 600,\n                    class: \"tray\",\n                    display: \"flex\",\n                    bottom: \"-500px\",\n                    position: \"fixed\",\n                    zIndex: \"1000\",\n                    boxSizing: \"border-box\",\n                    flexDirection: \"column\",\n                    widthPercent: 100,\n                    background: \"white\",\n                    padding: 20,\n                    borderRadius: 14,\n                    transition: [\"bottom\", \"0.6s\"]\n                }\n            \n            },\n            {\n                media: {\n                    maxWidthBp: 600,\n                    class: \"trayButtons\",\n                    display: \"flex\",\n                    gap: 10,\n                    paddingTop: 40\n                }\n           \n            }\n\n        ];\n    \n    }\n\n    /**\n     * @brief Function hides/shows the navbar on scroll.\n     * \n     * The function takes the current Y position of the navbar and checks if the current pixel difference is greater than 20px.\n     * If so then the top is increased to hide the element then the last Y position is updated to reflect the change.\n     */\n    navbarScroll() {\n\n        const navbar     = this.getById(\"navbar\");\n        const currentPos = window.scrollY;\n        \n        if (currentPos > this.lastScrollY && currentPos > 20) navbar.style.top = \"-80px\";\n        else navbar.style.top = \"0\";\n        \n        this.lastScrollY = currentPos;\n    \n    }\n\n    openMenu(offset) {\n\n        const tray        = this.getById(\"tray\");\n        tray.style.bottom = offset;\n    \n    }\n\n    afterRender() {\n        \n        const register    = this.getById(\"register\");\n        const login       = this.getById(\"login\");\n        const menu        = this.getById(\"menu\");\n        const close       = this.getById(\"close\");\n        const loginMob    = this.getById(\"loginMob\");\n        const registerMob = this.getById(\"registerMob\");\n        \n        register.text       = \"Register\";\n        register.variant    = 2;\n        login.text          = \"login\";\n        menu.path           = \"menu.svg\";\n        close.path          = \"close.svg\";\n        loginMob.text       = \"Login\";\n        registerMob.text    = \"Register\";\n        registerMob.variant = 2;\n\n        window.addEventListener(\"scroll\", this.navbarScroll.bind(this));\n\n        menu.addEventListener(\"click\", () => {\n\n            this.openMenu(\"0\");\n        \n        });\n\n        close.addEventListener(\"click\", () => {\n\n            this.openMenu(\"-500px\");\n        \n        });\n    \n    } \n    \n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); } \n\n}\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/navbar.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/imports.js":
/*!*****************************************!*\
  !*** ./app/static/jay-comps/imports.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n/* harmony import */ var _comps_button_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./comps/button.js */ \"./app/static/jay-comps/comps/button.js\");\n/* harmony import */ var _comps_card_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./comps/card.js */ \"./app/static/jay-comps/comps/card.js\");\n/* harmony import */ var _comps_inputs_input_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./comps/inputs/input.js */ \"./app/static/jay-comps/comps/inputs/input.js\");\n/* harmony import */ var _comps_dialog_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./comps/dialog.js */ \"./app/static/jay-comps/comps/dialog.js\");\n/* harmony import */ var _comps_icon_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./comps/icon.js */ \"./app/static/jay-comps/comps/icon.js\");\n/* harmony import */ var _comps_navbar_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./comps/navbar.js */ \"./app/static/jay-comps/comps/navbar.js\");\n/* harmony import */ var _comps_inputs_password_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./comps/inputs/password.js */ \"./app/static/jay-comps/comps/inputs/password.js\");\n/* harmony import */ var _comps_inputs_file_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./comps/inputs/file.js */ \"./app/static/jay-comps/comps/inputs/file.js\");\n/* harmony import */ var _comps_inputs_textarea_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./comps/inputs/textarea.js */ \"./app/static/jay-comps/comps/inputs/textarea.js\");\n/* harmony import */ var _comps_ibutton_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./comps/ibutton.js */ \"./app/static/jay-comps/comps/ibutton.js\");\n/* harmony import */ var _comp_pages_login_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./comp-pages/login.js */ \"./app/static/jay-comps/comp-pages/login.js\");\n/* harmony import */ var _comp_pages_register_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./comp-pages/register.js */ \"./app/static/jay-comps/comp-pages/register.js\");\n/* harmony import */ var _comp_pages_verified_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./comp-pages/verified.js */ \"./app/static/jay-comps/comp-pages/verified.js\");\n/* harmony import */ var _comp_pages_create_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./comp-pages/create.js */ \"./app/static/jay-comps/comp-pages/create.js\");\n/* harmony import */ var _comp_pages_home_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./comp-pages/home.js */ \"./app/static/jay-comps/comp-pages/home.js\");\n\n// Comp src file\n\n\n// Comps\n\n\n\n\n\n\n\n\n\n\n\n// Pages\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/imports.js?\n}");

/***/ }),

/***/ "./node_modules/jay-comp/dist/api.js":
/*!*******************************************!*\
  !*** ./node_modules/jay-comp/dist/api.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API: () => (/* binding */ API)\n/* harmony export */ });\n/**\n * Copyright (c) 2025 Josh Bassett\n *\n * Filename:    api.ts\n * Author:      Josh Bassett\n * Date:        08/06/2025\n * Version:     1.0\n *\n * Licence:     Apache 2.0\n */\n;\n/**\n * Class for HTTP requests.\n *\n * Provides a method `request` to abstract from JavaScript's `fetch` API.\n */\nclass API {\n    /**\n     * API perfoms a GET or POST HTTP Request.\n     *\n     * The method provides a nice abstraction to the fetch API to help developers\n     * focus on the response rather than the request details.\n     */\n    async request(url, method, data) {\n        if (method !== \"POST\" && method !== \"GET\") {\n            return {\n                ok: false,\n                status: 0,\n                error: `Unsupported HTTP method: ${method}`\n            };\n        }\n        const options = {\n            method: method,\n            headers: { \"Content-Type\": \"application/json\" }\n        };\n        if (method === \"POST\")\n            options.body = JSON.stringify(data);\n        try {\n            const response = await fetch(url, options);\n            const result = { ok: response.ok, status: response.status };\n            try {\n                const data = await response.json();\n                if (result.ok)\n                    result.data = data;\n                else\n                    result.error = data?.message || JSON.stringify(data);\n            }\n            catch (jsonErr) {\n                if (!response.ok)\n                    result.error = `HTTP ${response.status} ${response.statusText}`;\n            }\n            return result;\n        }\n        catch (networkErr) {\n            return {\n                ok: false,\n                status: 0,\n                error: networkErr.message || String(networkErr)\n            };\n        }\n    }\n    /**\n     * Sends a `FormData` payload via POST using `fetch()`, returns parsed JSON.\n     */\n    async submitForm(url, formData) {\n        const init = {\n            method: \"POST\",\n            body: formData\n        };\n        try {\n            const response = await fetch(url, init);\n            const result = { ok: response.ok, status: response.status };\n            try {\n                const data = await response.json();\n                if (result.ok)\n                    result.data = data;\n                else\n                    result.error = data?.error || JSON.stringify(data);\n            }\n            catch (jsonErr) {\n                if (!response.ok)\n                    result.error = `HTTP ${response.status} ${response.statusText}`;\n            }\n            return result;\n        }\n        catch (networkErr) {\n            return {\n                ok: false,\n                status: 0,\n                error: networkErr.message || String(networkErr)\n            };\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/jay-comp/dist/api.js?\n}");

/***/ }),

/***/ "./node_modules/jay-comp/dist/comp.js":
/*!********************************************!*\
  !*** ./node_modules/jay-comp/dist/comp.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Comp: () => (/* binding */ Comp)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./node_modules/jay-comp/dist/api.js\");\n/* harmony import */ var _design_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./design.js */ \"./node_modules/jay-comp/dist/design.js\");\n/* harmony import */ var _effects_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./effects.js */ \"./node_modules/jay-comp/dist/effects.js\");\n/**\n * Copyright (c) 2025 Josh Bassett\n *\n * Filename:    comp.ts\n * Author:      Josh Bassett\n * Date:        08/06/2025\n * Version:     1.4\n *\n * Licence:     Apache 2.0\n */\n\n\n\n/**\n * # Comp\n *\n * Abstract base class for creating components that encapsulates:\n * - Shadow DOM setup\n * - Template rendering (HTML + CSS injection)\n * - Data fetching (`request()`, `submitForm()`, `fetchOnce()`)\n * - Event pub/sub (`publish()`, `subscribe()`)\n * - CSS generation from native JavaScript objects with media queries & keyframes\n * - Lifecycle hooks (`beforeRender()`, `createHTML()`, `createCSS()`, `afterRender()`)\n * - Helpers for accessing internal elements (`getById()`, `query()`, `queryAll()`)\n *\n * ## Overview\n *\n * 1. `beforeRender()` runs before any DOM or CSS is injected.\n * 2. An open shadow root is attached.\n * 3. `createHTML()` and `createCSS()` generate the markup and styles.\n * 4. HTML/CSS are injected via `render()`.\n * 5. `afterRender()` runs to wire up event listeners or start effects.\n *\n * ## CSS Generation\n *\n * Build scoped styles from `CSSConfig` or an array of them.\n * Supports:\n * - **Standard rules:** `class`, `pseudoClass`, fallback to `:host`\n * - **Media queries:** use `media` key with breakpoint props (e.g. `maxWidthBp`, nested configs)\n * - **Keyframes:** use `keyframes` key for pure or hybrid `@keyframes` blocks\n * - **Operators:** append suffixes to camelCase props for units/functions\n *\n * ### Operators\n * - `Percent` -> `%`\n * - `Var`     -> `var(--<value>)`\n * - `Url`     -> `url(<value>)`\n * - `Calc`    -> `calc(<value>)`\n * - `Em`      -> `em`\n * - `Rem`     -> `rem`\n * - `Vw`      -> `vw`\n * - `Vh`      -> `vh`\n * - `Vmin`    -> `vmin`\n * - `Vmax`    -> `vmax`\n * - `Ch`      -> `ch`\n * - `Ex`      -> `ex`\n * - `Pt`      -> `pt`\n * - `Pc`      -> `pc`\n * - `In`      -> `in`\n * - `Cm`      -> `cm`\n * - `Mm`      -> `mm`\n * - `Fr`      -> `fr`\n * - `S`       -> `s`\n * - `Ms`      -> `ms`\n * - `Deg`     -> `deg`\n * - `Rad`     -> `rad`\n * - `Grad`    -> `grad`\n * - `Turn`    -> `turn`\n * - `Dpi`     -> `dpi`\n * - `Dpcm`    -> `dpcm`\n * - `Dppx`    -> `dppx`\n * - `Q`       -> `q`\n * - `Hz`      -> `Hz`\n * - `KHz`     -> `kHz`\n *\n * ## Event Pub/Sub\n *\n * - **publish(name, detail?)**\n *   Dispatch a bubbling, composed `CustomEvent`.\n *\n * - **subscribe<T>(name, listener, options?, autoCleanup?)**\n *   Listen for an event, deduplicate by name, and auto-unsubscribe on disconnect.\n *   Returns an unsubscribe function.\n *\n * ## Data Fetching\n *\n * - **request<Api>(url, method, data?)**\n *   JSON GET/POST helper returning typed data.\n *\n * - **submitForm<Api>(url, form \\| FormData \\| Record)**\n *   Multipart form POST returning parsed JSON.\n *\n * - **fetchOnce<Key,Value>(key, fetcher)**\n *   Memoised fetch to avoid duplicate requests in a render cycle.\n *\n * ## Properties\n *\n * - **design** (`Design`)   — style builder & default host rules\n * - **api** (`API`)         — HTTP & submission helpers\n * - **effect** (`Effects`)  — animation & side-effect utilities\n *\n * ## Methods\n *\n * - `render()`\n * - `update(html?, css?)`\n * - `css(config \\| config[])`\n * - `beforeRender()`\n * - `createHTML()`\n * - `createCSS()`\n * - `afterRender()`\n * - `publish()` / `subscribe()`\n * - `request()` / `submitForm()` / `fetchOnce()`\n *\n * ## Example\n *\n * ```ts\n *\n * class MyComp extends Comp {\n *   private msg: string;\n *\n *   beforeRender() {\n *      if (!this.msg) this.msg = \"Hello Jay!\";\n *   }\n *\n *   createHTML() { return `<button>${this.msg}</button>`; }\n *\n *   createCSS() {\n *     return [\n *       {\n *         class: \"btn\",\n *         backgroundVar: \"primary\",\n *         colour: \"white\",\n *         padding: [8,16],\n *         borderRadiusPercent: 50,\n *         media: {\n *           maxWidthBp: 600,\n *           padding: 5\n *         }\n *       },\n *       {\n *         keyframes: {\n *           name: \"pulse\",\n *           from: { opacity: 1 },\n *           \"50%\": { opacity: 0.5 },\n *           to: { opacity: 1 }\n *         }\n *       }\n *     ];\n *   }\n *\n *   afterRender() {\n *     this.subscribe(\"pulse-done\", () => console.log(\"done\"));\n *   }\n *\n *   static { Comp.register(this); }\n * }\n * ```\n */\nclass Comp extends HTMLElement {\n    /**\n     * ## register\n     *\n     * Registers a `Comp` subclass as a custom element under the “comp-…” namespace.\n     *\n     * ### Behavior\n     * - Converts class name to kebab-case\n     * - Prefixes the result with `\"comp-\"`\n     * - Calls `customElements.define()` once, avoiding duplicate registrations\n     *\n     * ### Parameters\n     * - `ctor: typeof Comp`\n     *   The subclass constructor that you want to register.\n     *\n     * ### Errors\n     * Throws an `Error` if stripping “Comp” yields an empty string (i.e. the class is\n     * named just `\"Comp\"` or doesn’t end in `\"Comp\"`).\n     *\n     * ### Example\n     * ```ts\n     * export class UserLoginPageComp extends Comp {\n     *   // … your createHTML/createCSS/hook …\n     *\n     *   // auto-register at load time\n     *   static {\n     *     Comp.register(this);\n     *   }\n     * }\n     *\n     * // After import, <comp-user-login-page> is available in the DOM\n     * ```\n     */\n    static register(ctor) {\n        const raw = ctor.name;\n        if (!raw)\n            throw new Error(`Can't auto-derive tag for ${ctor.name}`);\n        const tag = \"comp-\" + raw\n            .replace(/([a-z0-9])([A-Z])/g, \"$1-$2\")\n            .toLowerCase();\n        if (!Comp._registry.has(tag)) {\n            customElements.define(tag, ctor);\n            Comp._registry.add(tag);\n        }\n    }\n    constructor() {\n        super();\n        this.api = new _api_js__WEBPACK_IMPORTED_MODULE_0__.API();\n        this.effect = new _effects_js__WEBPACK_IMPORTED_MODULE_2__.Effects();\n        this.design = new _design_js__WEBPACK_IMPORTED_MODULE_1__.Design();\n        this.asyncStore = {};\n        this.unsubscribers_ = [];\n        this.listeners = new Map();\n        this.attachShadow({ mode: \"open\" });\n        this.render();\n    }\n    /**\n     * ## render\n     *\n     * Injects the component’s HTML and CSS into its shadow root and re-attaches logic.\n     *\n     * ### Behaviour\n     *  - If `beforeRender()` is implemented, invokes it immediately before DOM injection.\n     * - Calls `createHTML()` to get the latest HTML fragment.\n     * - Calls `createCSS()` to get the latest CSS string.\n     * - Sets `shadowRoot.innerHTML` to the combined template (via `createTemplate`).\n     * - If `afterRender()` is implemented, invokes it immediately after DOM injection.\n     * - Throws an Error if the shadow root is unavailable.\n     *\n     * ### Throws\n     * - `Error` if `this.shadowRoot` is `null` or undefined.\n     *\n     * ### Returns\n     * - `void`\n     *\n     * ### Example\n     * ```js\n     * // After subclass initialization, simply:\n     * this.render();\n     *\n     * // Or as part of a lifecycle:\n     * connectedCallback() {\n     *   // ensure all state is ready\n     *   this.render();\n     * }\n     * ```\n     */\n    render() {\n        if (!this.shadowRoot)\n            throw new Error(\"Shadow root is not available.\");\n        if (typeof this.beforeRender === \"function\")\n            this.beforeRender();\n        this.shadowRoot.innerHTML = this.createTemplate(this.createHTML(), this.compileCSSObjects(this.createCSS()));\n        if (typeof this.afterRender === \"function\")\n            this.afterRender();\n    }\n    /**\n     * Helper method conpiles CSSConfig objects into strings.\n     */\n    compileCSSObjects(css) {\n        const rawArray = Array.isArray(css) ? this.flatten(css) : [css];\n        return rawArray.map(entry => {\n            if (typeof entry === \"string\")\n                return entry;\n            else\n                return this.design.create(entry);\n        }).join(\"\\n\");\n    }\n    /**\n     * Helper method flattens arrays and compiles each config recursively.\n     */\n    flatten(items, out = []) {\n        for (const item of items) {\n            if (Array.isArray(item))\n                this.flatten(item, out);\n            else\n                out.push(item);\n        }\n        return out;\n    }\n    ;\n    /**\n     * ## update\n     *\n     * Re-renders the component by injecting fresh HTML and CSS into its shadow root.\n     *\n     * ### Behaviour\n     * - If both `newHTML` and `newCSS` are supplied, uses those values directly.\n     * - If either argument is omitted, calls the corresponding\n     *   `createHTML()` or `createCSS()` override to regenerate the missing piece.\n     * - Throws if the component’s shadow root is not attached.\n     * - After updating the DOM, invokes `hook()` so event listeners and other logic\n     *   are wired up again.\n     *\n     * ### Parameters\n     * - `newHTML?` (`string`): Optional HTML fragment to inject.\n     *   If omitted, runs `this.createHTML()`.\n     * - `newCSS?` (`string`): Optional CSS string to inject.\n     *   If omitted, runs `this.createCSS()`.\n     *\n     * ### Example\n     * ```js\n     * // Case 1: update both HTML and CSS explicitly\n     * this.update(\n     *   `<p>${this.message}</p>`,\n     *   this.css({ color: \"red\" })\n     * );\n     *\n     * // Case 2: regenerate from your subclass methods\n     * set message(text) {\n     *   this.message = text;\n     *   this.update();         // calls createHTML/createCSS internally\n     * }\n     * ```\n     */\n    update(newHTML, newCSS) {\n        if (!this.shadowRoot)\n            throw new Error(\"No shadow root\");\n        if (typeof this.beforeRender === \"function\")\n            this.beforeRender();\n        const html = newHTML || this.createHTML();\n        const css = newCSS || this.createCSS();\n        this.shadowRoot.innerHTML = this.createTemplate(html, this.compileCSSObjects(css));\n        if (typeof this.afterRender === \"function\")\n            this.afterRender();\n    }\n    /**\n     * ## request\n     *\n     * Performs an HTTP GET or POST and returns the parsed JSON body.\n     *\n     * ### Behaviour\n     * - Validates that `method` is `\"GET\"` or `\"POST\"`.\n     * - For POST, serialises `data` to JSON.\n     * - Throws on non-2xx responses or network errors.\n     *\n     * ### Type Parameters\n     * - `T` – the expected shape of the JSON response.\n     *\n     * ### Parameters\n     * - `url` (`string`): endpoint URL (absolute or relative).\n     * - `method` (`\"GET\" | \"POST\"`): HTTP verb.\n     * - `data?` (`object`): request payload for POST; ignored for GET.\n     *\n     * ### Returns\n     * `Promise<ApiResponseT>` – the deserialised JSON response.\n     * - `ok`: boolean\n     * - `status`: number\n     * - `data`?: T\n     * - `error`?: string\n     *\n     * ### Example\n     * ```ts\n     * // GET\n     * const usersResp = await this.request<User[]>(\"/api/users\", \"GET\");\n     * if (usersResp.ok) {\n     *     console.log(\"Got users:\", usersResp.data);\n     * } else {\n     *    console.error(\"Fetch users failed:\", usersResp.status, usersResp.error);\n     * }\n     *\n     * // POST\n     * const loginResp = await this.request<{ token: string }>(\"/api/login\", \"POST\",{ user: \"alice\", pass: \"s3cret\" });\n     *\n     * if (loginResp.ok) {\n     *    console.log(\"JWT =\", loginResp.data.token);\n     * } else {\n     *    console.error(\"Login error:\", loginResp.status, loginResp.error);\n     * }\n     * ```\n     */\n    async request(url, method, data) {\n        return this.api.request(url, method, data);\n    }\n    /**\n     * ## submitForm\n     *\n     * Gathers form data (from a form element, `FormData` instance, or plain object)\n     * and sends it via `multipart/form-data` POST, returning parsed JSON.\n     *\n     * ### Behaviour\n     * - If passed an `HTMLFormElement`, calls `new FormData(form)` to capture all fields.\n     * - If passed a `FormData` instance, sends it directly.\n     * - If passed a plain object, converts each key/value pair into FormData entries.\n     * - Uses `fetch()` under the hood and throws on non-2xx responses or network errors.\n     *\n     * ### Type Parameters\n     * - `T` – the expected shape of the JSON response.\n     *\n     * ### Parameters\n     * - `url` (`string`): the endpoint URL to POST to.\n     * - `data` (`HTMLFormElement | FormData | Record<string, any>`):\n     *   - An `HTMLFormElement` to be serialised\n     *   - A `FormData` object\n     *   - A plain object which will be converted to `FormData`\n     *\n     * ### Returns\n     * `Promise<T>` – the parsed JSON response body.\n     *\n     * ### Examples\n     *\n     * // 1) Passing a form element\n     * ```ts\n     *\n     * const form = document.querySelector('form')!;\n     * const result = await this.submitForm<{ success: boolean }>(\n     *   \"/api/profile\",\n     *   form\n     * );\n     * ```\n     *\n     * // 2) Passing a FormData instance\n     * ```ts\n     *\n     * const fd = new FormData();\n     * fd.append(\"username\", \"jay\");\n     * const result = await this.submitForm<{ id: number }>(\n     *   \"/api/users\",\n     *   fd\n     * );\n     * ```\n     *\n     * // 3) Passing a plain object\n     * ```ts\n     *\n     * const data = { name: \"Alice\", age: 30, newsletter: true };\n     * const result = await this.submitForm<{ status: \"ok\" }>(\n     *   \"/api/subscribe\",\n     *   data\n     * );\n     * ```\n     */\n    async submitForm(url, data) {\n        let formData;\n        if (data instanceof HTMLFormElement)\n            formData = new FormData(data);\n        else if (data instanceof FormData)\n            formData = data;\n        else {\n            formData = new FormData();\n            for (const [k, v] of Object.entries(data)) {\n                formData.append(k, String(v));\n            }\n        }\n        return this.api.submitForm(url, formData);\n    }\n    /**\n     * ## fetchOnce\n     *\n     * Fetches data exactly once for a given key and returns a live cache entry\n     * that tracks loading, success and error states. Subsequent calls with the\n     * same key return the cached result instead of re‐invoking the loader.\n     *\n     * ### Behavior\n     * - On first invocation the fetched data is stored within the component's `asyncStore`.\n     * - On subsequent calls, the data is retrieved from `asyncStore`\n     *\n     * ### Type Parameters\n     * - `T` – The expected element type.\n     *\n     * ### Parameters\n     * - `key` (`string`): The desired key from the request response.\n     * - `loader` (`Promise<T>`): A function that returns a `Promise<T>`. Called only once.\n     *\n     * ### Returns\n     * `FetchEntry<T>` – the fetched response object.\n     *\n     * ### Example\n     * ```ts\n     *\n     * // TypeScript\n     * createHTML() {\n     *   const { value: fact, loading, error } = this.fetchOnce<string>(\n     *     \"catFact\",\n     *     () => this.request(\"/fact\", \"GET\")\n     *          .then(res => res.ok ? res.data.fact : Promise.reject(res.error))\n     *   );\n     *\n     *   if (loading) return `<h1>Loading a random cat fact…</h1>`;\n     *   if (error) return `<h1>Failed to load fact: ${error}</h1>`;\n     *\n     *   return `<h1 class=\"fact\">${fact}</h1>`;\n     * }\n     * ```\n    */\n    fetchOnce(key, loader) {\n        let entry = this.asyncStore[key];\n        if (entry)\n            return entry;\n        entry = { value: undefined, loading: true, error: undefined };\n        this.asyncStore[key] = entry;\n        loader().then(result => {\n            entry.value = result;\n            entry.error = undefined;\n            entry.loading = false;\n            this.update();\n        }).catch(err => {\n            entry.error = err?.message || err;\n            entry.loading = false;\n            this.update();\n        });\n        return entry;\n    }\n    /**\n     * ## publish\n     *\n     * Dispatches a custom event from this element with an optional payload.\n     *\n     * ### Behaviour\n     * - Creates and dispatches a `CustomEvent` using `this.dispatchEvent`.\n     * - Event bubbles (`bubbles: true`) and crosses shadow DOM boundaries (`composed: true`).\n     *\n     * ### Parameters\n     * - `name` (`string`):\n     *   The event type/name to publish (e.g. `\"data-loaded\"`).\n     * - `detail` (`unknown`, optional):\n     *   Any data to attach to the event’s `detail` property.\n     *\n     * ### Returns\n     * `void`\n     *\n     * ### Examples\n     * ```ts\n     * // Notify that user data has loaded\n     * this.publish(\"user-loaded\", { id: 42, name: \"Alice\" });\n     *\n     * // Fire a simple ping with no payload\n     * this.publish(\"ping\");\n     * ```\n     */\n    publish(name, detail) {\n        this.dispatchEvent(new CustomEvent(name, {\n            detail: detail,\n            bubbles: true,\n            composed: true\n        }));\n    }\n    /**\n     * ## subscribe\n     *\n     * Registers a listener for a named event on this element (or its descendants).\n     * Listener is unsubscribed automatically when the component is removed.\n     *\n     * ### Behaviour\n     * - Removes any existing listener for the same `name` before adding a new one.\n     * - Wraps the user callback so it receives a strongly-typed `CustomEvent<T>`.\n     * - Stores an unsubscribe function for manual removal or automatic teardown.\n     *\n     * ### Type Parameters\n     * - `T` – The shape of the event’s `detail` payload.\n     *\n     * ### Parameters\n     * - `name` (`string`):\n     *   The event type to listen for (e.g. `\"data-loaded\"`).\n     * - `listener` (`(evt: CustomEvent<T>) => void`):\n     *   Callback invoked with the event when it fires.\n     * - `options` (`boolean | AddEventListenerOptions`, optional):\n     *   Standard `addEventListener` options (`capture`, `once`, etc.).\n     * - `autoCleanup` (`boolean`, default `true`):\n     *   If true, the listener is automatically removed in `disconnectedCallback`.\n     *\n     * ### Returns\n     * `() => void` – A function that, when called, removes this listener immediately.\n     *\n     * ### Examples\n     * ```ts\n     * // Listen for a custom event and log its detail\n     * const unsub = this.subscribe<{ items: number[] }>(\n     *   \"data-loaded\",\n     *   evt => console.log(evt.detail.items)\n     * );\n     *\n     * // Manually unsubscribe before removal or leave to be unsubscribed on removal\n     * unsub();\n     * ```\n     */\n    subscribe(name, listener, options, autoCleanup = true) {\n        if (this.listeners.has(name)) {\n            const old = this.listeners.get(name);\n            this.removeEventListener(name, old, options);\n        }\n        const bound = (e) => listener(e);\n        this.listeners.set(name, bound);\n        this.addEventListener(name, bound, options);\n        const unsubscribe = () => {\n            this.removeEventListener(name, bound, options);\n            this.listeners.delete(name);\n        };\n        if (autoCleanup)\n            this.unsubscribers_.push(unsubscribe);\n        return unsubscribe;\n    }\n    /**\n     * ## disconnectedCallback\n     *\n     * Lifecycle hook invoked when the element is removed from the document.\n     *\n     * ### Behaviour\n     * - Calls all stored unsubscribe functions to remove active listeners.\n     * - Clears internal maps and lists to prevent memory leaks.\n     *\n     * ### Returns\n     * `void`\n     *\n     * ### Examples\n     * ```ts\n     * // No manual action needed; all listeners auto-clean up on disconnect.\n     * ```\n     */\n    disconnectedCallback() {\n        this.unsubscribers_.forEach(unsub => unsub());\n        this.unsubscribers_.length = 0;\n    }\n    /**\n     * ## getById\n     *\n     * Retrieves an element from the shadow DOM by its ID.\n     *\n     * ### Behaviour\n     * - Strips a leading `#` if provided.\n     * - Delegates to `shadowRoot.getElementById`.\n     * - Returns `null` when no matching element is found.\n     *\n     * ### Type Parameters\n     * - `T` – The expected element type (defaults to `HTMLElement`).\n     *\n     * ### Parameters\n     * - `id` (`string`):\n     *   The identifier of the element, with or without a leading `#`.\n     *\n     * ### Returns\n     * `T | null` – The element matching the ID, or `null` if none exists.\n     *\n     * ### Examples\n     * ```ts\n     * // Lookup without '#'\n     * const btn = this.getById<HTMLButtonElement>('submitBtn');\n     * btn?.addEventListener('click', () => console.log('Clicked'));\n     *\n     * // Lookup with '#'\n     * const input = this.getById<HTMLInputElement>('#usernameInput');\n     * if (input) input.value = 'alice';\n     * ```\n     */\n    getById(id) {\n        const clean = id.startsWith('#') ? id.slice(1) : id;\n        return this.shadowRoot.getElementById(clean);\n    }\n    /**\n     * ## query\n     *\n     * Selects the first element in the shadow DOM matching a CSS selector.\n     *\n     * ### Behaviour\n     * - Delegates to `shadowRoot.querySelector`.\n     * - Returns `null` when no matching element is found.\n     *\n     * ### Type Parameters\n     * - `T` – The expected element type (defaults to `Element`).\n     *\n     * ### Parameters\n     * - `sel` (`string`):\n     *   A valid CSS selector (e.g. `'.foo'`, `'button'`, `'#bar'`, `[data-test]`, etc.).\n     *\n     * ### Returns\n     * `T | null` – The first matching element, or `null` if none exists.\n     *\n     * ### Examples\n     * ```ts\n     * // Query a single item\n     * const item = this.query<HTMLLIElement>('ul > li.active');\n     *\n     * // Query an input by attribute\n     * const email = this.query<HTMLInputElement>('input[name=\"email\"]');\n     * ```\n     */\n    query(sel) {\n        return this.shadowRoot.querySelector(sel);\n    }\n    /**\n     * ## queryAll\n     *\n     * Selects all elements in the shadow DOM matching a CSS selector.\n     *\n     * ### Behaviour\n     * - Delegates to `shadowRoot.querySelectorAll`.\n     * - Always returns a `NodeListOf<T>`, which may be empty.\n     *\n     * ### Type Parameters\n     * - `T` – The expected element type (defaults to `Element`).\n     *\n     * ### Parameters\n     * - `sel` (`string`):\n     *   A valid CSS selector for matching multiple elements.\n     *\n     * ### Returns\n     * `NodeListOf<T>` – A live list of all matching elements (empty if none).\n     *\n     * ### Examples\n     * ```ts\n     * // Get all active list items\n     * const items = this.queryAll<HTMLLIElement>('ul > li.active');\n     * items.forEach(li => li.style.color = 'red');\n     *\n     * // Get every button in the shadow root\n     * const buttons = this.queryAll<HTMLButtonElement>('button');\n     * buttons.forEach(btn => (btn.disabled = true));\n     * ```\n     */\n    queryAll(sel) {\n        return this.shadowRoot.querySelectorAll(sel);\n    }\n    /**\n     * Helper method that creates a template from component's HTML/CSS\n     */\n    createTemplate(html, css) {\n        return /* html */ `\n        ${html}\n        <style>\n        ${this.design.defaultComp()}\n        ${css}\n        </style>\n        `;\n    }\n}\nComp._registry = new Set();\n\n\n//# sourceURL=webpack:///./node_modules/jay-comp/dist/comp.js?\n}");

/***/ }),

/***/ "./node_modules/jay-comp/dist/design.js":
/*!**********************************************!*\
  !*** ./node_modules/jay-comp/dist/design.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Design: () => (/* binding */ Design)\n/* harmony export */ });\n/**\n * Copyright (c) 2025 Josh Bassett\n *\n * Filename:    design.ts\n * Author:      Josh Bassett\n * Date:        09/06/2025\n * Version:     1.4\n *\n * Licence:     Apache 2.0\n */\nclass Design {\n    /**\n     * Getter and Settter methods\n     */\n    set hostOverride(hostCSS) { this.hostOverride_ = hostCSS; }\n    get hostOverride() { return this.hostOverride_; }\n    /**\n     * API provides default values to be injected into every Comp when rendered.\n     */\n    defaultComp() {\n        return /* css */ `${this.resetStyles()}${this.hostOverride_ ? this.hostOverride_ : this.defaultHost()}${this.defaultFontStyle()}`;\n    }\n    /**\n     * Helper method provides standard reset values.\n     */\n    resetStyles() {\n        return `\n* {margin: 0; padding: 0;}`;\n    }\n    /**\n     * Helper method provides default :host config.\n     */\n    defaultHost() {\n        return `\n:host {display: block; width: 100%; box-sizing: border-box;}`;\n    }\n    /**\n     * Helper method provides default font styles modelled on Material Design 3 typography.\n     */\n    defaultFontStyle() {\n        return /* css */ `\nh1 {font-size: 57px; font-weight: 500; line-height: 64pt;}\nh2 {font-size: 45px; font-weight: 500; line-height: 52pt;}\nh3 {font-size: 36px; font-weight: 500; line-height: 44pt;}\nh4 {font-size: 32px; font-weight: 400; line-height: 40pt;}\nh5 {font-size: 28px; font-weight: 400; line-height: 36pt;}\nh6 {font-size: 24px; font-weight: 400; line-height: 32pt;}\np {font-size: 16px; font-weight: 400; line-height: 24pt;}\nlabel {font-size: 12px; font-weight: 500; line-height: 16pt;}`;\n    }\n    /**\n     * API abstracted through the Comp class, provides a method to build a CSS string.\n     *\n     * Method compiles base CSS and then appends media queries if applicable.\n     */\n    create(css) {\n        if (css.keyframes && !css.class && !css.pseudoClass) {\n            return this.compileKeyframes(css.keyframes);\n        }\n        const selector = css.pseudoClass ?\n            `${css.class}:${css.pseudoClass}` :\n            css.class;\n        let cssText = `\n${selector ? `.${selector}` : ':host'} {${this.compileCSS(css)}}\\n`;\n        if (css.media && typeof css.media === \"object\" && !Array.isArray(css.media)) {\n            cssText += this.compileMedia(css.media, css.class, css.pseudoClass);\n        }\n        if (css.keyframes && typeof css.keyframes === \"object\" && !Array.isArray(css.keyframes)) {\n            cssText += this.compileKeyframes(css.keyframes);\n        }\n        return cssText;\n    }\n    /**\n     * Method compiles a CSS string from a provided CSS Config object.\n     *\n     * Works by appending a CSS string and running checks against both the key and value.\n     */\n    compileCSS(css) {\n        let cssString = \"\";\n        for (let key in css) {\n            if (key == \"class\"\n                || key == \"pseudoClass\"\n                || key == \"media\"\n                || key == \"keyframes\")\n                continue;\n            let value = css[key];\n            const { propKey, propValue } = this.parseProperties(key, value);\n            cssString += `\\n  ${this.americanise(propKey)}: ${this.americanise(propValue)};`;\n        }\n        return cssString;\n    }\n    /**\n     * Method compiles a CSS Keyframes block from a CSS Config object.\n     *\n     * Works by parsing and compiling each 'block' of keys and properties and calls the\n     * parseProperties API for type validation.\n     *\n     * The final CSS Keyframes block is built and returned as a string literal.\n     */\n    compileKeyframes(config) {\n        const { name, ...keyframes } = config;\n        if (!name)\n            throw new Error(\"Keyframes config must include a name\");\n        const blocks = Object.entries(keyframes)\n            .map(([key, prop]) => {\n            const props = Object.entries(prop)\n                .map(([rawKey, rawVal]) => {\n                const { propKey, propValue } = this.parseProperties(rawKey, rawVal);\n                return `    ${propKey}: ${propValue};`;\n            }).join(\"\\n\");\n            return `  ${this.parseKeyframe(key)} {\\n${props}\\n  }`;\n        });\n        return `@keyframes ${name} {\\n${blocks.join(\"\\n\")}\\n}`;\n    }\n    // Helper to normalise keyframe values\n    parseKeyframe(step) {\n        const lower = step.toLowerCase();\n        if (lower === \"from\" || lower === \"to\")\n            return lower;\n        if (/^\\d+%$/.test(step))\n            return step;\n        throw new Error('Invalid keyframe step. Use \"from\", \"to\", or \"NN%\".');\n    }\n    /**\n     * Method compiles a CSS media query string from a CSS Config object.\n     *\n     * Works by finding the breakpoint with the 'Bp' operator and uses the CSS key to create\n     * a media query heading.\n     *\n     * The 'Bp' value is removed to allow for the parseProperties function to compile the value.\n     *\n     * The media query is then assembled and returned.\n     */\n    compileMedia(media, parentClass, parentPseudo) {\n        const bp = Object.entries(media).find(([k]) => k.toLowerCase().endsWith(\"bp\"));\n        if (!bp)\n            throw new Error(\"Media config must include a *Bp key\");\n        const [breakKey, breakVal] = bp;\n        const { propKey: headingProp, propValue: headingVal } = this.parseBreakpoint(breakKey, breakVal);\n        const inner = { ...media };\n        for (const k of Object.keys(media))\n            if (k.toLowerCase().endsWith(\"bp\")) {\n                delete inner[k];\n            }\n        const cls = media.class || parentClass;\n        const pseudo = media.pseudoClass || parentPseudo;\n        const selector = `.${cls}${pseudo ? `:${pseudo}` : \"\"}`;\n        const innerCSS = this.compileCSS(inner);\n        return `\n@media (${headingProp}: ${headingVal}) {\n  ${selector} {\n    ${innerCSS}\n  }\n}`;\n    }\n    /**\n     * Helper method removes the 'Bp' operator and compiles and returns the CSS properties.\n     */\n    parseBreakpoint(key, val) {\n        const coreKey = key.slice(0, -\"Bp\".length);\n        return this.parseProperties(coreKey, val);\n    }\n    /**\n     * Helper method converts camel case variables to kebab case.\n     */\n    camelToKebab(key) {\n        return key.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n    /**\n     * Helper method translates UK -> US CSS property names.\n     */\n    americanise(variable) {\n        const convert = {\n            \"colour\": \"color\",\n            \"centre\": \"center\",\n            \"grey\": \"gray\",\n            \"behaviour\": \"behavior\"\n        };\n        const textValue = String(variable);\n        return convert[textValue] || textValue;\n    }\n    /**\n     * Method parses CSSValue objects and returns valid CSS.\n     *\n     * The method checks for operators that suffix a key, these are then used to validate the CSS type.\n     *\n     * Method handles all dataypes and arrays, with a recursive call to find all child CSS types.\n     *\n     * The returned CSS is a hash map of valid css properry key and value.\n     */\n    parseProperties(key, value) {\n        let propKey, propValue;\n        let suffix = \"\", unit = \"\";\n        const OPERATORS = {\n            Percent: \"%\", Var: \"var\", Url: \"url\", Calc: \"calc\",\n            Em: \"em\", Rem: \"rem\", Vw: \"vw\", Vh: \"vh\", Vmin: \"vmin\",\n            Vmax: \"vmax\", Ch: \"ch\", Ex: \"ex\", Pt: \"pt\", Pc: \"pc\",\n            In: \"in\", Cm: \"cm\", Mm: \"mm\", Fr: \"fr\", S: \"s\", Ms: \"ms\",\n            Deg: \"deg\", Rad: \"rad\", Grad: \"grad\", Turn: \"turn\",\n            Dpi: \"dpi\", Dpcm: \"dpcm\", Dppx: \"dppx\", Q: \"q\",\n            Hz: \"Hz\", KHz: \"kHz\"\n        };\n        const UNITLESS_PROPERTIES = [\n            \"opacity\", \"z-index\", \"line-height\", \"font-weight\",\n            \"flex\", \"order\", \"flex-grow\", \"flex-shrink\", \"grid-row\",\n            \"grid-column\", \"column-count\", \"widows\", \"orphans\", \"tab-size\"\n        ];\n        for (const k of Object.keys(OPERATORS))\n            if (key.endsWith(k)) {\n                suffix = k;\n                unit = OPERATORS[k];\n                key = key.slice(0, -k.length);\n                break;\n            }\n        propKey = this.camelToKebab(key);\n        propValue = propValue;\n        if (Array.isArray(value))\n            propValue = value\n                .map(v => this.parseProperties(propKey + suffix, v).propValue)\n                .join(\" \");\n        else if (typeof value === \"number\" && value === 0)\n            propValue = \"0\";\n        else if (typeof value === \"string\") {\n            if (suffix === \"Var\")\n                propValue = `var(--${value})`;\n            else if (suffix === \"Url\")\n                propValue = `url(${value})`;\n            else if (suffix === \"Calc\")\n                propValue = `calc(${value})`;\n            else\n                propValue = value;\n        }\n        else {\n            if (unit)\n                propValue = `${value}${unit}`;\n            else if (UNITLESS_PROPERTIES.includes(propKey))\n                propValue = String(value);\n            else\n                propValue = `${value}px`;\n        }\n        return { propKey, propValue };\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/jay-comp/dist/design.js?\n}");

/***/ }),

/***/ "./node_modules/jay-comp/dist/effects.js":
/*!***********************************************!*\
  !*** ./node_modules/jay-comp/dist/effects.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Effects: () => (/* binding */ Effects)\n/* harmony export */ });\n/**\n * Copyright (c) 2025 Josh Bassett, whondo.com\n *\n * Filename:    effect.ts\n * Authors:     Sarit Samkumpim, Josh Bassett\n * Date:        11/06/2025\n * Version:     1.1\n *\n * Licence:     Apache 2.0\n */\n/**\n * # Effects\n *\n * Class provides a CSS animation library.\n *\n * ### Overview:\n * The class provides a set of common reusable effects to help you build interactive\n * Comps quickly.\n *\n * The `prop()` API is used to define an animation property, then add the effect name\n * as the argument to access it within the CSS.\n *\n * ### Methods:\n * - **prop()**: API for defining a property.\n * - **fadeIn()**: Fade in effect.\n * - **fadeOut()**: Fade out effect.\n * - **fadeLeft()**: Fade left effect.\n * - **fadeRight()**: Fade right effect.\n * - **slideUp()**: Slide up from the bottom effect.\n * - **slideDown()**: Slide down from the top effect.\n * - **scale()**: Scale effect.\n * - **pulse()**: Pulse effect.\n * - **fadeOutLeft()**: Fade out left effect.\n * - **fadeOutRight()**: Fade out right effect.\n *\n * ### Example:\n * ```js\n * createCSS() {\n *     const effect = this.effect.slideUp(25); // Translates Y 25px\n *     const prop   = this.effect.prop(\"slideUp\", .5); // Runs for half a second\n *     const css = this.design.create({\n *         // css omitted\n *         animation: prop\n *     });\n *     return `\n *     ${effect}\n *     `;\n * }\n * ```\n */\nclass Effects {\n    /**\n     * ## Prop\n     *\n     * Creates a CSS animation property.\n     *\n     * ### Behaviour:\n     * Method creates a CSS animation property from the input. Note: the name of the effect needs\n     * to be present to target the correct animation.\n     *\n     * ### Parameters:\n     * - **name** (`string`): Name of effect.\n     * - **duration** (`string`): Duration of effect.\n     * - **timing** (`string`): Timing of effect.\n     * - **delay** (`string`): Delay of effect.\n     * - **iterate** (`string`): Repetitions of effect.\n     * - **direction** (`string`): Direction of effect.\n     * - **fillMode** (`string`): Style for effect when it's not playing.\n     *\n     * ### Returns:\n     * `string` - Valid CSS animation property.\n     *\n     * ### Example:\n     * ```js\n     * effects.prop(\"slideUp\", .5, \"ease-in-out\", .2);\n     * effects.prop(\"scale\", 1);\n     * effects.prop(\"fadeIn\", .5);\n     * ```\n     */\n    prop(name, duration, timing = \"ease\", delay = \"0\", iterate = \"1\", direction = \"normal\", fillMode = \"none\") {\n        return `${name} ${duration}s ${timing} ${delay}s ${iterate} ${direction} ${fillMode};`;\n    }\n    /**\n     * ## Fade In\n     *\n     * Provides an effect for fading in an element.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that gradually increase the opacity from 0 to 1.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal containing the keyframes for a fade-in effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeInCSS = effects.fadeIn();\n     * ```\n     */\n    fadeIn() {\n        return /* css */ `\n      @keyframes fadeIn {\n        0% {\n          opacity: 0;\n        }\n        100% {\n          opacity: 1;\n        }\n      }\n    `;\n    }\n    /**\n     * ## Fade Out\n     *\n     * Provides an effect for fading out an element.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that transition the element's opacity from 1 to 0.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal containing the keyframes for a fade-out effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeOutCSS = effects.fadeOut();\n     * ```\n     */\n    fadeOut() {\n        return /* css */ `\n      @keyframes fadeOut {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n        }\n      }\n    `;\n    }\n    /**\n     * ## Fade Left\n     *\n     * Provides an effect for fading in an element from the left.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that start with the element translated on the X-axis by a given value\n     * and with opacity 0, then transitions to full opacity and no translation.\n     *\n     * ### Parameters:\n     * - **translateX** (`number`): The number of pixels to translate the element from the left.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a fade-in from left effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeLeftCSS = effects.fadeLeft(20);\n     * ```\n     */\n    fadeLeft(translateX) {\n        return /* css */ `\n      @keyframes fadeLeft {\n        0% {\n          opacity: 0;\n          transform: translateX(${translateX}px);\n        }\n        100% {\n          opacity: 1;\n          transform: translateX(0);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Fade Right\n     *\n     * Provides an effect for fading in an element from the right.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that start with the element translated on the X-axis by a given value\n     * and with opacity 0, then transitions to full opacity and no translation.\n     *\n     * ### Parameters:\n     * - **translateX** (`number`): The number of pixels by which the element is translated to the right.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a fade-in from right effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeRightCSS = effects.fadeRight(20);\n     * ```\n     */\n    fadeRight(translateX) {\n        return /* css */ `\n      @keyframes fadeRight {\n        0% {\n          opacity: 0;\n          transform: translateX(${translateX}px);\n        }\n        100% {\n          opacity: 1;\n          transform: translateX(0);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Slide Up\n     *\n     * Provides an effect for sliding an element up into view.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that begin with the element translated downward along the Y-axis by a given number of pixels and invisible,\n     * and then transitions to no translation and full opacity.\n     *\n     * ### Parameters:\n     * - **translateY** (`number`): The vertical distance (in pixels) the element is offset downward.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a slide-up effect.\n     *\n     * ### Example:\n     * ```js\n     * const slideUpCSS = effects.slideUp(20);\n     * ```\n     */\n    slideUp(translateY) {\n        return /* css */ `\n      @keyframes slideUp {\n        0% {\n          opacity: 0;\n          transform: translateY(${translateY}px);\n        }\n        100% {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Slide Down\n     *\n     * Provides an effect for sliding an element down into view.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that begin with the element translated upward along the Y-axis by a given number of pixels and invisible,\n     * and then transitions to no translation and full opacity.\n     *\n     * ### Parameters:\n     * - **translateY** (`number`): The vertical distance (in pixels) the element is offset.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a slide-down effect.\n     *\n     * ### Example:\n     * ```js\n     * const slideDownCSS = effects.slideDown(20);\n     * ```\n     */\n    slideDown(translateY) {\n        return /* css */ `\n      @keyframes slideDown {\n        0% {\n          opacity: 0;\n          transform: translateY(${translateY}px);\n        }\n        100% {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Scale\n     *\n     * Provides an effect for scaling an element.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that transition the element's scale from an initial value to a target value,\n     * while also transitioning from transparent to fully opaque.\n     *\n     * ### Parameters:\n     * - **scaleFrom** (`number`): The initial scale factor.\n     * - **scaleTo** (`number`): The target scale factor.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a scaling effect.\n     *\n     * ### Example:\n     * ```js\n     * const scaleCSS = effects.scale(0.8, 1);\n     * ```\n     */\n    scale(scaleFrom, scaleTo) {\n        return /* css */ `\n      @keyframes scaleIn {\n        0% {\n          opacity: 0;\n          transform: scale(${scaleFrom});\n        }\n        100% {\n          opacity: 1;\n          transform: scale(${scaleTo});\n        }\n      }\n    `;\n    }\n    /**\n     * ## Pulse\n     *\n     * Provides a pulsing effect for an element.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that scale an element up slightly and then return it to its original size,\n     * creating a subtle pulsating appearance.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a pulsing effect.\n     *\n     * ### Example:\n     * ```js\n     * const pulseCSS = effects.pulse();\n     * ```\n     */\n    pulse() {\n        return /* css */ `\n      @keyframes pulsing {\n        0% {\n          transform: scale(1);\n        }\n        50% {\n          transform: scale(1.05);\n        }\n        100% {\n          transform: scale(1);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Fade Out Right\n     *\n     * Provides an effect for fading out an element to the right.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that begin with the element fully opaque and untransformed,\n     * then transition to full transparency while translating the element to the right.\n     *\n     * ### Parameters:\n     * - **translateX** (`number`): The horizontal distance (in pixels) the element is moved to the right.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a fade-out to right effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeOutRightCSS = effects.fadeOutRight(20);\n     * ```\n     */\n    fadeOutRight(translateX) {\n        return /* css */ `\n      @keyframes fadeOutRight {\n        0% {\n          opacity: 1;\n          transform: translateX(0);\n        }\n        100% {\n          opacity: 0;\n          transform: translateX(${translateX}px);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Fade Out Left\n     *\n     * Provides an effect for fading out an element to the left.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that begin with the element fully opaque and untransformed,\n     * then transition to full transparency while translating the element to the left.\n     *\n     * ### Parameters:\n     * - **translateX** (`number`): The horizontal distance (in pixels) the element is moved to the left.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a fade-out to left effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeOutLeftCSS = effects.fadeOutLeft(20);\n     * ```\n     */\n    fadeOutLeft(translateX) {\n        return /* css */ `\n      @keyframes fadeOutLeft {\n        0% {\n          opacity: 1;\n          transform: translateX(0);\n        }\n        100% {\n          opacity: 0;\n          transform: translateX(${translateX}px);\n        }\n      }\n    `;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/jay-comp/dist/effects.js?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./app/static/jay-comps/imports.js");
/******/ 	
/******/ })()
;