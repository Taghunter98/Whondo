/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./app/static/jay-comps/comp-pages/create.js":
/*!***************************************************!*\
  !*** ./app/static/jay-comps/comp-pages/create.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Create: () => (/* binding */ Create)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Create extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    createHTML() {\r\n\r\n        return /* html */`\r\n        <comp-navbar></comp-navbar>\r\n        <div class=\"background\">\r\n            <div class=\"container\">\r\n                <comp-dialog id=\"describe\"></comp-dialog>\r\n            </div>\r\n        </div>\r\n        `;\r\n\r\n    }\r\n\r\n    createCSS() {\r\n\r\n        const effect = this.effect.slideUp(20);\r\n        const prop = this.effect.prop(\"slideUp\", .5);\r\n\r\n        const background = {\r\n            class: \"background\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            widthPercent: 100,\r\n            heightVh: 100,\r\n            justifyContent: \"centre\",\r\n            alignItems: \"centre\",\r\n            backgroundVar: \"black10\",\r\n            overflow: \"hidden\",\r\n            media: {\r\n                maxWidthBp: 600,\r\n                padding: 20,\r\n                width: \"auto\"\r\n            }\r\n        };\r\n\r\n        const container = {\r\n            class: \"container\",\r\n            background: \"white\",\r\n            animation: prop,\r\n            width: \"auto\",\r\n        };\r\n\r\n        return [effect, background, container];\r\n    }\r\n\r\n    afterRender() {\r\n        const dialogBox = this.getById(\"describe\");\r\n        dialogBox.title = \"Email Verification\";\r\n        dialogBox.paragraph = \"We have sent you an email with a verification link.<br>If you do not receive an email, please check your spam.\";\r\n        const btn = dialogBox.query(\"comp-button\");\r\n        btn.style.display = \"none\";\r\n        const icon = dialogBox.query(\"comp-icon\")\r\n        icon.style.display = \"none\";\r\n       \r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n\r\n}\r\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comp-pages/create.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comp-pages/create_prop.js":
/*!********************************************************!*\
  !*** ./app/static/jay-comps/comp-pages/create_prop.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateProp: () => (/* binding */ CreateProp)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass CreateProp extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    createHTML() {\r\n        return /* html */ `\r\n        <comp-popup  id= popup style=\"display: none\"></comp-popup>\r\n        <comp-navbar></comp-navbar>\r\n        <div class=\"background\">\r\n            <div class=\"container\">\r\n                <div class=\"modal\">\r\n                    <form class=\"formObj\">\r\n                        <!-- Personal information -->\r\n                        <div id=\"step1\">\r\n                            <div class=\"textContainer\">\r\n                                <p class=\"text\">Step 1/3</p>\r\n                                <h4 class=\"title\">Property Details</h4>\r\n                            </div>\r\n                            <p class=\"text\">Let’s create a beautiful advert, tell us about your home!</p>\r\n\r\n                            <div class=\"input\">\r\n                                <comp-address id=\"address\" name=\"address\" ></comp-address>\r\n                                <comp-input id=\"title\" name=\"title\"></comp-input>\r\n                                <div class=\"wrapper\">\r\n                                    <comp-input id=\"rent\" name=\"rent\"></comp-input>\r\n                                    <p class=\"unit\">p/m</p>\r\n                                </div>\r\n                                <div class=\"inputRow\">\r\n                                    <comp-input-dropdown id=\"propertyType\" name=\"propType\"></comp-input-dropdown>\r\n                                    <comp-input id=\"tenants\" name=\"tennants\"></comp-input>\r\n                                </div>\r\n                                <div class=\"inputRow\">\r\n                                    <comp-input id=\"bedrooms\" name=\"bedrooms\"></comp-input>\r\n                                    <comp-input id=\"bathrooms\" name=\"bathrooms\"></comp-input>\r\n                                </div>\r\n                                <comp-textarea id=\"description\" name=\"description\"></comp-textarea>\r\n                            </div>\r\n                            <div class=\"footer\">\r\n                                <div class=\"btnRow\">\r\n                                    <comp-button class=\"back\" id=\"backBtn\" type=button></comp-button>\r\n                                    <comp-button class=\"next\" id=\"nextBtn\" type=button></comp-button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- User personalisation  -->\r\n                        <div id=\"step2\" hidden >\r\n                            <div class=\"textContainer\">\r\n                                <p class=\"text\">Step 2/3</p>\r\n                                <h4 class=\"title\">Add Images</h4> \r\n                                <p class=\"text\">The best adverts have great pictures, we recommend at least 8 to properly show off your home! Be mindful our users mostly use mobile! So we advise taking pictures in profile.</p>\r\n                            </div>\r\n                             <div class=\"inputRowFile\">\r\n                                        <comp-carousel>\r\n                                            <comp-file-card class=\"cover\" id=\"cover\"></comp-file-card>\r\n                                            <comp-file-card class=\"pic\"></comp-file-card>\r\n                                            <comp-file-card class=\"pic\">></comp-file-card>\r\n                                            <comp-file-card class=\"pic\">></comp-file-card>\r\n                                            <comp-file-card class=\"pic\">></comp-file-card>\r\n                                            <comp-file-card class=\"pic\">></comp-file-card>\r\n                                            <comp-file-card class=\"pic\">></comp-file-card>\r\n                                            <comp-file-card class=\"pic\">></comp-file-card>\r\n                                            <comp-file-card class=\"pic\">></comp-file-card>\r\n                                            <comp-file-card class=\"pic\">></comp-file-card>\r\n                                        </comp-carousel>\r\n                                </div>\r\n                            <div class=\"footer\">\r\n                                <div class=\"btnRow\">\r\n                                    <comp-button class=\"back\" id=\"backBtn2\" type=\"button\"></comp-button>\r\n                                    <comp-button class=\"next\" id=\"nextBtn2\" type=\"button\"></comp-button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div id=\"step3\" hidden>\r\n                            <div class=\"textContainer\">\r\n                                <p class=\"text\">Step 3/3</p>\r\n                                <h4 class=\"title\">Add Keywords</h4> \r\n                            </div>\r\n                            <p class=\"text\">Whondo works with a prompting system that uses keywords to help your property be noticed. We want to show your advert to as many people as possible, so add some keywords!</p>\r\n                             <div class=\"input\">\r\n                                <comp-keywords class=\"keywords\" id=\"keywords\" name=\"keywords\" ></comp-keywords>\r\n                            </div>\r\n                            <div class=\"footer\">\r\n                                <div class=\"btnRow\">\r\n                                    <comp-button class=\"back\" id=\"backBtn3\" type=\"button\"></comp-button>\r\n                                    <comp-button class=\"submit\" id=\"submit\" type=\"submit\"></comp-button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div class=\"backgroundImage\">\r\n                <img class=\"image\" src=\"https://images.pexels.com/photos/5563472/pexels-photo-5563472.jpeg\">\r\n            </div>\r\n        </div>\r\n        `;\r\n\r\n    }\r\n\r\n    createCSS() {\r\n\r\n        return [\r\n            {\r\n                class: \"background\",\r\n                widthPercent: 100,\r\n                height: 1050,\r\n                backgroundVar: \"black100\",\r\n                overflow: \"hidden\",\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    height: 1250\r\n                }\r\n            },\r\n            {\r\n                class: \"formObj\",\r\n                widthPercent: 100,\r\n            },\r\n            {\r\n                class: \"container\",\r\n                display: \"flex\",\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"centre\"\r\n                }\r\n            },\r\n            {\r\n                class: \"backgroundImage\",\r\n                widthPercent: 100,\r\n                height: 1050,\r\n                paddingLeft: 400,\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    heightVh: 40,\r\n                    margin: 0,\r\n                    padding: 0\r\n                }\r\n            },\r\n            {\r\n                class: \"image\",\r\n                widthPercent: 100,\r\n                heightPercent: 100,\r\n                objectFit: \"cover\"\r\n            },\r\n            {\r\n                class: \"modal\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"centre\",\r\n                widthPercent: 100,\r\n                maxWidth: 500,\r\n                minWidth: 320,\r\n                background: \"white\",\r\n                position: \"absolute\",\r\n                zIndex: 800,\r\n                padding: 20,\r\n                borderRadius: 14,\r\n                marginLeft: 100,\r\n                marginTop: 110,\r\n                marginBottom: 50,\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    widthPercent: 100,\r\n                    maxWidth: 350,\r\n                    minWidth: 250,\r\n                    margin: 0,\r\n                    marginTop: 150,\r\n                    boxSizing: \"border-box\"\r\n                }\r\n            },\r\n            {\r\n                class: \"input\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                widthPercent: 100,\r\n                gap: 20,\r\n                padding: [20, 0, 20, 0],\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    padding: [10, 0, 20, 0],\r\n                    gap: 15,\r\n                }\r\n            },\r\n            {\r\n                class: \"inputRow\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                gap: 10,\r\n                widthPercent: 100,\r\n                justifyContent: \"space-between\",\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    flexDirection: \"column\"\r\n                }\r\n            },\r\n            {\r\n                class: \"inputRowFile\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                gap: 10,\r\n                padding: [20, 0, 20, 0],\r\n                widthPercent: 100,\r\n                justifyContent: \"space-between\",\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    flexDirection: \"column\"\r\n                }\r\n            },\r\n            {\r\n                class: \"btnRow\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                gap: 20,\r\n                widthPercent: 100,\r\n                justifyContent: \"space-between\"\r\n            },\r\n            {\r\n                class: \"title\",\r\n                fontWeight: \"bold\"\r\n            },\r\n            {\r\n                class: \"link\",\r\n                colourVar: \"black80\",\r\n                fontWeight: \"bold\",\r\n                textDecoration: \"underline\",\r\n                cursor: \"pointer\",\r\n            },\r\n            {\r\n                class: \"link\",\r\n                pseudoClass: \"hover\",\r\n                colourVar: \"black100\",\r\n            },\r\n            {\r\n                class: \"textContainer\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                widthPercent: 100,\r\n                gap: 10,\r\n            },\r\n            {\r\n                class: \"text\",\r\n                colourVar: \"black60\",\r\n                display: \"flex\",\r\n                alignSelf: \"start\",\r\n                lineHeight: \"normal\"\r\n            },\r\n            {\r\n                class: \"footer\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"centre\",\r\n                widthPercent: 100,\r\n                gap: 20,\r\n            },\r\n            {\r\n                class: \"wrapper\",\r\n                position: \"relative\",\r\n                widthPercent: 100,\r\n            },\r\n            {\r\n                class: \"unit\",\r\n                position: \"absolute\",\r\n                right: 14,\r\n                top: \"50%\",\r\n                fontSize: 14,\r\n                colourVar: \"black60\",\r\n                pointerEvents: \"none\",\r\n            },\r\n            {\r\n                class: \"cover\",\r\n                borderRadius: 8,\r\n                borderVar: \"borderBlack\",\r\n            },\r\n            {\r\n                class: \"error\",\r\n                border: [\"solid\", 2, \"var(--red100)\"],\r\n            }\r\n        ];\r\n    }\r\n\r\n    validateStep1() {\r\n        const inputs = [\r\n            this.getById(\"address\"),\r\n            this.getById(\"title\"),\r\n            this.getById(\"rent\"),\r\n            this.getById(\"description\"),\r\n            this.getById(\"propertyType\"),\r\n            this.getById(\"tenants\")\r\n        ];\r\n        let isValid = true;\r\n\r\n        for (let input of inputs) {\r\n            if (input.required && input.isEmpty()) {\r\n                input.query(\".inputValue\").classList.add(\"error\");\r\n                isValid = false;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validateStep2() {\r\n        const cover = this.getById(\"cover\");\r\n        const pics = Array.from(this.queryAll(\".pic\"));\r\n        let isValid = true;\r\n\r\n        if (!cover.value) {\r\n            cover.classList.add(\"error\");\r\n            isValid = false;\r\n        } else {\r\n            cover.classList.remove(\"error\");\r\n        }\r\n\r\n        const uploadedPics = pics.filter(pic => pic.value);\r\n        if (uploadedPics.length < 3) {\r\n\r\n            isValid = false;\r\n\r\n            pics.forEach(pic => {\r\n                const box = pic.query(\".fileBox\")\r\n\r\n                const isVisible = pic.offsetParent !== null;\r\n                if (!pic.value && isVisible) {\r\n                    box.classList.add(\"error\");\r\n                }\r\n            });\r\n\r\n        } else {\r\n            pics.forEach(pic => {\r\n                const box = pic.query(\".fileBox\");\r\n                const isVisible = pic.offsetParent !== null;\r\n                if (isVisible) box.classList.remove(\"error\");\r\n            });\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    validateStep3() {\r\n        let isValid = true;\r\n\r\n        const keywords = this.getById(\"keywords\");\r\n        const box = keywords.query(\".inputValue\");\r\n\r\n        const selected = keywords.value || [];\r\n\r\n        if (!Array.isArray(selected) || selected.length < 1) {\r\n            box.classList.add(\"error\");\r\n            isValid = false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    async createProp() {\r\n        const fd = new FormData();\r\n        const keywords = this.getById(\"keywords\").value;\r\n\r\n        fd.append(\"title\", this.getById(\"title\").value);\r\n        fd.append(\"price\", this.getById(\"rent\").value);\r\n        fd.append(\"tennants\", this.getById(\"tenants\").value);\r\n        fd.append(\"description\", this.getById(\"description\").value);\r\n        fd.append(\"propType\", this.getById(\"propertyType\").value);\r\n        fd.append(\"bedrooms\", this.getById(\"bedrooms\").value);\r\n        fd.append(\"bathrooms\", this.getById(\"bathrooms\").value);\r\n        fd.append(\"keywords\", JSON.stringify(keywords));\r\n\r\n        const addr = this.getById(\"address\")?.fullAddress || {};\r\n\r\n        fd.append(\"name\", addr.name);\r\n        fd.append(\"street\", addr.street);\r\n        fd.append(\"town\", addr.town);\r\n        fd.append(\"county\", addr.county);\r\n        fd.append(\"postcode\", addr.postcode);\r\n\r\n        const cover = this.getById(\"cover\");\r\n        const pics = this.queryAll(\".pic\");\r\n\r\n        if (cover?.value) fd.append(\"images\", cover.value);\r\n\r\n        let i = 0;\r\n        for (const pic of pics) {\r\n            if (pic?.value) {\r\n                const file = pic.value;\r\n                const filename = file.name || `pic${i}.${file.type.split(\"/\")[1] || \"jpg\"}`;\r\n                fd.append(\"images\", file, filename);\r\n                i++;\r\n            }\r\n        }\r\n\r\n        const result = await this.submitForm(\"https://whondo.com/advert/new\", fd);\r\n\r\n        if (result.ok) {\r\n            const popup = this.getById(\"popup\");\r\n            popup.style.display = \"block\";\r\n        }\r\n            \r\n        else alert(result.error);\r\n    }\r\n\r\n    clearError(inputs) {\r\n        const field = inputs.query(\".inputValue\");\r\n        field.classList.remove(\"error\");\r\n    };\r\n\r\n    afterRender() {\r\n        \r\n        const step1 = this.getById(\"step1\");\r\n        const step2 = this.getById(\"step2\");\r\n        const step3 = this.getById(\"step3\")\r\n        const address = this.getById(\"address\");\r\n        const title = this.getById(\"title\");\r\n        const rent = this.getById(\"rent\");\r\n        const tenants = this.getById(\"tenants\");\r\n        const description = this.getById(\"description\");\r\n        const propType = this.getById(\"propertyType\");\r\n        const bedrooms = this.getById(\"bedrooms\");\r\n        const bathrooms = this.getById(\"bathrooms\");\r\n        const keyword = this.getById(\"keywords\");\r\n        const backBtn = this.getById(\"backBtn\");\r\n        const backBtn2 = this.getById(\"backBtn2\");\r\n        const backBtn3 = this.getById(\"backBtn3\");\r\n        const nextBtn = this.getById(\"nextBtn\");\r\n        const nextBtn2 = this.getById(\"nextBtn2\");\r\n        const submit = this.getById(\"submit\");\r\n        const cover = this.getById(\"cover\");\r\n        const pic = this.queryAll(\".pic\")\r\n\r\n        const popup = this.getById(\"popup\");\r\n        popup.title = \"Advert Published!\";\r\n        popup.paragraph = \"Congratulations! You can now view your new advert or monitor it in your Landlord portal.\";\r\n        popup.text = \"Continue\";\r\n        const icon = popup.query(\".icon\");\r\n        icon.style.display = \"none\";\r\n        const btn = popup.query(\".btn\");\r\n        btn.style.width = \"125px\";\r\n        \r\n        address.label = \"Address\";\r\n        address.prompt = \"Enter your postcode\";\r\n        title.label = \"Title\";\r\n        title.prompt = \"10 Downing Street...\";\r\n        rent.label = \"Rent\";\r\n        rent.prompt = \"Enter a price...\";\r\n        tenants.label = \"Tenants\";\r\n        tenants.prompt = \"Number of tenants\"\r\n        bedrooms.label = \"Bedrooms\";\r\n        bedrooms.prompt = \"Enter bedrooms\";\r\n        bedrooms.type = \"number\";\r\n        bathrooms.label = \"Bathrooms\";\r\n        bathrooms.prompt = \"Enter bathrooms\";\r\n        bathrooms.type = \"number\";\r\n        propType.label = \"Property Type\";\r\n        propType.prompt = \"house\"; \r\n        propType.list = [\"house\", \"flat\", \"studio\"];\r\n\r\n        description.label = \"Property description\";\r\n        description.prompt = \"Tell us about your home, be descriptive!\";\r\n        keyword.label = \"Add keyword\";\r\n        keyword.prompt = \"Choose 10 keywords...\"\r\n        backBtn.text = \"Back\";\r\n        backBtn.fill = true;\r\n        backBtn.variant = 2;\r\n        backBtn2.text = \"Back\";\r\n        backBtn2.fill = true;\r\n        backBtn2.variant = 2;\r\n        backBtn3.text = \"Back\"\r\n        backBtn3.fill = true;\r\n        backBtn3.variant = 2;\r\n        nextBtn.text = \"Next\";\r\n        nextBtn.fill = true;\r\n        nextBtn2.text = \"Next\";\r\n        nextBtn2.fill = true;\r\n        submit.text = \"Finish\";\r\n        submit.fill = true;\r\n        cover.prompt = \"Add Cover\";\r\n\r\n        pic.forEach((el) => el.prompt = \"Add Photo\");\r\n\r\n        address.required = true;\r\n        title.required = true;\r\n        rent.required = true;\r\n        description.required = true;\r\n        propType.required = true;\r\n        tenants.required = true;\r\n\r\n        popup.addEventListener(\"popup-button\", ()=> {\r\n            window.location.assign(\"/\");\r\n        })\r\n\r\n        propType.addEventListener(\"option-selected\", (e)=>{\r\n            const keywords = this.getById(\"keywords\");\r\n            const selectedText = e.detail?.text;\r\n            if (selectedText && typeof keywords.addTag === \"function\") keywords.addTag(selectedText)\r\n        })\r\n\r\n        nextBtn.addEventListener(\"click\", () => {\r\n            if (this.validateStep1()) {\r\n                step1.setAttribute(\"hidden\", \"\");\r\n                step3.setAttribute(\"hidden\", \"\");\r\n                step2.removeAttribute(\"hidden\");\r\n            }\r\n        });\r\n\r\n        nextBtn2.addEventListener(\"click\", () => {\r\n            if (this.validateStep2()) {\r\n                step1.setAttribute(\"hidden\", \"\");\r\n                step2.setAttribute(\"hidden\", \"\");\r\n                step3.removeAttribute(\"hidden\")\r\n            }\r\n        });\r\n\r\n        backBtn2.addEventListener(\"click\", () => {\r\n            step2.setAttribute(\"hidden\", \"\");\r\n            step3.setAttribute(\"hidden\", \"\");\r\n            step1.removeAttribute(\"hidden\")\r\n        });\r\n\r\n        backBtn3.addEventListener(\"click\", () => {\r\n            step3.setAttribute(\"hidden\", \"\");\r\n            step1.setAttribute(\"hidden\", \"\");\r\n            step2.removeAttribute(\"hidden\")\r\n        });\r\n\r\n        submit.addEventListener(\"click\", (e) => {\r\n            const step1Valid = this.validateStep1();\r\n            const step2Valid = this.validateStep2();\r\n            const step3Valid = this.validateStep3();\r\n\r\n            if (!step1Valid || !step2Valid || !step3Valid) e.preventDefault();\r\n            else this.createProp()\r\n        });\r\n\r\n        const input = [address, title, rent, description,]\r\n        input.forEach(inputs => inputs.addEventListener(\"input\", () => this.clearError(inputs)));\r\n\r\n        cover.addEventListener(\"photo-uploaded\", () => {\r\n            if (cover.value) cover.classList.remove(\"error\");\r\n        });\r\n\r\n        pic.forEach(picCard => {\r\n            picCard.addEventListener(\"photo-uploaded\", () => {\r\n                const box = picCard.query(\".fileBox\");\r\n                if (picCard.value) box.classList.remove(\"error\");\r\n            });\r\n        });\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comp-pages/create_prop.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comp-pages/home.js":
/*!*************************************************!*\
  !*** ./app/static/jay-comps/comp-pages/home.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Home: () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Home extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n\r\n    text_;\r\n\r\n    set text(v){\r\n        this.text_ = v;\r\n        this.update();\r\n    }\r\n\r\n    get text() { return this.text_; }\r\n\r\n    beforeRender(){\r\n        if (!this.text_) \r\n            this.text_ = window.innerWidth <= 600 ?\r\n                \"I want to rent a flat in London that's £2000 a month...\" :\r\n                \"I want to rent a flat in London that's £2000 a month, has two bedrooms and one bathroom and near a tube station...\"\r\n    }\r\n\r\n    createHTML(){\r\n        return /* html */`\r\n        <div class=\"background\">\r\n            <div class=\"container\">\r\n                \r\n                <h2 class=\"head\">Describe your perfect home</h2>\r\n                    \r\n                <div class=\"modal\">\r\n                    <div class=\"prompt-wrapper\">\r\n                        <textarea name=\"\" id=\"prompt\" class=\"prompt\" placeholder=\"${this.text_}\"></textarea>\r\n\r\n                        <div class=\"iconBtn\">\r\n                            <comp-prompt-icon class=\"icon\"></comp-prompt-icon>\r\n                        </div>\r\n                    </div>\r\n                    <p><a href=\"#\" class=\"help\">Prompting Help</a></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    createCSS(){\r\n        const slideUp = this.effect.slideUp(20)\r\n        const prop1 = this.effect.prop(\"slideUp\", .6, \"ease-in-out\")\r\n        const prop2 = this.effect.prop(\"slideUp\", 1, \"ease-in-out\")\r\n        return [ \r\n            slideUp,\r\n            { class: \"background\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"centre\",\r\n                widthPercent: 100,\r\n                height: 800,\r\n                background: \"white\",\r\n                media: {maxWidthBp: 600, justifyContent: \"end\", height: 650}\r\n            },\r\n            { class: \"container\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"centre\",\r\n                widthPercent: 100,\r\n                justifyContent: \"centre\",\r\n            },\r\n            { class: \"modal\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"centre\",\r\n                alignItems: \"centre\",\r\n                gap: 40,\r\n                widthPercent: 100,\r\n                maxWidth: 900,\r\n                padding: 20,\r\n                boxSizing: \"border-box\",\r\n                media: {maxWidthBp: 600, gap: 10}\r\n            },\r\n            { class: \"head\",\r\n                colourVar: \"black100\",\r\n                textAlign: \"centre\",\r\n                fontWeight: \"bold\",\r\n                paddingBottom: 20,\r\n                animation: prop1,\r\n                media: { maxWidthBp: 600, fontSize: 24, paddingBottom: 0}\r\n            },\r\n            { class: \"prompt-wrapper\",\r\n                display: \"flex\",\r\n                gap: 20,\r\n                widthPercent: 100,\r\n                maxWidth: 900,\r\n                minHeight: 74,\r\n                padding: 15,\r\n                backgroundVar: \"black10\",\r\n                borderVar: \"border\",\r\n                borderRadius: 15,\r\n                boxSizing: \"border-box\",\r\n                animation: prop2,\r\n            },\r\n            { class: \"prompt\",\r\n                flexGrow: 1,\r\n                flexShrink: 1,\r\n                widthPercent: 100,\r\n                backgroundVar: \"black10\",\r\n                border: \"none\",\r\n                fontSize: 16,\r\n                resize: \"none\",\r\n                lineHeight: 1.5,\r\n                outline: \"none\",\r\n                fontFamily: \"Geist\",\r\n                minHeight: 44,\r\n                maxHeight: 150,\r\n                whiteSpace: \"pre-wrap\",\r\n                media: { maxWidthBp: 600, fontSize: 16 }\r\n            },\r\n            { class: \"help\",\r\n                display: \"flex\",\r\n                justifyContent: \"centre\",\r\n                fontSize: 14,\r\n                cursor: \"pointer\",\r\n                colourVar: \"black100\"\r\n            },\r\n            { class: \"prompt\",\r\n                pseudoClass: \":placeholder\",\r\n                fontFamily: \"Geist, sans-serif\",\r\n                fontSize: 16\r\n            }\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Method auto resizes the prompt bar element\r\n     * @param {HTMLElement} el \r\n     */\r\n    autoResize(el) {\r\n        el.style.height = 'auto';\r\n        el.style.height = `${el.scrollHeight}px`;\r\n    }\r\n\r\n    afterRender(){\r\n        const icon = this.query(\".icon\");\r\n        const textarea = this.query(\".prompt\");\r\n\r\n        textarea.text = this.text_;\r\n\r\n        this.autoResize(textarea);\r\n\r\n        textarea.addEventListener(\"input\", () => this.autoResize(textarea));\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comp-pages/home.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comp-pages/login.js":
/*!**************************************************!*\
  !*** ./app/static/jay-comps/comp-pages/login.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Login: () => (/* binding */ Login)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Login extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n\r\n    createHTML() {\r\n        return /* html */ `\r\n        <div class=\"background\">\r\n            <div class=\"itemContainer\">\r\n                <div class=\"modal\">\r\n                    <div class=\"textContainer\">\r\n                        <h3 class=\"title\">Login</h3>\r\n                        <p class=\"text\">Welcome back! Let's find you a new home.</p>\r\n                    </div>\r\n\r\n                    <div class=\"inputs\">\r\n                        <comp-input id=\"email\" name=\"email\"></comp-input>\r\n                        <comp-input id=\"password\" \r\n                        name=\"password\"></comp-input>\r\n                    </div>\r\n                    <div class=\"footer\">\r\n                        <comp-button id=\"submit\">Refresh Card</comp-button>\r\n                        <p class=\"link\"><a>Forgot password?</a></p>\r\n                    </div>\r\n                    <p id=\"result\"></p>\r\n                </div>\r\n                <div class=\"backgroundImage\">\r\n                    <img class=\"image\" src=\"https://images.pexels.com/photos/4781426/pexels-photo-4781426.jpeg\">\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        `;\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            {\r\n                class: \"background\",\r\n                widthPercent: 100,\r\n                backgroundVar: \"black100\",\r\n                heightVh: 100,\r\n            },\r\n            {\r\n                class: \"itemContainer\",\r\n                display: \"flex\",\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"centre\"\r\n                }\r\n            },\r\n            {\r\n                class: \"backgroundImage\",\r\n                widthPercent: 100,\r\n                heightVh: 100,\r\n                paddingLeft: 400,\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    heightVh: 40,\r\n                    margin: 0,\r\n                    padding: 0\r\n                }\r\n            },\r\n            {\r\n                class: \"image\",\r\n                widthPercent: 100,\r\n                heightPercent: 100,\r\n                objectFit: \"cover\"\r\n            },\r\n            {\r\n                class: \"modal\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"centre\",\r\n                width: 500,\r\n                background: \"white\",\r\n                position: \"absolute\",\r\n                zIndex: 800,\r\n                padding: 20,\r\n                borderRadius: 14,\r\n                marginLeft: 100,\r\n                marginTop: 100,\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    width: \"auto\",\r\n                    margin: 0,\r\n                    marginTop: 200\r\n                }\r\n            },\r\n            {\r\n                class: \"inputs\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                widthPercent: 100,\r\n                gap: 10,\r\n                padding: [20, 0, 40, 0]\r\n            },\r\n            {\r\n                class: \"link\",\r\n                colourVar: \"black80\",\r\n                textDecoration: \"underline\",\r\n                cursor: \"pointer\"\r\n            },\r\n            {\r\n                class: \"link\", pseudoClass: \"hover\",\r\n                colourVar: \"black100\"\r\n            },\r\n            {\r\n                class: \"textContainer\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                widthPercent: 100,\r\n                gap: 5\r\n            },\r\n            {\r\n                class: \"title\",\r\n                fontWeight: \"bold\"\r\n            },\r\n            {\r\n                class: \"text\",\r\n                colourVar: \"black60\"\r\n            },\r\n            {\r\n                class: \"footer\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"centre\",\r\n                widthPercent: 100,\r\n                gap: 10\r\n            }\r\n        ];\r\n    }\r\n\r\n    openWindow() { window.location.assign(\"/register\"); }\r\n\r\n    async login(result, json) {\r\n        let resp = await this.request(\"/login\", \"POST\", json);\r\n        (resp.ok) ? result.innerHTML = resp.data.message : result.innerHTML = resp.error;\r\n    }\r\n\r\n    afterRender() {\r\n        const compButton = this.getById(\"submit\");\r\n        const result = this.getById(\"result\");\r\n        const email = this.getById(\"email\");\r\n        const pass = this.getById(\"password\");\r\n\r\n        compButton.text = \"Login\";\r\n        compButton.fill = true;\r\n        email.label = \"Email\";\r\n        email.prompt = \"Enter email\";\r\n        pass.label = \"Password\";\r\n        pass.type = \"password\";\r\n        pass.prompt = \"Enter password\";\r\n\r\n        compButton.addEventListener(\"click\", () => {\r\n            let cookie = \"true\";\r\n            let jsonData = { email: email.value, password: pass.value, consent: cookie };\r\n\r\n            this.login(result, jsonData);\r\n        });\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comp-pages/login.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comp-pages/register.js":
/*!*****************************************************!*\
  !*** ./app/static/jay-comps/comp-pages/register.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Register: () => (/* binding */ Register)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Register extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    createHTML() {\r\n        return /* html */ `\r\n        <comp-navbar></comp-navbar>\r\n        <div class=\"background\">\r\n            <div class=\"container\">\r\n                <div class=\"modal\">\r\n                    <form class=\"formObj\">\r\n\r\n                        <!-- Personal information -->\r\n                        <div id=\"step1\">\r\n                            <div class=\"textContainer\">\r\n                                <p class=\"text\">Step 1/2</p>\r\n                                <h4 class=\"title\">Personal Details</h4> \r\n                            </div>\r\n                            <div class=\"input\">\r\n                                <div class=\"inputRow\">\r\n                                    <comp-input id=\"name\" name=\"name\"></comp-input>\r\n                                    <comp-input id=\"surname\" name=\"surname\"></comp-input>\r\n                                </div>\r\n                                <comp-input id=\"email\" name=\"email\"></comp-input>\r\n                                <comp-password id=\"password\" name=\"password\"></comp-password>\r\n                                <comp-password id=\"confirm\" name=\"confirm\"></comp-password>\r\n                            </div>\r\n\r\n                            <div class=\"footer\">\r\n                                <div class=\"btnRow\">\r\n                                    <comp-button class=\"back\" id=\"backBtn\" type=button></comp-button>\r\n                                    <comp-button class=\"next\" id=\"nextBtn\" type=button></comp-button>\r\n                                </div>\r\n                                <p>Have an account?<a href=\"/login\" class=\"link\"> Login</a></p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- User personalisation  -->\r\n                        <div id=\"step2\" hidden>\r\n                            <div class=\"textContainer\">\r\n                                <p class=\"text\">Step 2/2</p>\r\n                                <h4 class=\"title\">Personalise</h4> \r\n                            </div>\r\n                             <div class=\"inputRow\">\r\n                                <comp-input id=\"age\" name=\"age\"></comp-input>\r\n                                <comp-input id=\"occupation\" name=\"occupation\"></comp-input>\r\n                            </div>\r\n                            <div class=\"input\">\r\n                                <comp-textarea id=\"bio\" name=\"bio\"></comp-textarea>\r\n                                <comp-file id=\"picture\" name=\"picture\"></comp-file>\r\n                            </div>\r\n                            <div class=\"footer\">\r\n                                <div class=\"btnRow\">\r\n                                    <comp-button class=\"back\" id=\"backBtn2\" type=\"button\"></comp-button>\r\n                                    <comp-button class=\"submit\" id=\"submit\" type=\"submit\"></comp-button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div class=\"backgroundImage\">\r\n                <img class=\"image\" src=\"https://images.pexels.com/photos/4569340/pexels-photo-4569340.jpeg\">\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            {\r\n                class: \"background\",\r\n                widthPercent: 100,\r\n                heightVh: 100,\r\n                backgroundVar: \"black100\",\r\n                overflow: \"hidden\",\r\n                media: { maxWidthBp: 600, height: 1000 }\r\n            },\r\n            { class: \"formObj\", widthPercent: 100 },\r\n            {\r\n                class: \"container\",\r\n                display: \"flex\",\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"centre\"\r\n                }\r\n            },\r\n            {\r\n                class: \"backgroundImage\",\r\n                widthPercent: 100,\r\n                heightVh: 100,\r\n                paddingLeft: 400,\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    heightVh: 40,\r\n                    margin: 0,\r\n                    padding: 0\r\n                }\r\n            },\r\n            {\r\n                class: \"image\",\r\n                widthPercent: 100,\r\n                heightPercent: 100,\r\n                objectFit: \"cover\"\r\n            },\r\n            {\r\n                class: \"modal\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"centre\",\r\n                widthPercent: 100,\r\n                maxWidth: 500,\r\n                minWidth: 320,\r\n                background: \"white\",\r\n                position: \"absolute\",\r\n                zIndex: 800,\r\n                padding: 20,\r\n                borderRadius: 14,\r\n                marginLeft: 100,\r\n                marginTop: 110,\r\n                marginBotton: 50,\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    widthPercent: 100,\r\n                    maxWidth: 350,\r\n                    minWidth: 250,\r\n                    margin: 0,\r\n                    marginTop: 150,\r\n                    boxSizing: \"border-box\"\r\n                }\r\n            },\r\n            {\r\n                class: \"input\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                widthPercent: 100,\r\n                gap: 20,\r\n                padding: [20, 0, 40, 0],\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    padding: [10, 0, 20, 0],\r\n                    gap: 15,\r\n                }\r\n            },\r\n            {\r\n                class: \"inputRow\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                gap: 15,\r\n                widthPercent: 100,\r\n                justifyContent: \"space-between\",\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    flexDirection: \"column\"\r\n                }\r\n            },\r\n            {\r\n                class: \"btnRow\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                gap: 15,\r\n                widthPercent: 100,\r\n                justifyContent: \"space-between\"\r\n            },\r\n            {\r\n                class: \"title\",\r\n                fontWeight: \"bold\"\r\n            },\r\n            {\r\n                class: \"link\",\r\n                colourVar: \"black80\",\r\n                fontWeight: \"bold\",\r\n                textDecoration: \"underline\",\r\n                cursor: \"pointer\",\r\n            },\r\n            {\r\n                class: \"link\",\r\n                pseudoClass: \"hover\",\r\n                colourVar: \"black100\",\r\n            },\r\n            {\r\n                class: \"textContainer\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                widthPercent: 100,\r\n                gap: 5,\r\n            },\r\n            {\r\n                class: \"text\",\r\n                colourVar: \"black60\",\r\n                display: \"flex\",\r\n                alignSelf: \"start\",\r\n\r\n            },\r\n            {\r\n                class: \"footer\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"centre\",\r\n                widthPercent: 100,\r\n                gap: 10,\r\n            },\r\n        ];\r\n    }\r\n\r\n    checkPassword(input1, input2) {\r\n        return (input1.value.trim() == input2.value.trim()) ? true : false;\r\n    }\r\n\r\n    validateElements(inputs) {\r\n        let isValid = true;\r\n\r\n        for (let i in inputs) {\r\n            if (inputs[i].required && inputs[i].isEmpty()) {\r\n                const inputField = inputs[i].query(\".inputValue\");\r\n                inputField.classList.add(\"error\");\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        return (!this.checkPassword(inputs[3], inputs[4])) ? false : isValid;\r\n    }\r\n\r\n    validatePasswords(password, confirmPass) {\r\n        if (confirmPass.value == '' || password.value == '') return;\r\n        else if (confirmPass.value === password.value) confirmPass.query(\".inputValue\").classList.add(\"success\");\r\n        else confirmPass.query(\".inputValue\").classList.remove(\"success\");\r\n    }\r\n\r\n    validateInputs(inputs, state) {\r\n        if (state) for (let i in inputs) inputs[i].query(\".inputValue\").classList.add(\"error\");\r\n        else for (let i in inputs) inputs[i].query(\".inputValue\").classList.remove(\"error\");\r\n    }\r\n\r\n    clearError(inputs) {\r\n        const field = inputs.query(\".inputValue\");\r\n        field.classList.remove(\"error\");\r\n    };\r\n\r\n    async register() {\r\n        const fd = new FormData();\r\n\r\n        fd.append(\"name\", this.getById(\"name\").value);\r\n        fd.append(\"surname\", this.getById(\"surname\").value);\r\n        fd.append(\"email\", this.getById(\"email\").value);\r\n        fd.append(\"password\", this.getById(\"password\").value);\r\n        fd.append(\"age\", this.getById(\"age\").value);\r\n\r\n        const p = this.getById(\"picture\");\r\n        const a = this.getById(\"age\");\r\n        const o = this.getById(\"occupation\");\r\n        const b = this.getById(\"bio\");\r\n\r\n        if (o.value) fd.append(\"occupation\", o.value);\r\n        if (b.value) fd.append(\"bio\", b.value);\r\n        if (p.value) fd.append(\"file\", p.value);\r\n\r\n        const result = await this.submitForm(\"/register\", fd);\r\n\r\n        if (result.ok) this.update(\"<comp-create></comp-create>\")\r\n        else alert(result.error);\r\n    }\r\n\r\n    afterRender() {\r\n        const step1 = this.getById(\"step1\");\r\n        const step2 = this.getById(\"step2\");\r\n        const backButton = this.getById(\"backBtn\");\r\n        const backBtn2 = this.getById(\"backBtn2\");\r\n        const nextButton = this.getById(\"nextBtn\");\r\n        const submitButton = this.getById(\"submit\");\r\n        const email = this.getById(\"email\");\r\n        const password = this.getById(\"password\");\r\n        const confirmPass = this.getById(\"confirm\");\r\n        const name = this.getById(\"name\");\r\n        const surname = this.getById(\"surname\");\r\n        const age = this.getById(\"age\");\r\n        const occupation = this.getById(\"occupation\");\r\n        const bio = this.getById(\"bio\");\r\n        const picture = this.getById(\"picture\");\r\n\r\n        backButton.text = \"Back\";\r\n        backButton.variant = 2;\r\n        backButton.fill = true;\r\n        backBtn2.text = \"Back\";\r\n        backBtn2.variant = 2;\r\n        backBtn2.fill = true;\r\n        nextButton.text = \"Next\";\r\n        nextButton.variant = 1;\r\n        nextButton.fill = true;\r\n        submitButton.text = \"Register\";\r\n        submitButton.variant = 1;\r\n        submitButton.fill = true;\r\n\r\n        /**\r\n         * Form inputs and required fields\r\n         */\r\n        email.label = \"Email\";\r\n        email.prompt = \"Enter email\";\r\n        email.type = \"email\";\r\n        password.label = \"Password\";\r\n        password.prompt = \"Password\";\r\n        password.enableEntropy = true;\r\n        confirmPass.label = \"Confirm Password\";\r\n        confirmPass.prompt = \"Confirm password\";\r\n        name.label = \"Name\";\r\n        name.prompt = \"Enter name\";\r\n        surname.label = \"Surname\";\r\n        surname.prompt = \"Enter surname\";\r\n        age.label = \"Age\";\r\n        age.prompt = \"Enter your age\";\r\n        age.type = \"number\";\r\n        occupation.label = \"Occupation\";\r\n        occupation.prompt = \"Eg. student\";\r\n        occupation.type = \"text\";\r\n        bio.label = \"Bio\";\r\n        bio.prompt = \"Tell us more about you...\";\r\n        bio.type = \"textarea\";\r\n\r\n        if (picture) {\r\n            picture.label = \"Profile picture\";\r\n            picture.prompt = \"Upload photo\";\r\n            picture.type = \"file\";\r\n\r\n        }\r\n\r\n        name.required = true;\r\n        surname.required = true;\r\n        email.required = true;\r\n        password.required = true;\r\n        confirmPass.required = true;\r\n        age.required = true;\r\n\r\n        nextButton.addEventListener(\"click\", () => {\r\n            const inputs = [name, surname, email, password, confirmPass];\r\n            let valid = this.validateElements(inputs);\r\n\r\n            if (valid) {\r\n                step1.setAttribute(\"hidden\", \"\");\r\n                step2.removeAttribute(\"hidden\");\r\n            } else this.validateInputs(inputs, true);\r\n        });\r\n\r\n        confirmPass.addEventListener(\"input\", () => this.validatePasswords(password, confirmPass));\r\n        password.addEventListener(\"input\", () => this.validatePasswords(password, confirmPass));\r\n\r\n        [name, surname, email, confirmPass].forEach(input => {\r\n            input.addEventListener(\"input\", () => this.clearError(input));\r\n        });\r\n\r\n        backBtn2.addEventListener(\"click\", () => {\r\n            step2.setAttribute(\"hidden\", \"\");\r\n            step1.removeAttribute(\"hidden\");\r\n        });\r\n\r\n        submitButton.addEventListener(\"click\", (e) => {\r\n            if (!age.value) {\r\n                age.query(\".inputValue\").classList.add(\"error\");\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            this.register();\r\n        });\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comp-pages/register.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comp-pages/verified.js":
/*!*****************************************************!*\
  !*** ./app/static/jay-comps/comp-pages/verified.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Verified: () => (/* binding */ Verified)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Verified extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    createHTML() {\r\n        return /* html */`\r\n        <div class=\"background\">\r\n            <div class=\"container\">\r\n                <comp-dialog id=\"describe\"></comp-dialog>\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    createCSS() {\r\n        const effect = this.effect.slideUp(20);\r\n        const prop = this.effect.prop(\"slideUp\", .5);\r\n\r\n        const background = {\r\n            class: \"background\",\r\n            display: \"flex\",\r\n            heightVh: 100,\r\n            flexDirection: \"column\",\r\n            widthPercent: 100,\r\n            alignItems: \"centre\",\r\n            backgroundVar: \"black10\",\r\n            justifyContent: \"centre\",\r\n            overflow: \"hidden\",\r\n            media: {\r\n                maxWidthBp: 600,\r\n                padding: 20,\r\n                width: \"auto\"\r\n            }\r\n        };\r\n\r\n        const container = {\r\n            class: \"container\",\r\n            background: \"white\",\r\n            animation: prop,\r\n            width: \"auto\",\r\n        };\r\n\r\n        return [effect, background, container];\r\n    }\r\n\r\n    afterRender() {\r\n        const describe = this.getById(\"describe\");\r\n        describe.title = \"Verified\";\r\n        describe.paragraph = `Your account has now been verified.`;\r\n\r\n        const btn = describe.query(\"comp-button\");\r\n        btn.text = \"Continue\";\r\n        btn.fill = true;\r\n\r\n        const icon = describe.query(\"comp-icon\");\r\n        icon.style.display = \"none\";\r\n\r\n        btn.addEventListener(\"click\", () => window.location.assign(\"/\"));\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comp-pages/verified.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/button.js":
/*!**********************************************!*\
  !*** ./app/static/jay-comps/comps/button.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: () => (/* binding */ Button)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n/**\r\n * Copyright (c) 2025 Josh Bassett, whondo.com\r\n * \r\n * Filename:    button.js\r\n * Author:      Josh Bassett\r\n * Date:        10/06/2025\r\n * Version:     1.0\r\n * \r\n * Description: Class that creates a reusable Button Comp.\r\n */\r\n\r\n\r\n\r\nclass Button extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    text_; variant_; fill_ = false;\r\n\r\n    set text(v) {\r\n        this.text_ = v;\r\n        this.update();\r\n    }\r\n    set variant(v) {\r\n        this.variant_ = v;\r\n        this.update();\r\n    }\r\n    set fill(f) {\r\n        this.fill_ = f;\r\n        this.update();\r\n    }\r\n\r\n    get text() { return this.text_; }\r\n    get variant() { return this.variant_; }\r\n    get fill() { return this.fill_; }\r\n\r\n    beforeRender() {\r\n        if (!this.text_) this.text_ = \"Button\";\r\n        if (!this.variant_) this.variant_ = 1;\r\n    }\r\n\r\n    createHTML() { return `<button class=\"button\">${this.text}</button>`; }\r\n\r\n    createCSS() {\r\n        let button, buttonHover, buttonActive;\r\n\r\n        const primary = {\r\n            class: \"button\",\r\n            colour: \"white\",\r\n            widthPercent: 100,\r\n            backgroundVar: \"black100\",\r\n            padding: [12, 28],\r\n            borderVar: \"black100\",\r\n            borderRadius: 8,\r\n            fontSize: 16,\r\n            cursor: \"pointer\",\r\n            transition: [\"background\", \"0.1s\", \"ease-in-out\"]\r\n        };\r\n\r\n        const primaryHover = {\r\n            class: \"button\",\r\n            pseudoClass: \"hover\",\r\n            border: \"black\",\r\n            backgroundVar: \"black80\",\r\n        };\r\n\r\n        const primaryActive = {\r\n            class: \"button\",\r\n            pseudoClass: \"active\",\r\n            borderVar: \"black60\",\r\n            backgroundVar: \"black60\"\r\n        };\r\n\r\n        const secondary = {\r\n            class: \"button\",\r\n            colourVar: \"black100\",\r\n            backgroundVar: \"black10\",\r\n            widthPercent: 100,\r\n            borderVar: \"border\",\r\n            padding: [12, 28],\r\n            borderRadius: 8,\r\n            fontSize: 16,\r\n            cursor: \"pointer\",\r\n            transition: [\"background\", \"0.1s\", \"ease-in-out\"]\r\n        };\r\n\r\n        const secondaryHover = ({\r\n            class: \"button\",\r\n            pseudoClass: \"hover\",\r\n            backgroundVar: \"black20\"\r\n        });\r\n\r\n        const secondaryActive = ({\r\n            class: \"button\",\r\n            pseudoClass: \"active\",\r\n            backgroundVar: \"black40\"\r\n        });\r\n\r\n        if (this.variant_ == 1) {\r\n            button = primary;\r\n            buttonHover = primaryHover;\r\n            buttonActive = primaryActive;\r\n        }\r\n\r\n        else if (this.variant_ == 2) {\r\n            button = secondary;\r\n            buttonHover = secondaryHover;\r\n            buttonActive = secondaryActive;\r\n        }\r\n\r\n        const fill = this.fill_ ? { widthPercent: 100 } : { width: \"auto\" };\r\n\r\n        return [fill, button, buttonHover, buttonActive];\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/button.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/card.js":
/*!********************************************!*\
  !*** ./app/static/jay-comps/comps/card.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Card: () => (/* binding */ Card)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n/**\r\n * Copyright (c) 2025 Josh Bassett, whondo.com\r\n * \r\n * Filename:    card.js\r\n * Author:      Josh Bassett\r\n * Date:        10/06/2025\r\n * Version:     1.0\r\n * \r\n * Description: Class that creates a reusable Card Comp.\r\n */\r\n\r\n\r\n\r\nclass Card extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp { \r\n\r\n    cardTitle_; cardText_; buttonText_; buttonAction_; cardImage_; imageHTML_;\r\n       \r\n    set cardTitle(v) {\r\n        this.cardTitle_ = v;\r\n        this.update();\r\n    }\r\n    set cardText(v) {\r\n        this.cardText_ = v;\r\n        this.update();\r\n    }\r\n    set buttonText(v) {\r\n        this.buttonText_ = v;\r\n        this.update();\r\n    }\r\n    set buttonAction(v) {\r\n        this.buttonAction_ = v;\r\n        this.update();\r\n    }\r\n    set cardImage(v) {\r\n        this.cardImage_ = v;\r\n        this.update();\r\n    }\r\n    set imageHTML(v){\r\n        this.imageHTML_ = v;\r\n        this.update();\r\n    }\r\n\r\n    get cardTitle()    { return this.cardTitle_; }\r\n    get cardText()     { return this.cardText_; }\r\n    get buttonText()   { return this.buttonText_; }\r\n    get buttonAction() { return this.buttonAction_; }\r\n    get cardImage()    { return this.cardImage_; }\r\n    get innerHTML() { return this.imageHTML_; }\r\n\r\n    beforeRender(){\r\n        if (!this.cardTitle_) this.cardTitle_ = \"Card header\";\r\n        if (!this.cardText_) this.cardText_ = \"Card text goes here.\";\r\n        if (!this.buttonText_) this.buttonText_ = \"Card Action\";\r\n        if (!this.buttonAction_) this.buttonAction_ = this.debug;\r\n        if (!this.cardImage_) this.cardImage_    = \"\";\r\n    }\r\n    \r\n    createHTML() {\r\n        imageHTML_;\r\n\r\n        if (this.cardImage_) this.imageHTML_ = /* html */`<img src=\"${this.cardImage_}\">`;\r\n\r\n        return /* html */ `\r\n        <div class=\"cardContainer\">\r\n            ${imageHTML}\r\n            <div class=\"textContainer\">\r\n                <h2>${this.cardTitle_}</h2>\r\n                <p>${this.cardText_}</p>\r\n            </div>\r\n            <comp-button id=\"button\"></comp-button>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * @brief A method that builds the card's CSS.\r\n     * \r\n     * @returns {literal} CSS to be injected into Comp.\r\n     */\r\n    createCSS() {\r\n        return [\r\n            {\r\n                valueID: \"cardContainer\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                boxSizing: \"border-box\",\r\n                widthPercent: 100, \r\n                maxWidth: 500, \r\n                padding: 20,\r\n                alignItems: \"start\",\r\n                border: true,\r\n                borderRadius: 15,\r\n                gap: 20,\r\n                background: \"white\"\r\n            },\r\n            {\r\n                valueID: \"textContainer\",\r\n                direction: \"column\", \r\n                widthPercent: 100,\r\n                maxWidth: 500, \r\n                padding: 0, \r\n                alignItems: \"start\", \r\n                border: false\r\n            }\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * @brief A method that opens a new page, with Safari support.\r\n     * \r\n     * @param {any} event \r\n     */\r\n    onButtonClick(event) {\r\n\r\n        event.preventDefault();\r\n \r\n        this.buttonAction_();\r\n    \r\n    }\r\n\r\n    /**\r\n     * @brief A method that runs a build hook when the Component is rendered it\r\n     *        provides the inner JavaScript logic for the Comp. \r\n     */\r\n    hook() {\r\n\r\n        const cardButton   = this.getById(\"button\");\r\n        cardButton.variant = 2;\r\n\r\n        cardButton.addEventListener(\"click\", this.onButtonClick.bind(this));\r\n    \r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/card.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/carousel.js":
/*!************************************************!*\
  !*** ./app/static/jay-comps/comps/carousel.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Carousel: () => (/* binding */ Carousel)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Carousel extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    createHTML() {\r\n        return /* html */ `\r\n            <div class=\"carousel-container\">\r\n                <div class=\"carousel-box\">\r\n                    <comp-icon class=\"arrow left\" part=\"arrow-left\"></comp-icon>\r\n                    \r\n                    <div class=\"carousel-scroll\">\r\n                        <div class=\"carousel-track\">\r\n                            <slot></slot>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <comp-icon class=\"arrow right\" part=\"arrow-right\"></comp-icon>\r\n                </div>\r\n\r\n                <div class=\"carousel-counter\">1 / 1</div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            {\r\n                class: \"carousel-container\",\r\n                widthPercent: 100,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"centre\",\r\n                gap: 8,\r\n            },\r\n            {\r\n                class: \"carousel-box\",\r\n                position: \"relative\",\r\n                widthPercent: 100,\r\n                display: \"flex\",\r\n                alignItems: \"centre\",\r\n                height: 387,\r\n            },\r\n            {\r\n                class: \"carousel-scroll\",\r\n                overflow: \"hidden\",\r\n                flexGrow: 1,\r\n            },\r\n            {\r\n                class: \"carousel-track\",\r\n                display: \"flex\",\r\n                transition: [\"transform\", \"0.4s\", \"ease-in-out\"],\r\n                gap: 12,\r\n                paddingLeft: 6,\r\n                paddingRight: 6,\r\n                boxSizing: \"border-box\",\r\n            },\r\n            {\r\n                class: \"carousel-track ::slotted(*)\",\r\n                flex: \"0 0 50%\",\r\n                boxSizing: \"border-box\",\r\n                display: \"none\",\r\n            },\r\n            {\r\n                class: \"arrow\",\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                transform: \"translateY(-50%)\",\r\n                zIndex: 1,\r\n                width: 32,\r\n                height: 32,\r\n                display: \"flex\",\r\n                alignItems: \"centre\",\r\n                justifyContent: \"centre\",\r\n                cursor: \"pointer\",\r\n            },\r\n            {\r\n                class: \"arrow.left\",\r\n                left: -16,\r\n            },\r\n            {\r\n                class: \"arrow.right\",\r\n                right: -16,\r\n            },\r\n            {\r\n                class: \"carousel-counter\",\r\n                fontSize: 14,\r\n                marginTop: 4,\r\n            },\r\n        ];\r\n    }\r\n\r\n    slide(direction) {\r\n        const visibleItems = this.items.filter(el => el.style.display !== \"none\");\r\n        const newIndex = this.index + direction;\r\n        if (newIndex < 0 || newIndex >= visibleItems.length) return;\r\n\r\n        this.index = newIndex;\r\n        this.updateView();\r\n    }\r\n\r\n    updateView() {\r\n        const scrollBox = this.query(\".carousel-scroll\");\r\n        const visibleItems = this.items.filter(el => el.style.display !== \"none\");\r\n        const item = visibleItems[this.index];\r\n        if (!item || !scrollBox) return;\r\n\r\n        const scrollOffset = item.offsetLeft - this.offsetLeft;\r\n        this.track.style.transform = `translateX(-${scrollOffset}px)`;\r\n        this.counter.textContent = `${Math.min(this.index + 1, visibleItems.length)} / ${visibleItems.length}`;\r\n    }\r\n\r\n    afterRender() {\r\n        this.track = this.query(\".carousel-track\");\r\n        this.counter = this.query(\".carousel-counter\");\r\n\r\n        const leftBtn = this.query(\".arrow.left\");\r\n        const rightBtn = this.query(\".arrow.right\");\r\n        const slot = this.query(\"slot\");\r\n\r\n        leftBtn.path = \"arrow_back.svg\";\r\n        rightBtn.path = \"arrow.svg\";\r\n\r\n        rightBtn.style.background = \"var(--black100)\";\r\n        leftBtn.style.background = \"var(--black100)\";\r\n\r\n        const updateItems = () => {\r\n            this.items = slot.assignedElements() || [];\r\n            this.index = 0;\r\n\r\n            this.items.forEach((el, i) => {\r\n                el.style.display = i === 0 ? \"block\" : \"none\";\r\n            });\r\n\r\n            this.updateView();\r\n        };\r\n\r\n        this.track.addEventListener(\"photo-uploaded\", () => {\r\n            const next = this.items.find(el => el.style.display === \"none\" || getComputedStyle(el).display === \"none\");\r\n            if (next) {\r\n                next.style.display = \"block\";\r\n                this.updateView();\r\n            }\r\n        })\r\n\r\n        slot.addEventListener(\"slotchange\", updateItems);\r\n        updateItems();\r\n\r\n        leftBtn.addEventListener(\"click\", () => this.slide(-1));\r\n        rightBtn.addEventListener(\"click\", () => this.slide(1));\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/carousel.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/cookie.js":
/*!**********************************************!*\
  !*** ./app/static/jay-comps/comps/cookie.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CookieBanner: () => (/* binding */ CookieBanner)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass CookieBanner extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n\r\n    slideUP( y = 20 ){\r\n\r\n        return /* css */`\r\n            @keyframes slideUp {\r\n\r\n                0% {\r\n                    opacity: 0;\r\n                    transform: translateX(-50%) translateY(${y}px);\r\n                }\r\n\r\n                100% {\r\n                    opacity: 1;\r\n                    transform: translateX(-50%) translateY(0);\r\n                }\r\n            }\r\n        `;\r\n    \r\n    }\r\n\r\n    slideDown ( y = 20 ) {\r\n\r\n        return /* css */`\r\n            @keyframes slideDown {\r\n\r\n                0%{ \r\n                    opacity: 1;\r\n                     transform: translateX(-50%) translateY(0);\r\n                }\r\n\r\n                100% {\r\n                    opacity: 0;\r\n                    transform: translateX(-50%) translateY(${y}px)\r\n                }\r\n            }\r\n        `;\r\n    \r\n    }\r\n\r\n\r\n    createHTML(){\r\n\r\n        return /* html */ `\r\n            <div class=\"banner\">\r\n                <div class=\"content\">\r\n                    <h4 class=\"title\">Allow Cookies</h4>\r\n                    <p class=\"message\">\r\n                        This website uses cookies for better user experience and tracking, click allow to concent to our use of cookies\r\n                    </p>\r\n                </div>\r\n                <div class=\"action\">\r\n                    <comp-button class=\"btn\" id=\"reject\">Reject</comp-button>\r\n                    <comp-button class=\"btn\" id=\"accept\">Accept</comp-button>\r\n                </div>\r\n            </div>\r\n        `;\r\n    \r\n    }\r\n\r\n\r\n    createCSS(){\r\n\r\n        const effect    = this.slideUP(20);\r\n        const slideDown = this.slideDown(20);\r\n\r\n        //PC query\r\n        const banner = {\r\n            class: \"banner\",\r\n            position: \"fixed\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            bottom: \"20px\",\r\n            leftPercent: 50,\r\n            transform: \"translateX(-50%)\",\r\n            maxWidthPercent: 100,\r\n            widthPercent: 90,\r\n            background: \"white\",\r\n            borderRadius: \"12px\",\r\n            boxShadow: [9, 8, 20, \"var(--black100)\"],\r\n            padding: \"16px\",\r\n            gap: \"12px\",\r\n            zIndex: 1000,\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"centre\",\r\n            animation: \"slideUp 0.5s ease\",\r\n            media:{ \r\n                maxWidthBp: 600,\r\n                class: \"banner\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                texAlign: \"center\",\r\n                alignItems: \"stretch\"\r\n            }\r\n        }\r\n\r\n        const content = {\r\n            class: \"content\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"6px\",\r\n            flex: 1,\r\n            \r\n        }\r\n\r\n        const title = {\r\n            class: \"title\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1rem\",\r\n            margin: 0,\r\n        }\r\n\r\n        const message = {\r\n            class: \"message\",\r\n            fontSize: \"0.85 rem\",\r\n            margin: 0,\r\n            colour: \"black80\",\r\n        }\r\n\r\n        const action = {\r\n            class: \"action\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            gap: 20,\r\n            media: {\r\n                maxWidthBp: 600,\r\n                class: \"action\",\r\n                justifyContent: \"centre\",\r\n                flexDirection: \"row\"\r\n            }\r\n        }\r\n\r\n        const btn = {\r\n            class: \"btn\",\r\n            fontSize: \"0.9rem\",\r\n            width: \"auto\",\r\n            boxSizing: \"border-box\",\r\n            media: {\r\n                maxWidthBp: 600,\r\n                class: \"btn\",\r\n                flex: 1,\r\n            }\r\n            \r\n        }\r\n\r\n        return [banner, content, title, message, action, btn, effect, slideDown];\r\n\r\n    }\r\n\r\n    afterRender(){\r\n\r\n        function getCookie(name) {\r\n\r\n            const value = `; ${document.cookie}`;\r\n            const parts = value.split(`; ${name}=`);\r\n            if (parts.length === 2) return parts.pop().split(\";\").shift();\r\n        \r\n        }\r\n\r\n        const rejectBtn = this.shadowRoot.getElementById(\"reject\");\r\n        const acceptBtn = this.shadowRoot.getElementById(\"accept\");\r\n        const banner    = this.shadowRoot.querySelector(\".banner\");\r\n\r\n        rejectBtn.text    = \"Reject\";\r\n        rejectBtn.variant = 2;\r\n        rejectBtn.fill = true;\r\n        acceptBtn.text    = \"Accept\";\r\n        acceptBtn.variant = 1;\r\n        acceptBtn.fill = true\r\n\r\n        const consent = getCookie(\"cookieConsent\");\r\n        if ( consent === \"accepted\" || consent === \"rejected\") {\r\n\r\n            banner.style.display = \"none\";\r\n\r\n        }\r\n\r\n        rejectBtn.addEventListener(\"click\", () => {\r\n            \r\n            document.cookie = \"cookieConsent=rejected; path=/; max-age=31536000\";\r\n\r\n            document.cookie = \"uID=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\r\n\r\n            banner.style.animation = \"slideDown 0.5s ease\";\r\n            banner.addEventListener(\"animationend\", () => {\r\n\r\n                banner.style.display = \"none\";\r\n            \r\n            }, {once: true} );\r\n            \r\n        });\r\n\r\n        acceptBtn.addEventListener(\"click\", () => {\r\n            \r\n            document.cookie = \"cookieConsent=accepted; path=/; max-age=31536000\";\r\n\r\n            banner.style.animation = \"slideDown 0.5s ease\";\r\n            banner.addEventListener(\"animationend\", () => {\r\n\r\n                banner.style.display = \"none\";\r\n            \r\n            }, {once:true});\r\n\r\n        });\r\n    \r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/cookie.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/dialog.js":
/*!**********************************************!*\
  !*** ./app/static/jay-comps/comps/dialog.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dialog: () => (/* binding */ Dialog)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Dialog extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    title_; paragraph_; text_;\r\n\r\n    set title(newTitle) {\r\n        this.title_ = newTitle;\r\n        this.update();\r\n    }\r\n    set paragraph(value) {\r\n        this.paragraph_ = value;\r\n        this.update();\r\n    }\r\n    set text(v) {\r\n        this.text_ = v;\r\n        this.update();\r\n    }\r\n    get paragraph() { return this.paragraph_; }\r\n    get title() { return this.title_; }\r\n    get text() { return this.text_ }\r\n\r\n    beforeRender() {\r\n        if (!this.title_) this.title_ = \"Hello World\";\r\n        if (!this.paragraph_) this.paragraph_ = \"This is a paragraph\";\r\n    }\r\n\r\n    createHTML() {\r\n        return /* html */ `\r\n            <div class=\"background\">\r\n                <div class=\"container\">\r\n                    <comp-icon class=\"icon\"></comp-icon>\r\n                    <h3 class=\"head\">${this.title_}</h3>\r\n                    <p class=\"dialog\">${this.paragraph_}</p>\r\n                    <div class=\"button-wrapper\">\r\n                    <comp-button class=\"btn\"></comp-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            {\r\n                class: \"background\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                widthPercent: 100,\r\n                alignItems: \"centre\",\r\n                gap: 0,\r\n                justifyContent: \"centre\",\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    padding: 20,\r\n                    width: \"auto\"\r\n            }\r\n            },\r\n            {\r\n                class: \"container\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                width: \"auto\",\r\n                maxWidth: 500,\r\n                padding: 20,\r\n                borderVar: \"border\",\r\n                borderRadius: 16,\r\n                gap: 10,\r\n                background: \"white\",\r\n                marginTop: 0,\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                }\r\n            },\r\n            {\r\n                class: \"dialog\",\r\n                fontSize: 16,\r\n                textAlign: \"start\",\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    fontSize: 16\r\n                }\r\n            },\r\n            {\r\n                class: \"icon\",\r\n                display: \"flex\",\r\n                alignItems: \"centre\",\r\n                justifyContent: \"centre\",\r\n                colourVar: \"black80\",\r\n            },\r\n        ];\r\n    }\r\n\r\n     afterRender() {\r\n        this.query(\"comp-button\").text = this.text_;\r\n        this.query(\"comp-button\").fill = true;\r\n        \r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/dialog.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/dropdown/address.js":
/*!********************************************************!*\
  !*** ./app/static/jay-comps/comps/dropdown/address.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Address: () => (/* binding */ Address)\n/* harmony export */ });\n/* harmony import */ var _inputs_input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../inputs/input.js */ \"./app/static/jay-comps/comps/inputs/input.js\");\n\r\n\r\nclass Address extends _inputs_input_js__WEBPACK_IMPORTED_MODULE_0__.Input {\r\n    key = \"dtoken_hEDzcyiWMr0wlL3ArWAbIjj-1cbI8XETKd4G5YEh5cPUwbvYq_4K5Y1eyhADhPZyfzU2sJaORWmDDVr6qrcxYusf4kWGtXgwtYzdKbEzbbx4bonGTIPvffGbiToGP6BMsZNwMOP2azOPPwrvlM2KhtbPt24KI_1W5HUCnaRGBTGSUzUIMaYjMZh3EN9EGMUyMogi7R2RMpY\"; // FIND A WAY TO REMOVE THIS\r\n\r\n    beforeRender() {\r\n        super.beforeRender();\r\n    }\r\n\r\n    createHTML() {\r\n        return /*html*/ `\r\n        <div class=\"inputContainer\">\r\n            <label style=\"color: var(--black80); font-size: 14px\">${this.label}</label>\r\n            <div class=\"dropdown-wrapper\">\r\n                <input class=\"inputValue\" type=\"${this.type}\" placeholder=\"${this.prompt}\">\r\n                <comp-dropdown id=\"dropdown\"></comp-dropdown>\r\n            </div>\r\n        </div>`;\r\n    }\r\n\r\n    createCSS() {\r\n        const base = super.createCSS();\r\n\r\n        const dropdown = {\r\n            class: \"dropdown-wrapper\",\r\n            widthPercent: 100,\r\n        }\r\n\r\n        return [base, dropdown,];\r\n    }\r\n\r\n    /**\r\n     * This functions set the default dropdown options to an empty array and hides the dropdown.\r\n     */\r\n    defaultDropdown() {\r\n        this.dropdown.setOptions([]);\r\n        this.dropdown.hideDropdown();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLElement} query \r\n     * This function check if the input query is less than 3 characters, it returns early. If not then fetches suggestions from the API.\r\n     * It then gets the suggestions from the API and formats them into options for the dropdown.\r\n     * \r\n     */\r\n    async fetchSuggestions(query) {\r\n        const trimmed = query.trim();\r\n        if (!trimmed || trimmed.length < 3) return;\r\n\r\n        const formattedQuery = trimmed.toUpperCase();\r\n        const url = `https://api.getaddress.io/autocomplete/${encodeURIComponent(formattedQuery)}?api-key=${this.key}`;\r\n\r\n        const res = await this.request(url, \"GET\");\r\n        if (!res.ok) {\r\n            console.error(\"autocomplete error\", res.error);\r\n            this.defaultDropdown();\r\n            return;\r\n        }\r\n\r\n        const suggestions = res.data?.suggestions || [];\r\n\r\n        if (suggestions.length === 0) {\r\n            this.defaultDropdown();\r\n            return;\r\n        }\r\n\r\n        this.suggestionMap = new Map(suggestions.map(s => [s.address, s]));\r\n\r\n        this.dropdown.setOptions(suggestions.map(s => s.address));\r\n    }\r\n\r\n    afterRender() {\r\n        const input = this.query(\"input\");\r\n        this.dropdown = this.getById(\"dropdown\");\r\n        this.dropdown.attachToInput(input);\r\n\r\n        input.addEventListener(\"input\", () => {\r\n            const query = input.value;\r\n            this.fetchSuggestions(query);\r\n        });\r\n\r\n        this.dropdown.addEventListener(\"option-selected\", async (e) => {\r\n            const text = e.detail.text;\r\n            const selected = this.suggestionMap.get(text);\r\n            if (!selected) return;\r\n\r\n            input.value = text;\r\n\r\n            const fullUrl = `https://api.getaddress.io/get/${encodeURIComponent(selected.id)}?api-key=${this.key}`;\r\n            const fullRes = await this.request(fullUrl, \"GET\");\r\n\r\n            if (!fullRes.ok) {\r\n                console.error(\"full lookup error\", fullRes.error);\r\n                return;\r\n            }\r\n\r\n            const { county, postcode, line_1, town_or_city, district } = fullRes.data;\r\n\r\n            this.fullAddress = {\r\n                name: line_1,\r\n                street: district,\r\n                town: town_or_city,\r\n                county,\r\n                postcode,\r\n            };\r\n        });\r\n    }\r\n\r\n    static { super.register(this); }\r\n\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/dropdown/address.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/dropdown/dropdown-list.js":
/*!**************************************************************!*\
  !*** ./app/static/jay-comps/comps/dropdown/dropdown-list.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dropdown: () => (/* binding */ Dropdown)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Dropdown extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n\r\n    options_ = [];\r\n    filtered_ = [];\r\n\r\n    createHTML() {\r\n        return /* html */ `\r\n        <div class=\"dropdown-container\">\r\n            <div class=\"dropdown-list\" hidden></div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            {\r\n                class: \"dropdown-container\",\r\n                widthPercent: 100,\r\n            },\r\n            {\r\n                class: \"dropdown-list\",\r\n                marginTop: 10,\r\n                widthPercent: 100,\r\n                background: \"white\",\r\n                borderRadius: 8,\r\n                border: \"none\",\r\n                overflowY: \"auto\",\r\n                maxHeight: 120,\r\n                boxShadow: [0, 4, 23, 0, \"rgba(0, 0, 0, 0.12)\"],\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    maxHeight: 120,\r\n                }\r\n            },\r\n            {\r\n                class: \"dropdown-item\",\r\n                padding: [10, 14],\r\n                fontSize: 14,\r\n                borderBottomVar: \"border\",\r\n                cursor: \"pointer\",\r\n            },\r\n            {\r\n                class: \"dropdown-item\",\r\n                pseudoClass: \"hover\",\r\n                backgroundVar: \"black10\",\r\n            },\r\n        ];\r\n    }\r\n\r\n    setOptions(options) {\r\n        this.options_ = options || [];\r\n        this.filtered_ = [...this.options_]\r\n        this.renderList();\r\n    }\r\n\r\n    resetDropdown() {\r\n        this.filtered_ = [...this.options_]\r\n        this.renderList();\r\n        this.showDropdown();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLElement} query \r\n     * This method filters the options based on the input query.\r\n     * use for find the options that match the query.\r\n     */\r\n    filterOptions(query) {\r\n        const lower = query.trim().toLowerCase();\r\n        this.filtered_ = this.options_.filter(opt => opt.toLowerCase().includes(lower));\r\n        this.renderList();\r\n        this.showDropdown();\r\n    }\r\n\r\n    renderList() {\r\n        this.dropdownEl.innerHTML = this.filtered_\r\n            .map(opt => `<div class=\"dropdown-item\" data-value=\"${opt}\">${opt}</div>`)\r\n            .join(\"\");\r\n    }\r\n\r\n    showDropdown() {\r\n        this.dropdownEl.removeAttribute(\"hidden\");\r\n    }\r\n\r\n    hideDropdown() {\r\n        this.dropdownEl.setAttribute(\"hidden\", \"\");\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLElement} input \r\n     * This method attaches the dropdown to an input element.\r\n     * @example\r\n     * const input = this.query(\".inputValue\");\r\n     * const dropdown = this.query(\"comp-dropdown\");\r\n     * dropdown.attachToInput(input);\r\n     * \r\n     */\r\n    attachToInput(input) {\r\n        this.inputEl = input;\r\n\r\n        this.inputEl.addEventListener(\"click\", () => { if (this.filtered_?.length > 0) this.resetDropdown() });\r\n        this.inputEl.addEventListener(\"input\", () => this.filterOptions(this.inputEl.value));\r\n        this.inputEl.addEventListener(\"blur\", () => {\r\n            setTimeout(() => this.hideDropdown(), 150);\r\n        });\r\n    }\r\n\r\n    afterRender() {\r\n        this.dropdownEl = this.query(\".dropdown-list\");\r\n\r\n        this.dropdownEl.addEventListener(\"click\", (e) => {\r\n            const item = e.target.closest(\".dropdown-item\");\r\n            if (!item) return;\r\n\r\n            const text = item.dataset.value;\r\n\r\n            this.dispatchEvent(new CustomEvent(\"option-selected\", {\r\n                detail: { text },\r\n                bubbles: true,\r\n            }));\r\n\r\n            this.hideDropdown();\r\n        });\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/dropdown/dropdown-list.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/dropdown/input-dropdown.js":
/*!***************************************************************!*\
  !*** ./app/static/jay-comps/comps/dropdown/input-dropdown.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InputDropdown: () => (/* binding */ InputDropdown)\n/* harmony export */ });\n/* harmony import */ var _inputs_input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../inputs/input.js */ \"./app/static/jay-comps/comps/inputs/input.js\");\n \r\n\r\nclass InputDropdown extends _inputs_input_js__WEBPACK_IMPORTED_MODULE_0__.Input{\r\n\r\n    list_ = [];\r\n\r\n    set list(newList){\r\n        if(!Array.isArray(newList)) return;\r\n        this.list_ = newList;\r\n        if(this.dropdown && this.inputEl){\r\n            this.dropdown.setOptions(newList);\r\n            this.dropdown.attachToInput(this.inputEl);\r\n        }\r\n    }\r\n\r\n    get list() { return this.list_};\r\n\r\n    createHTML() {\r\n        return /* html */ `\r\n        <div class=\"inputContainer\">\r\n            <label style=\"color: var(--black80); font-size: 14px\">${this.label}</label>\r\n           \r\n            <div class=\"input-dropdown-wrapper\">\r\n                <input class=\"inputValue\" type=\"${this.type}\" placeholder=\"${this.prompt}\">\r\n                <comp-dropdown></comp-dropdown>\r\n            </div> \r\n        </div>\r\n        `;\r\n    }\r\n\r\n    createCSS(){\r\n        const base = super.createCSS();\r\n\r\n        const dropdown = {\r\n            class: \"input-dropdown-wrapper\",\r\n            widthPercent: 100,\r\n           \r\n        }\r\n    \r\n        return [base,dropdown,]\r\n\r\n    }\r\n\r\n    afterRender(){\r\n        \r\n        this.dropdown = this.query(\"comp-dropdown\");\r\n        this.inputEl = this.query(\".inputValue\");\r\n\r\n        if(this.list_?.length > 0){\r\n            this.dropdown.setOptions(this.list);\r\n            this.dropdown.attachToInput(this.inputEl);\r\n        }\r\n\r\n        this.dropdown.addEventListener(\"option-selected\", (e) => {\r\n            if (e.detail.text) this.inputEl.value = e.detail.text;\r\n            \r\n            this.dispatchEvent(new CustomEvent(\"option-selected\", {\r\n                detail: e.detail,\r\n                bubbles: true,\r\n                composed: true\r\n            }));\r\n            \r\n        });\r\n\r\n       \r\n       \r\n    }\r\n\r\n    static { super.register(this) };\r\n\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/dropdown/input-dropdown.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/icons/icon.js":
/*!**************************************************!*\
  !*** ./app/static/jay-comps/comps/icons/icon.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Icon: () => (/* binding */ Icon)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Icon extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n\r\n    path_;\r\n\r\n    set path(newPath) {\r\n        this.path_ = newPath;\r\n        this.update();\r\n    }\r\n\r\n    get path() { return this.path_; }\r\n\r\n    beforeRender() {\r\n        if (!this.path_) this.path_ = \"attow.svg\";\r\n    }\r\n\r\n    createHTML() {\r\n        return /* html */`<img class=\"icon\" src=\"https://whondo.com/static/icons/${this.path_}\">`;\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            { width: \"auto\" },\r\n            {\r\n                class: \"icon\",\r\n                display: \"flex\",\r\n                borderVar: \"borderDefault\",\r\n                borderRadius: 8,\r\n                width: \"auto\",\r\n                padding: 5,\r\n                cursor: \"pointer\",\r\n                transition: [\"background\", \"0.1s\", \"ease-in-out\"]\r\n            },\r\n            {\r\n                class: \"icon\",\r\n                pseudoClass: \"hover\",\r\n                backgroundVar: \"black10\",\r\n                borderVar: \"border\"\r\n            },\r\n            {\r\n                class: \"icon\",\r\n                pseudoClass: \"active\",\r\n                backgroundVar: \"black20\"\r\n            },\r\n        ];\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/icons/icon.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/icons/icons.js":
/*!***************************************************!*\
  !*** ./app/static/jay-comps/comps/icons/icons.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icon.js */ \"./app/static/jay-comps/comps/icons/icon.js\");\n\r\n\r\nclass MenuIcon extends _icon_js__WEBPACK_IMPORTED_MODULE_0__.Icon {\r\n    beforeRender() {\r\n        this.path_ = \"menu.svg\";\r\n    }\r\n\r\n    static { super.register(this); }\r\n}\r\n\r\nclass CloseIcon extends _icon_js__WEBPACK_IMPORTED_MODULE_0__.Icon {\r\n    beforeRender() {\r\n        this.path_ = \"close.svg\";\r\n    }\r\n\r\n    static { super.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/icons/icons.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/icons/prompt.js":
/*!****************************************************!*\
  !*** ./app/static/jay-comps/comps/icons/prompt.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PromptIcon: () => (/* binding */ PromptIcon)\n/* harmony export */ });\n/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icon.js */ \"./app/static/jay-comps/comps/icons/icon.js\");\n\r\n\r\nclass PromptIcon extends _icon_js__WEBPACK_IMPORTED_MODULE_0__.Icon {\r\n    beforeRender() {\r\n        this.path_ = \"arrow.svg\";\r\n    }\r\n\r\n    createHTML() {\r\n        return /* html */`\r\n            <div class=\"icon-wrapper\">\r\n                <img class=\"icon-img\" src=\"static/icons/${this.path_}\">\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            { class: \"icon-wrapper\",\r\n                display: \"flex\",\r\n                alignItems: \"centre\",\r\n                justifyContent: \"centre\",\r\n                width: 44,\r\n                height: 44,\r\n                backgroundVar: \"black100\",\r\n                borderRadius: 8,\r\n                cursor: \"pointer\",\r\n                transition: [\"background\", \"0.2s\", \"ease-in-out\"]\r\n            },\r\n            { class: \"icon-wrapper\",\r\n                pseudoClass: \"hover\",\r\n                backgroundVar: \"black80\"  \r\n            },\r\n            { class: \"icon-wrapper\",\r\n                pseudoClass: \"active\",\r\n                backgroundVar: \"black20\"\r\n            },\r\n            { class: \"icon-img\", alignItems: \"centre\" }\r\n        ];\r\n    }\r\n\r\n    static { super.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/icons/prompt.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/inputs/file.js":
/*!***************************************************!*\
  !*** ./app/static/jay-comps/comps/inputs/file.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   File: () => (/* binding */ File)\n/* harmony export */ });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.js */ \"./app/static/jay-comps/comps/inputs/input.js\");\n\r\n\r\nclass File extends _input_js__WEBPACK_IMPORTED_MODULE_0__.Input {\r\n    createHTML() {\r\n        return /* html */`\r\n        <div class=\"inputContainer\">\r\n            <label style=\"color: var(--black80); font-size: 14px\">${this.label_}</label>\r\n            <div class=\"fileWrapper\">\r\n                <div class=\"fileBox\">\r\n                    <img class=\"filePreview\" src=\"\" hidden/>\r\n                    <span class=\"icon\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"currentColor\">\r\n                            <path d=\"M440-440H200v-80h240v-240h80v240h240v80H520v240h-80v-240Z\"/>\r\n                        </svg>\r\n                    </span>\r\n                    <span class=\"filePrompt\">${this.prompt_}</span>\r\n                    <input class=\"inputValue fileInput\" type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" hidden />\r\n                    <comp-button class=\"reuploadBtn\" hidden></comp-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    createCSS() {\r\n\r\n        return [\r\n            {\r\n                class: \"fileInput\",\r\n                display: \"none\",\r\n            },\r\n            {\r\n                class: \"fileWrapper\",\r\n                widthPercent: 100,\r\n                cursor: \"pointer\"\r\n            },\r\n            {\r\n                class: \"fileBox\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"centre\",\r\n                justifyContent: \"centre\",\r\n                widthPercent: 100,\r\n                maxWidthPercent: 100,\r\n                padding: 20,\r\n                border: 2,\r\n                borderRadius: 12,\r\n                borderStyle: \"dotted\",\r\n                background: \"white\",\r\n                gap: 8,\r\n                boxSizing: \"border-box\",\r\n                textAlign: \"centre\"\r\n            },\r\n            {\r\n                class: \"icon\",\r\n                fontSizeRem: 2,\r\n                fontWeight: \"bold\",\r\n                colourVar: \"black80\",\r\n            },\r\n            {\r\n                class: \"filePrompt\",\r\n                fontSizeRem: 0.9,\r\n                colourVar: \"black60\",\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    fontSizeRem: 0.8,\r\n                    wordWrap: \"break-word\",\r\n                    maxWidth: 120\r\n                }\r\n\r\n            },\r\n            {\r\n                class: \"fileBox\",\r\n                pseudoClass: \"hover\",\r\n                outline: [\"solid\", 2, \"var(--black60)\"]\r\n            },\r\n            {\r\n                class: \"fileBox\",\r\n                pseudoClass: \"focus\",\r\n                outline: [\"solid\", 2, \"var(--black100)\"]\r\n            },\r\n            {\r\n                class: \"dragover\",\r\n                outline: [\"solid\", 2, \"var(--black100)\"],\r\n                backgroundVar: \"back10\",\r\n            },\r\n            {\r\n                class: \"filePreview\",\r\n                width: \"auto\",\r\n                maxWidth: 150,\r\n                maxHeight: 150,\r\n                objectFit: \"cover\",\r\n                display: \"block\",\r\n                marginTop: 8,\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                borderRadius: 6,\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    maxWidth: 100,\r\n                    maxHeight: 100,\r\n                    marginTop: 8,\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    maxWidthPercent: 100,\r\n                    height: \"auto\",\r\n                    objectFit: \"cover\",\r\n                    borderRadius: 6\r\n                }\r\n            },\r\n            {\r\n                class: \"reuploadBtn\",\r\n                width: \"auto\",\r\n                marginTop: 12,\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    marginTop: 8,\r\n                    width: \"auto\",\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    get value() {\r\n        return this._selectedFile || this.fileInput?.files?.[0] || null;\r\n    }\r\n\r\n    afterRender() {\r\n\r\n        const filePrompt = this.query(\".filePrompt\");\r\n        const icon = this.query(\".icon\");\r\n        const preview = this.query(\".filePreview\");\r\n        const dropArea = this.query(\".fileBox\");\r\n        const reuploadBtn = this.query(\".reuploadBtn\");\r\n\r\n        reuploadBtn.text = \"Upload another\";\r\n        reuploadBtn.variant = 2;\r\n\r\n        const handleFile = (file) => {\r\n\r\n            if (!file) return;\r\n\r\n            filePrompt.textContent = file.name;\r\n\r\n            this._selectedFile = file;\r\n\r\n            if (file.type.startsWith(\"image/\")) {\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = () => {\r\n\r\n                    preview.src = reader.result;\r\n                    preview.removeAttribute(\"hidden\");\r\n                    icon.setAttribute(\"hidden\", \"\");\r\n                    reuploadBtn?.removeAttribute(\"hidden\");\r\n\r\n                };\r\n                reader.readAsDataURL(file);\r\n\r\n            }\r\n\r\n        };\r\n\r\n        const createInput = () => {\r\n            const input = document.createElement(\"input\");\r\n            input.type = \"file\";\r\n            input.className = \"inputValue fileInput\";\r\n            input.accept = \"image/png, image/jpeg, image/jpg\";\r\n            input.hidden = true;\r\n\r\n            input.addEventListener(\"change\", () => {\r\n                if (input.files?.[0]) {\r\n                    this._fileInput = input;\r\n                    handleFile(input.files[0]);\r\n                }\r\n            });\r\n\r\n            return input;\r\n\r\n        };\r\n\r\n        this._fileInput = this.query(\".fileInput\");\r\n\r\n        if (this._fileInput) {\r\n            this._fileInput.addEventListener(\"change\", () => {\r\n                if (this._fileInput.files?.[0]) {\r\n                    handleFile(this._fileInput.files[0]);\r\n                }\r\n            });\r\n        }\r\n\r\n        dropArea?.addEventListener(\"click\", () => {\r\n\r\n            this._fileInput?.click();\r\n\r\n        });\r\n\r\n        dropArea?.addEventListener(\"dragover\", (e) => {\r\n\r\n            e.preventDefault();\r\n            dropArea.classList.add(\"dragover\");\r\n\r\n        });\r\n\r\n        dropArea?.addEventListener(\"dragleave\", (e) => {\r\n\r\n            e.preventDefault();\r\n            dropArea.classList.remove(\"dragover\");\r\n\r\n        });\r\n\r\n        dropArea?.addEventListener(\"drop\", (e) => {\r\n\r\n            e.preventDefault();\r\n            dropArea.classList.remove(\"dragover\");\r\n\r\n            const file = e.dataTransfer.files[0];\r\n            if (file) {\r\n\r\n                this._fileInput?.remove();\r\n                const input = createInput();\r\n                dropArea.appendChild(input);\r\n                this._fileInput = input;\r\n\r\n                handleFile(file);\r\n            }\r\n\r\n        });\r\n\r\n        reuploadBtn?.addEventListener(\"click\", (e) => {\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            this._fileInput?.remove();\r\n\r\n            const newInput = createInput();\r\n            dropArea.appendChild(newInput);\r\n            this._fileInput = newInput;\r\n\r\n            setTimeout(() => newInput.click(), 10);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    static { super.register(this); }\r\n\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/inputs/file.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/inputs/filecard.js":
/*!*******************************************************!*\
  !*** ./app/static/jay-comps/comps/inputs/filecard.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FileCard: () => (/* binding */ FileCard)\n/* harmony export */ });\n/* harmony import */ var _file_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./file.js */ \"./app/static/jay-comps/comps/inputs/file.js\");\n\r\n\r\nclass FileCard extends _file_js__WEBPACK_IMPORTED_MODULE_0__.File {\r\n\r\n    createHTML() {\r\n        return /* html */`\r\n        <div class=\"inputContainer\">\r\n            <div class=\"fileWrapper\">\r\n                <div class=\"fileBox\">\r\n                    <div class=\"imageContainer\" hidden>\r\n                        <img class=\"filePreview\" src=\"\" hidden/>\r\n                    </div>\r\n                    <span class=\"icon\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"40px\" viewBox=\"0 -960 960 960\" width=\"40px\" fill=\"currentColor\">\r\n                            <path d=\"M440-440H200v-80h240v-240h80v240h240v80H520v240h-80v-240Z\"/>\r\n                        </svg>\r\n                    </span>\r\n                    <span class=\"filePrompt\">${this.prompt_}</span>\r\n                    <input class=\"inputValue fileInput\" type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" hidden />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    createCSS() {\r\n        const base = super.createCSS();\r\n\r\n        const fileBox = {\r\n            class: \"fileBox\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"centre\",\r\n            justifyContent: \"centre\",\r\n            position: \"relative\",\r\n            maxWidthPercent: 100,\r\n            padding: 0,\r\n            border: 2,\r\n            borderRadius: 8,\r\n            borderStyle: \"dotted\",\r\n            background: \"white\",\r\n            gap: 8,\r\n            boxSizing: \"border-box\",\r\n            textAlign: \"centre\",\r\n            overflow: \"hidden\",\r\n            height: 387,\r\n            media: {\r\n                maxWidthBp: 600,\r\n                width: 218,\r\n            }\r\n        };\r\n\r\n        const previewBox = {\r\n            class: \"filePreview\",\r\n            maxWidthPercent: 100,\r\n            maxHeightPercent: 100,\r\n            objectFit: \"cover\",\r\n            display: \"block\",\r\n            objectPosition: \"centre\",\r\n            margin: 0,\r\n            borderRadius: 12,\r\n            height: 387,\r\n            widthPercent: 100,\r\n            media: {\r\n                maxWidthBp: 600,\r\n                marginTop: 8,\r\n                maxWidthPercent: 100,\r\n                height: 387,\r\n                widthPercent: 100,\r\n                objectFit: \"cover\",\r\n                borderRadius: 6\r\n            }\r\n\r\n        };\r\n\r\n        const imageContainer = {\r\n            class: \"imageContainer\",\r\n            widthPercent: 100,\r\n            position: \"relative\",\r\n        };\r\n\r\n        const error = {\r\n            class: \"error\",\r\n            border: [\"solid\", 2, \"var(--red100)\"],\r\n        }\r\n\r\n        return [base, previewBox, fileBox, imageContainer, error];\r\n\r\n    }\r\n\r\n    get value() {\r\n        return this._selectedFile || null;\r\n    }\r\n\r\n    afterRender() {\r\n\r\n        const filePrompt = this.query(\".filePrompt\");\r\n        const icon = this.query(\".icon\");\r\n        const preview = this.query(\".filePreview\");\r\n        const dropArea = this.query(\".fileBox\");\r\n        const container = this.query(\".imageContainer\");\r\n\r\n        const handleFile = (file) => {\r\n\r\n            if (!file) return;\r\n\r\n            const isFirstUpload = !this._uploadedOnce;\r\n\r\n            filePrompt.setAttribute(\"hidden\", \"\");\r\n\r\n            this._selectedFile = file;\r\n\r\n            if (file.type.startsWith(\"image/\")) {\r\n                const reader = new FileReader();\r\n\r\n                reader.onload = () => {\r\n                    preview.src = reader.result;\r\n                    container.removeAttribute(\"hidden\");\r\n                    preview.removeAttribute(\"hidden\");\r\n                    icon.setAttribute(\"hidden\", \"\");\r\n\r\n                    if (isFirstUpload) {\r\n                        this._uploadedOnce = true;\r\n\r\n                        this.dispatchEvent(new CustomEvent(\"photo-uploaded\", {\r\n                            bubbles: true,\r\n                        }));\r\n                    }\r\n                };\r\n\r\n                reader.readAsDataURL(file);\r\n            }\r\n        };\r\n\r\n        const createInput = () => {\r\n            const input = document.createElement(\"input\");\r\n            input.type = \"file\";\r\n            input.className = \"inputValue fileInput\";\r\n            input.accept = \"image/png, image/jpeg, image/jpg\";\r\n            input.hidden = true;\r\n\r\n            input.addEventListener(\"change\", () => {\r\n                if (input.files?.[0]) {\r\n                    this._fileInput = input;\r\n                    handleFile(input.files[0]);\r\n                }\r\n            });\r\n\r\n            return input;\r\n        };\r\n\r\n        this._fileInput = this.query(\".fileInput\");\r\n\r\n        if (this._fileInput) {\r\n\r\n            this._fileInput.addEventListener(\"change\", () => {\r\n                if (this._fileInput.files?.[0]) { handleFile(this._fileInput.files[0]); }\r\n            });\r\n        }\r\n\r\n        dropArea?.addEventListener(\"click\", () => { this._fileInput?.click(); });\r\n\r\n        dropArea?.addEventListener(\"dragover\", (e) => {\r\n            e.preventDefault();\r\n            dropArea.classList.add(\"dragover\");\r\n        });\r\n\r\n        dropArea?.addEventListener(\"dragleave\", (e) => {\r\n            e.preventDefault();\r\n            dropArea.classList.remove(\"dragover\");\r\n        });\r\n\r\n        dropArea?.addEventListener(\"drop\", (e) => {\r\n\r\n            e.preventDefault();\r\n            dropArea.classList.remove(\"dragover\");\r\n\r\n            const file = e.dataTransfer.files[0];\r\n            if (file) {\r\n                this._fileInput?.remove();\r\n                const input = createInput();\r\n                dropArea.appendChild(input);\r\n                this._fileInput = input;\r\n\r\n                handleFile(file);\r\n            }\r\n        });\r\n    }\r\n\r\n    static { super.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/inputs/filecard.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/inputs/input.js":
/*!****************************************************!*\
  !*** ./app/static/jay-comps/comps/inputs/input.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Input: () => (/* binding */ Input)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Input extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    label_ ; type_; prompt_; required_; error_;\r\n    \r\n    set label(newLabel) {\r\n        this.label_ = newLabel;\r\n        this.update();\r\n    }\r\n\r\n    set type(newType) {\r\n        this.type_ = newType;\r\n        this.update();\r\n    }\r\n\r\n    set prompt(newPrompt) {\r\n        this.prompt_ = newPrompt;\r\n        this.update();\r\n    }\r\n    \r\n    set required (flag){\r\n        this.required_ = flag;\r\n        this.update();\r\n    }\r\n\r\n    get label()    { return this.label_; }\r\n    get type()     { return this.type_; }\r\n    get prompt()   { return this.prompt_; }\r\n    get value()    { return this.shadowRoot.querySelector(\"input, textarea\").value;}\r\n    get required() { return this.required_; }\r\n    \r\n    beforeRender(){\r\n        if (!this.label_) this.label_ = \"Text\";\r\n        if (!this. type_) this.type_ = \"Label\";\r\n        if (!this.prompt_) this.prompt_= \"This is placeholder\";\r\n        if (!this.required_) this.required_ = false;\r\n        if (!this.error_) this.error_ = false;\r\n    }\r\n   \r\n    createHTML() {\r\n        return /* html */ `\r\n        <div class=\"inputContainer\">\r\n            <label style=\"color: var(--black80); font-size: 14px\">${this.label}</label>\r\n            <input class=\"inputValue\" type=\"${this.type}\" placeholder=\"${this.prompt}\">\r\n        </div>\r\n        `;\r\n    }\r\n    \r\n    createCSS() {\r\n        return [\r\n            { class: \"inputContainer\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                widthPercent: 100,\r\n                maxWidth: \"none\",\r\n                padding: 0,\r\n                alignItems: \"start\",\r\n                gap: 10,\r\n                background: \"white\"\r\n            },\r\n            { class: \"inputValue\",\r\n                display: \"block\",\r\n                fontSize: 16,\r\n                widthPercent: 100,\r\n                padding: [8, 12],\r\n                borderVar: \"border\",\r\n                borderRadius: 8,\r\n                boxSizing: \"border-box\"\r\n            },\r\n            { class: \"inputValue\", pseudoClass: \"hover\",\r\n                outline: [\r\n                    \"solid\", 2, \"var(--black60)\"\r\n                ]\r\n            },\r\n            { class: \"inputValue\", pseudoClass: \"focus\",\r\n                outline: [\r\n                    \"solid\", 2, \"var(--black100)\"\r\n                ]\r\n            },\r\n            { class: \"error\",\r\n                borderBottom: [\r\n                    \"solid\", 2, \"var(--red100)\"\r\n                ]\r\n            },\r\n            { class: \"warning\",\r\n                borderBottom: [\r\n                    \"solid\", 2, \"var(--yellow100)\"\r\n                ]\r\n            },\r\n            { class: \"success\",\r\n                borderBottom: [\r\n                    \"solid\", 2, \"var(--green100)\"\r\n                ],\r\n            },\r\n            { class: \"hint\",\r\n                fontSizeEm: 0.75,\r\n                colourVar: \"black100\",\r\n                paddingTop: 4\r\n            }\r\n        ];\r\n    }\r\n\r\n    isEmpty(){ return !this.value.trim(); }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/inputs/input.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/inputs/keyword.js":
/*!******************************************************!*\
  !*** ./app/static/jay-comps/comps/inputs/keyword.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Keywords: () => (/* binding */ Keywords)\n/* harmony export */ });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.js */ \"./app/static/jay-comps/comps/inputs/input.js\");\n\r\n\r\nclass Keywords extends _input_js__WEBPACK_IMPORTED_MODULE_0__.Input {\r\n    tags_ = [];\r\n    validOptions_ = [];\r\n\r\n    keywords = [\r\n        \"house\",\r\n        \"flat\",\r\n        \"bungalow\",\r\n        \"studio\",\r\n        \"bedsit\",\r\n        \"maisonette\",\r\n        \"shared_house\",\r\n        \"student_accommodation\",\r\n        \"en_suite\",\r\n        \"penthouse\",\r\n        \"furnished\",\r\n        \"unfurnished\",\r\n        \"bills_included\",\r\n        \"all_inclusive\",\r\n        \"double_room\",\r\n        \"single_room\",\r\n        \"balcony\",\r\n        \"garden\",\r\n        \"parking\",\r\n        \"pets_allowed\",\r\n        \"wifi_included\",\r\n        \"utilities_included\",\r\n        \"short_let\",\r\n        \"long_let\",\r\n        \"no_deposit\",\r\n        \"low_deposit\",\r\n        \"dss_accepted\",\r\n        \"guarantor_required\",\r\n        \"no_guarantor\",\r\n        \"student_friendly\",\r\n        \"city_centre\",\r\n        \"near_university\",\r\n        \"close_to_station\",\r\n        \"bus_route\",\r\n        \"zone_1\",\r\n        \"zone_2\",\r\n        \"zone_3\",\r\n        \"zone_4\",\r\n        \"cycle_friendly\",\r\n        \"lgbtq_friendly\",\r\n        \"vegan_household\",\r\n        \"non_smoking\",\r\n        \"smoking_allowed\",\r\n        \"social_house\",\r\n        \"quiet_house\",\r\n        \"wheelchair_accessible\",\r\n        \"lift\",\r\n        \"ground_floor\",\r\n        \"bike_storage\"\r\n    ];\r\n\r\n\r\n    get value() {\r\n        return this.tags_\r\n    }\r\n\r\n    beforeRender() {\r\n        super.beforeRender();\r\n    }\r\n\r\n    createHTML() {\r\n        return /* html */ `\r\n        <div class=\"inputContainer\">\r\n            \r\n            <label style=\"color: var(--black80); font-size: 14px\">${this.label}</label>\r\n           \r\n            <div class=\"input-dropdown-wrapper\">\r\n                <input class=\"inputValue input-tags\" type=\"${this.type}\" placeholder=\"${this.prompt}\">\r\n                <comp-dropdown></comp-dropdown>\r\n            </div> \r\n            \r\n            <div class=\"keywords\">\r\n                <label style=\"color: var(--black80); font-size: 14px\">My Keywords</label>\r\n                <div class=\"tags\"></div>\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    createCSS() {\r\n        const base = super.createCSS();\r\n\r\n        return [base,\r\n            {\r\n                class: \"keywords\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                maxWidth: 460,\r\n                padding: 0,\r\n                alignItems: \"start\",\r\n                gap: 10,\r\n                marginTop: 10,\r\n                background: \"white\"\r\n            },\r\n            {\r\n                class: \"tags\",\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                widthPercent: 100,\r\n                gap: 10\r\n            },\r\n            {\r\n                class: \"tag\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                background: \"white\",\r\n                padding: [8, 12],\r\n                fontSize: 14,\r\n                borderVar: \"border\",\r\n                borderRadius: 8,\r\n                gap: 10,\r\n                boxSizing: \"border-box\",\r\n                heighPercent: 100,\r\n            },\r\n            {\r\n                class: \"remove-btn\",\r\n                cursor: \"pointer\",\r\n                fontSize: 16,\r\n                colourVar: \"black60\",\r\n                padding: 2,\r\n            },\r\n            {\r\n                class: \"input-dropdown-wrapper\",\r\n                widthPercent: 100,\r\n            }\r\n        ];\r\n    }\r\n\r\n    addTag(text) {\r\n        if (this.tags_.length >= 10 || this.tags_.includes(text) || !this.validOptions_.includes(text)) return;\r\n\r\n        this.tags_.push(text);\r\n\r\n        this.inputEl?.classList.remove(\"error\");\r\n\r\n        const tagEl = document.createElement(\"div\");\r\n        tagEl.className = \"tag\";\r\n        tagEl.textContent = text;\r\n\r\n        const removeBtn = document.createElement(\"span\");\r\n        removeBtn.className = \"remove-btn\";\r\n        removeBtn.title = \"remove\"\r\n\r\n        const iconEl = document.createElement(\"comp-icon\");\r\n        iconEl.path = \"close.svg\"\r\n\r\n        removeBtn.appendChild(iconEl);\r\n        tagEl.appendChild(removeBtn);\r\n\r\n        removeBtn.addEventListener(\"click\", () => {\r\n            this.tags_ = this.tags_.filter(tag => tag !== text);\r\n            this.tagsEl.removeChild(tagEl);\r\n        });\r\n\r\n        this.tagsEl.appendChild(tagEl);\r\n    }\r\n\r\n    afterRender() {\r\n        const dropdown = this.query(\"comp-dropdown\");\r\n        this.inputEl = this.query(\".inputValue\");\r\n        this.tagsEl = this.query(\".tags\");\r\n\r\n        this.validOptions_ = this.keywords;\r\n        dropdown.setOptions(this.keywords)\r\n        dropdown.attachToInput(this.inputEl);\r\n\r\n        this.inputEl.addEventListener(\"keydown\", (e) => {\r\n            if (e.key === \"Enter\" && this.inputEl.value.trim()) {\r\n                e.preventDefault();\r\n                this.addTag(this.inputEl.value.trim());\r\n                this.inputEl.value = \"\";\r\n            }\r\n        });\r\n\r\n        dropdown.addEventListener(\"option-selected\", (e) => {\r\n            if (e.detail.text) {\r\n                this.addTag(e.detail.text);\r\n                this.inputEl.value = \"\";\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    static { super.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/inputs/keyword.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/inputs/password.js":
/*!*******************************************************!*\
  !*** ./app/static/jay-comps/comps/inputs/password.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Password: () => (/* binding */ Password)\n/* harmony export */ });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.js */ \"./app/static/jay-comps/comps/inputs/input.js\");\n\r\n\r\nclass Password extends _input_js__WEBPACK_IMPORTED_MODULE_0__.Input {\r\n    enableEntropy_ = false;\r\n\r\n    set entropy(flag) {\r\n        this.enableEntropy_ = flag;\r\n        this.update();\r\n    }\r\n\r\n    set enableEntropy(flag) {\r\n        this.enableEntropy_ = flag;\r\n        this.update();\r\n    }\r\n\r\n    get enableEntropy() { return this.enableEntropy_; }\r\n    get entropy() { return this.enableEntropy_; }\r\n\r\n    beforeRender() { if (!this.enableEntropy_) this.enableEntropy_ = false; }\r\n\r\n    createHTML() {\r\n        return /* html */`\r\n            <div class=\"inputContainer\">\r\n\r\n                <label style=\"color: var(--black80); font-size: 14px\">${this.label_}</label>\r\n                <input class=\"inputValue\" type=\"password\" placeholder=\"${this.prompt_}\">\r\n\r\n                <div class=\"hint\" style=\"display: none\">\r\n                    Hint: Use a mix of letters, numbers, and symbols\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n\r\n    calculateEntropy(password) {\r\n\r\n        let poolSize = 0;\r\n        if (/[a-z]/.test(password)) poolSize += 26;\r\n        if (/[A-Z]/.test(password)) poolSize += 26;\r\n        if (/[0-9]/.test(password)) poolSize += 10;\r\n        if (/[^A-Za-z0-9]/.test(password)) poolSize += 32;\r\n\r\n        return password.length * Math.log2(poolSize || 1);\r\n    }\r\n\r\n    validateInput(input, hint, entropy) {\r\n        entropy < 78 && entropy > 0 ? hint.style.display = \"block\" : hint.style.display = \"none\";\r\n\r\n        if (entropy == 0) input.classList.remove(\"success\", \"warning\", \"error\");\r\n\r\n        else if (entropy < 60) {\r\n            input.classList.add(\"error\");\r\n            hint.textContent = \"Weak: Try adding symbols, numbers or uppercase letters.\";\r\n        } else if (entropy < 78) {\r\n            input.classList.add(\"warning\");\r\n            hint.textContent = \"Almost strong: Consider mixing symbols and length.\";\r\n        } else if (entropy > 78) {\r\n            input.classList.add(\"success\");\r\n        }\r\n    }\r\n\r\n    afterRender() {\r\n        const input = this.query(\".inputValue\");\r\n        const hint = this.query(\".hint\");\r\n\r\n        if (this.enableEntropy_) {\r\n            input.addEventListener(\"input\", () => {\r\n                const entropy = this.calculateEntropy(input.value);\r\n                this.validateInput(input, hint, entropy);\r\n            });\r\n        }\r\n    }\r\n\r\n    static { super.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/inputs/password.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/inputs/textarea.js":
/*!*******************************************************!*\
  !*** ./app/static/jay-comps/comps/inputs/textarea.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Textarea: () => (/* binding */ Textarea)\n/* harmony export */ });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.js */ \"./app/static/jay-comps/comps/inputs/input.js\");\n\r\n\r\nclass Textarea extends _input_js__WEBPACK_IMPORTED_MODULE_0__.Input {\r\n\r\n    rows_;\r\n\r\n    set rows(newRows) {\r\n\r\n        this.rows_ = newRows;\r\n        this.update();\r\n\r\n    }\r\n\r\n    get rows() { return this.rows_; }\r\n\r\n    beforeRender() { if (!this.rows_) this.rows_ = 6; }\r\n\r\n    createHTML() {\r\n\r\n        return /* html */ `\r\n        <div class=\"inputContainer\">\r\n            <label style=\"color: var(--black80); font-size: 14px\">${this.label_}</label>\r\n            <textarea class=\"inputValue areaInput\" placeholder=\"${this.prompt_}\" rows=\"${this.rows_}\"></textarea>\r\n        </div>\r\n        `;\r\n\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            super.createCSS(),\r\n            { class: \"areaInput\",\r\n                resize: \"none\",\r\n                height: 80,\r\n                widthPercent: 100,\r\n                borderVar: \"border\",\r\n                borderRadius: 8,\r\n                boxSizing: \"border-box\",\r\n                padding: [8, 12],\r\n                fontFamily: \"Geist\",\r\n            },\r\n            { class: \"error\",\r\n                border: [\"solid\", 2, \"var(--red100)\"]\r\n            }\r\n        ];\r\n    }\r\n\r\n    static { super.register(this); }\r\n\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/inputs/textarea.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/navbar/auth_profile.js":
/*!***********************************************************!*\
  !*** ./app/static/jay-comps/comps/navbar/auth_profile.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass AuthProfile extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    async fetchProfile() {\r\n        const { ok, data, error } = await this.request(\r\n            \"https://whondo.com/verify/me\",\r\n            \"GET\"\r\n        );\r\n\r\n        if (!ok) throw new Error(error);\r\n\r\n        const pic = data.profilePicture;\r\n        return pic\r\n            ? `https://whondo.com/uploads?path=${pic}`\r\n            : \"https://whondo.com/static/icons/Profile.png\";\r\n    }\r\n\r\n    createHTML() {\r\n        const entry = this.fetchOnce(\"profilePic\", () => this.fetchProfile());\r\n        if (entry.error) return '<comp-nav-buttons></comp-nav-buttons>';\r\n        return `<img class=\"profile\" src=\"${entry.value}\">`;\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            { width: \"auto\" },\r\n            {\r\n                class: \"profile\",\r\n                width: 45,\r\n                height: 45,\r\n                borderVar: \"border\",\r\n                borderRadiusPercent: 50,\r\n            }];\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\r\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/navbar/auth_profile.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/navbar/link.js":
/*!***************************************************!*\
  !*** ./app/static/jay-comps/comps/navbar/link.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Link extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    text_;\r\n\r\n    set text(v) {\r\n        this.text_ = v;\r\n        this.update();\r\n    }\r\n\r\n    get text() { return this.text_; }\r\n\r\n    beforeRender() {\r\n        if (!this.text_) this.text_ = \"Link\";\r\n    }\r\n\r\n    createHTML() {\r\n        return `<li class=\"link\">${this.text_}</li>`;\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            { width: \"auto\" },\r\n            {\r\n                class: \"link\",\r\n                colourVar: \"black80\",\r\n                fontSize: 16,\r\n                padding: 10,\r\n                borderVar: \"borderDefault\",\r\n                borderRadius: 8,\r\n                listStyleType: \"None\",\r\n                cursor: \"pointer\",\r\n                transition: [\"background\", \"0.1s\", \"ease-in-out\"]\r\n            },\r\n            {\r\n                class: \"link\", pseudoClass: \"hover\",\r\n                colourVar: \"black100\",\r\n                borderVar: \"border\",\r\n                backgroundVar: \"black10\"\r\n            },\r\n            {\r\n                class: \"link\", pseudoClass: \"active\",\r\n                backgroundVar: \"black20\"\r\n            },\r\n        ]\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/navbar/link.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/navbar/nav_buttons.js":
/*!**********************************************************!*\
  !*** ./app/static/jay-comps/comps/navbar/nav_buttons.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NavButtons: () => (/* binding */ NavButtons)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass NavButtons extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    createHTML() {\r\n        return /*html*/`\r\n        <div class=\"buttons\">\r\n            <comp-button id=\"register\"></comp-button>\r\n            <comp-button id=\"login\"></comp-button>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    createCSS() {\r\n        return {\r\n            class: \"buttons\",\r\n            display: \"flex\",\r\n            width: \"auto\",\r\n            gap: 20\r\n        };\r\n    }\r\n\r\n    afterRender() {\r\n        const register = this.getById(\"register\");\r\n        const login = this.getById(\"login\");\r\n\r\n        register.text = \"Register\";\r\n        register.variant = 2;\r\n        login.text = \"login\";\r\n\r\n        register.addEventListener(\"click\", () =>\r\n            window.location.assign(\"/register\"));\r\n\r\n        login.addEventListener(\"click\", () =>\r\n            window.location.assign(\"/login\"));\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/navbar/nav_buttons.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/navbar/navbar.js":
/*!*****************************************************!*\
  !*** ./app/static/jay-comps/comps/navbar/navbar.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Navbar: () => (/* binding */ Navbar)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Navbar extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n\r\n    lastScrollY = window.scrollY;\r\n\r\n    createHTML() {\r\n        return /* html */`\r\n            <nav id=\"navbar\" class=\"container\">\r\n                <h3 style=\"font-weight: bold;\">Whondo</h3>\r\n                <comp-nav-links></comp-nav-links>\r\n                <comp-menu-icon class=\"menu\" id=\"menu\"></comp-menu-icon>\r\n\r\n                <comp-auth-profile class=\"desktop-profile\"></comp-auth-profile>\r\n                \r\n            </nav>\r\n\r\n            <div id=\"tray\" class=\"tray\">\r\n                <div class=\"header\">\r\n                    <h3 style=\"font-weight: bold;\">Whondo</h3>\r\n                    <comp-close-icon class=\"close\" id=\"close\"></comp-close-icon>\r\n                </div>\r\n\r\n                <comp-mob-nav-links></comp-mob-nav-links>\r\n                <comp-auth-profile></comp-auth-profile>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            { class: \"container\",\r\n                top: 0,\r\n                left: 0,\r\n                zIndex: 1000,\r\n                position: \"fixed\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                widthPercent: 100,\r\n                background: \"white\",\r\n                boxSizing: \"border-box\",\r\n                padding: [10, 20],\r\n                justifyContent: \"space-between\",\r\n                transform: \"translateY(0)\",\r\n                transition: \"transform 0.4s ease\"\r\n            },\r\n            { class: \"menu\",\r\n                display: \"none\",\r\n                media: { maxWidthBp: 600, display: \"block\" }\r\n            },\r\n            { class: \"close\",\r\n                display: \"none\",\r\n                media: { maxWidthBp: 600, display: \"block\" }\r\n            },\r\n            { class: \"mob-links\",\r\n                display: \"none\",\r\n                media: { maxWidthBp: 600, display: \"block\" }\r\n            },\r\n            { media: { maxWidthBp: 600,  \r\n                class: \"desktop-profile\", \r\n                display: \"none\" }\r\n            },\r\n            { class: \"tray\",\r\n                display: \"none\"\r\n            },\r\n            { media: { maxWidthBp: 600,\r\n                class: \"tray\",\r\n                display: \"flex\",\r\n                bottom: -500,\r\n                position: \"fixed\",\r\n                zIndex: 1000,\r\n                boxSizing: \"border-box\",\r\n                flexDirection: \"column\",\r\n                widthPercent: 100,\r\n                background: \"white\",\r\n                padding: 20,\r\n                borderRadius: 14,\r\n                boxShadow: [0, 4, 23, 0, \"var(--black20)\"],\r\n                transition: [\"bottom\", \"0.6s\", \"ease\"]}\r\n            },\r\n            { media: { maxWidthBp: 600,\r\n                class: \"trayButtons\",\r\n                display: \"flex\",\r\n                gap: 10,\r\n                paddingTop: 40}\r\n            },\r\n            { media: { maxWidthBp: 600,\r\n                class: \"header\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\"}\r\n            },\r\n            { media: { maxWidthBp: 600, \r\n                class: \"mob-links\", \r\n                display: \"block\"}\r\n            }  \r\n        ];\r\n    }\r\n\r\n    navbarScroll() {\r\n        const navbar = this.getById(\"navbar\");\r\n        const currentY = window.scrollY;\r\n        const delta = currentY - this.lastScrollY;\r\n\r\n        if (delta > 10 && currentY > 50)  navbar.style.transform = \"translateY(-100%)\";\r\n        else if (delta < -10) navbar.style.transform = \"translateY(0)\";\r\n\r\n        this.lastScrollY = currentY;\r\n    }\r\n\r\n    menu(offset) {\r\n        const tray = this.getById(\"tray\");\r\n        tray.style.bottom = offset;\r\n    }\r\n\r\n    afterRender() {\r\n        const menu = this.getById(\"menu\");\r\n        const close = this.getById(\"close\");\r\n        \r\n        this.lastScrollY = window.scrollY;\r\n        window.addEventListener(\"scroll\", () => this.navbarScroll());\r\n\r\n        menu.addEventListener(\"click\", () => this.menu(\"0\"));\r\n        close.addEventListener(\"click\", () => this.menu(\"-500px\"));\r\n    } \r\n    \r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); } \r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/navbar/navbar.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/navbar/navlinks.js":
/*!*******************************************************!*\
  !*** ./app/static/jay-comps/comps/navbar/navlinks.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NavLinks: () => (/* binding */ NavLinks)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass NavLinks extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    links_;\r\n\r\n    beforeRender() {\r\n        this.links_ = [\"About\", \"Mission\", \"Contribute\"];\r\n    }\r\n\r\n    createHTML() {\r\n        return `<ul class=\"links\"></ul>`\r\n    }\r\n\r\n    createCSS() {\r\n        return [\r\n            { width: \"auto\" },\r\n            {\r\n                class: \"links\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                gap: 20,\r\n                media: { maxWidthBp: 600, display: \"none\" }\r\n            }];\r\n    }\r\n\r\n    afterRender() {\r\n        this.links_.forEach(link => {\r\n            const li = document.createElement(\"comp-link\");\r\n            li.text = link;\r\n            this.query(\"ul\").appendChild(li);\r\n        });\r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/navbar/navlinks.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/navbar/navlinks_mob.js":
/*!***********************************************************!*\
  !*** ./app/static/jay-comps/comps/navbar/navlinks_mob.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _navlinks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./navlinks.js */ \"./app/static/jay-comps/comps/navbar/navlinks.js\");\n\r\n\r\nclass MobNavLinks extends _navlinks_js__WEBPACK_IMPORTED_MODULE_0__.NavLinks {\r\n    createCSS() {\r\n        return  { class: \"links\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"start\",\r\n            gap: 5,\r\n            padding: [10, 0, 40, 0]\r\n        };\r\n    }\r\n\r\n    static { super.register(this); }\r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/navbar/navlinks_mob.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/comps/popup/popup.js":
/*!***************************************************!*\
  !*** ./app/static/jay-comps/comps/popup/popup.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Popup: () => (/* binding */ Popup)\n/* harmony export */ });\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n\r\n\r\nclass Popup extends jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp {\r\n    title_; paragraph_; text_;\r\n\r\n    set title(newTitle) {\r\n        this.title_ = newTitle;\r\n        this.update();\r\n    }\r\n    set paragraph(value) {\r\n        this.paragraph_ = value;\r\n        this.update();\r\n    }\r\n    set text(v) {\r\n        this.text_ = v;\r\n        this.update();\r\n    }\r\n    get paragraph() { return this.paragraph_; }\r\n    get title() { return this.title_; }\r\n    get text() { return this.text_ }\r\n\r\n    beforeRender() {\r\n        if (!this.title_) this.title_ = \"Hello World\";\r\n        if (!this.paragraph_) this.paragraph_ = \"This is a paragraph\";\r\n    }\r\n\r\n    createHTML() {\r\n        return /* html */ `\r\n            <div class=\"background\">\r\n                <div class=\"container\">\r\n                    <comp-icon class=\"icon\"></comp-icon>\r\n                    <h3 class=\"head\">${this.title_}</h3>\r\n                    <p class=\"dialog\">${this.paragraph_}</p>\r\n                    <div class=\"button-wrapper\">\r\n                    <comp-button class=\"btn\"></comp-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\ncreateCSS() {\r\n        const effect = this.effect.slideUp(20);\r\n        const prop = this.effect.prop(\"slideUp\", .5);\r\n\r\n        const background = {\r\n            class: \"background\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            widthPercent: 100,\r\n            heightVh: 100,\r\n            justifyContent: \"centre\",\r\n            alignItems: \"centre\",\r\n            background: \"rgba(0, 0, 0, 0.6)\",\r\n            overflow: \"hidden\",\r\n            position: \"fixed\",\r\n            zIndex: 9999,\r\n            media: {\r\n                maxWidthBp: 600,\r\n                padding: 20,\r\n                width: \"auto\"\r\n            }\r\n        };\r\n\r\n        const container = {\r\n            class: \"container\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                width: \"auto\",\r\n                maxWidth: 500,\r\n                padding: 20,\r\n                borderVar: \"border\",\r\n                borderRadius: 16,\r\n                gap: 10,\r\n                background: \"white\",\r\n                animation: prop,\r\n                marginTop: 0,\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                }\r\n        };\r\n\r\n        const dialog = {\r\n                class: \"dialog\",\r\n                fontSize: 16,\r\n                textAlign: \"start\",\r\n                media: {\r\n                    maxWidthBp: 600,\r\n                    fontSize: 16\r\n                }\r\n            }\r\n\r\n        const icon = {\r\n                class: \"icon\",\r\n                display: \"flex\",\r\n                alignItems: \"centre\",\r\n                justifyContent: \"centre\",\r\n                colourVar: \"black80\",\r\n            }\r\n\r\n        return [background, container ,dialog, icon, effect];\r\n    }\r\n\r\n    afterRender() {\r\n        this.query(\"comp-button\").text = this.text_;\r\n        this.query(\"comp-button\").fill = true;\r\n\r\n         this.query(\"comp-button\").addEventListener(\"click\", () =>{\r\n            this.style.display = \"none\";\r\n            this.dispatchEvent(new CustomEvent(\"popup-button\",{\r\n                bubbles: true,\r\n                composed: true\r\n            }));\r\n         });\r\n        \r\n    }\r\n\r\n    static { jay_comp__WEBPACK_IMPORTED_MODULE_0__.Comp.register(this); }\r\n\r\n    \r\n}\n\n//# sourceURL=webpack:///./app/static/jay-comps/comps/popup/popup.js?\n}");

/***/ }),

/***/ "./app/static/jay-comps/imports.js":
/*!*****************************************!*\
  !*** ./app/static/jay-comps/imports.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jay_comp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jay-comp */ \"./node_modules/jay-comp/dist/comp.js\");\n/* harmony import */ var _comps_button_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./comps/button.js */ \"./app/static/jay-comps/comps/button.js\");\n/* harmony import */ var _comps_card_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./comps/card.js */ \"./app/static/jay-comps/comps/card.js\");\n/* harmony import */ var _comps_dialog_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./comps/dialog.js */ \"./app/static/jay-comps/comps/dialog.js\");\n/* harmony import */ var _comps_carousel_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./comps/carousel.js */ \"./app/static/jay-comps/comps/carousel.js\");\n/* harmony import */ var _comps_popup_popup_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./comps/popup/popup.js */ \"./app/static/jay-comps/comps/popup/popup.js\");\n/* harmony import */ var _comps_cookie_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./comps/cookie.js */ \"./app/static/jay-comps/comps/cookie.js\");\n/* harmony import */ var _comps_navbar_navbar_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./comps/navbar/navbar.js */ \"./app/static/jay-comps/comps/navbar/navbar.js\");\n/* harmony import */ var _comps_navbar_link_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./comps/navbar/link.js */ \"./app/static/jay-comps/comps/navbar/link.js\");\n/* harmony import */ var _comps_navbar_navlinks_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./comps/navbar/navlinks.js */ \"./app/static/jay-comps/comps/navbar/navlinks.js\");\n/* harmony import */ var _comps_navbar_navlinks_mob_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./comps/navbar/navlinks_mob.js */ \"./app/static/jay-comps/comps/navbar/navlinks_mob.js\");\n/* harmony import */ var _comps_navbar_auth_profile_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./comps/navbar/auth_profile.js */ \"./app/static/jay-comps/comps/navbar/auth_profile.js\");\n/* harmony import */ var _comps_navbar_nav_buttons_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./comps/navbar/nav_buttons.js */ \"./app/static/jay-comps/comps/navbar/nav_buttons.js\");\n/* harmony import */ var _comps_inputs_input_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./comps/inputs/input.js */ \"./app/static/jay-comps/comps/inputs/input.js\");\n/* harmony import */ var _comps_inputs_file_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./comps/inputs/file.js */ \"./app/static/jay-comps/comps/inputs/file.js\");\n/* harmony import */ var _comps_inputs_textarea_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./comps/inputs/textarea.js */ \"./app/static/jay-comps/comps/inputs/textarea.js\");\n/* harmony import */ var _comps_inputs_password_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./comps/inputs/password.js */ \"./app/static/jay-comps/comps/inputs/password.js\");\n/* harmony import */ var _comps_dropdown_address_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./comps/dropdown/address.js */ \"./app/static/jay-comps/comps/dropdown/address.js\");\n/* harmony import */ var _comps_dropdown_dropdown_list_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./comps/dropdown/dropdown-list.js */ \"./app/static/jay-comps/comps/dropdown/dropdown-list.js\");\n/* harmony import */ var _comps_inputs_filecard_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./comps/inputs/filecard.js */ \"./app/static/jay-comps/comps/inputs/filecard.js\");\n/* harmony import */ var _comps_inputs_keyword_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./comps/inputs/keyword.js */ \"./app/static/jay-comps/comps/inputs/keyword.js\");\n/* harmony import */ var _comps_dropdown_input_dropdown_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./comps/dropdown/input-dropdown.js */ \"./app/static/jay-comps/comps/dropdown/input-dropdown.js\");\n/* harmony import */ var _comps_icons_prompt_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./comps/icons/prompt.js */ \"./app/static/jay-comps/comps/icons/prompt.js\");\n/* harmony import */ var _comps_icons_icon_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./comps/icons/icon.js */ \"./app/static/jay-comps/comps/icons/icon.js\");\n/* harmony import */ var _comps_icons_icons_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./comps/icons/icons.js */ \"./app/static/jay-comps/comps/icons/icons.js\");\n/* harmony import */ var _comp_pages_login_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./comp-pages/login.js */ \"./app/static/jay-comps/comp-pages/login.js\");\n/* harmony import */ var _comp_pages_create_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./comp-pages/create.js */ \"./app/static/jay-comps/comp-pages/create.js\");\n/* harmony import */ var _comp_pages_home_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./comp-pages/home.js */ \"./app/static/jay-comps/comp-pages/home.js\");\n/* harmony import */ var _comp_pages_register_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./comp-pages/register.js */ \"./app/static/jay-comps/comp-pages/register.js\");\n/* harmony import */ var _comp_pages_create_prop_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./comp-pages/create_prop.js */ \"./app/static/jay-comps/comp-pages/create_prop.js\");\n/* harmony import */ var _comp_pages_verified_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./comp-pages/verified.js */ \"./app/static/jay-comps/comp-pages/verified.js\");\n\r\n// Comp src file\r\n\r\n\r\n/**\r\n * Component imports\r\n * */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Navbar\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Inputs\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Icons\r\n\r\n\r\n\r\n\r\n// Pages\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./app/static/jay-comps/imports.js?\n}");

/***/ }),

/***/ "./node_modules/jay-comp/dist/api.js":
/*!*******************************************!*\
  !*** ./node_modules/jay-comp/dist/api.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API: () => (/* binding */ API)\n/* harmony export */ });\n/**\n * Copyright (c) 2025 Josh Bassett\n *\n * Filename:    api.ts\n * Author:      Josh Bassett\n * Date:        08/06/2025\n * Version:     1.0\n *\n * Licence:     Apache 2.0\n */\n;\n/**\n * Class for HTTP requests.\n *\n * Provides a method `request` to abstract from JavaScript's `fetch` API.\n */\nclass API {\n    /**\n     * API perfoms a GET or POST HTTP Request.\n     *\n     * The method provides a nice abstraction to the fetch API to help developers\n     * focus on the response rather than the request details.\n     */\n    async request(url, method, data) {\n        if (method !== \"POST\" && method !== \"GET\") {\n            return {\n                ok: false,\n                status: 0,\n                error: `Unsupported HTTP method: ${method}`\n            };\n        }\n        const options = {\n            method: method,\n            headers: { \"Content-Type\": \"application/json\" }\n        };\n        if (method === \"POST\")\n            options.body = JSON.stringify(data);\n        try {\n            const response = await fetch(url, options);\n            const result = { ok: response.ok, status: response.status };\n            try {\n                const data = await response.json();\n                if (result.ok)\n                    result.data = data;\n                else\n                    result.error = data?.message || JSON.stringify(data);\n            }\n            catch (jsonErr) {\n                if (!response.ok)\n                    result.error = `HTTP ${response.status} ${response.statusText}`;\n            }\n            return result;\n        }\n        catch (networkErr) {\n            return {\n                ok: false,\n                status: 0,\n                error: networkErr.message || String(networkErr)\n            };\n        }\n    }\n    /**\n     * Sends a `FormData` payload via POST using `fetch()`, returns parsed JSON.\n     */\n    async submitForm(url, formData) {\n        const init = {\n            method: \"POST\",\n            body: formData\n        };\n        try {\n            const response = await fetch(url, init);\n            const result = { ok: response.ok, status: response.status };\n            try {\n                const data = await response.json();\n                if (result.ok)\n                    result.data = data;\n                else\n                    result.error = data?.error || JSON.stringify(data);\n            }\n            catch (jsonErr) {\n                if (!response.ok)\n                    result.error = `HTTP ${response.status} ${response.statusText}`;\n            }\n            return result;\n        }\n        catch (networkErr) {\n            return {\n                ok: false,\n                status: 0,\n                error: networkErr.message || String(networkErr)\n            };\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/jay-comp/dist/api.js?\n}");

/***/ }),

/***/ "./node_modules/jay-comp/dist/comp.js":
/*!********************************************!*\
  !*** ./node_modules/jay-comp/dist/comp.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Comp: () => (/* binding */ Comp)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./node_modules/jay-comp/dist/api.js\");\n/* harmony import */ var _design_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./design.js */ \"./node_modules/jay-comp/dist/design.js\");\n/* harmony import */ var _effects_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./effects.js */ \"./node_modules/jay-comp/dist/effects.js\");\n/**\n * Copyright (c) 2025 Josh Bassett\n *\n * Filename:    comp.ts\n * Author:      Josh Bassett\n * Date:        08/06/2025\n * Version:     1.4\n *\n * Licence:     Apache 2.0\n */\n\n\n\n/**\n * # Comp\n *\n * Abstract base class for custom elements that encapsulates Shadow DOM setup,\n * template rendering, styling, data fetching, and lifecycle hooks.\n *\n * ## Overview\n * This class handles the core lifecycle and utilities of a component:\n * - Calls `beforeRender()` hook before rendering for pre render logic\n * - Attaches an open shadow root\n * - Injects HTML and CSS via `render()`\n * - Provides JSON and multipart HTTP helpers (`request()`, `submitForm()`)\n * - Offers a `css()` helper for building scoped styles\n * - Calls `afterRender()` hook after rendering to wire up interactivity\n *\n * Subclasses must override three methods:\n * - `beforeRender(): void` — runs before DOM/CSS injection to add logic\n * - `createHTML(): string` — returns the component’s inner markup\n * - `createCSS(): string` — returns component-scoped CSS rules\n * - `afterRender(): void` — runs after DOM/CSS injection to add event listeners or logic\n *\n * ## Properties\n * - **design** (`Design`) — style builder, including default host rules\n * - **api** (`API`)        — HTTP helper for JSON and form submissions\n * - **effect** (`Effects`) — animation and side-effect utility\n *\n * ## Methods\n * - **render(): void**\n *   Attaches HTML/CSS to the shadow root and then calls `hook()`.\n *\n * - **update(html?: string, css?: string): void**\n *   Re-injects optional overrides or regenerates via `createHTML()`/`createCSS()`.\n *\n * - **css(config: CSSConfig): string**\n *   Compiles a CSSConfig object into a CSS block.\n *\n * - **request<ApiResponse<T>>(url: string, method: \"GET\" | \"POST\", data?: object): Promise<T>**\n *   Sends a JSON GET/POST and returns the parsed response.\n *\n * - **submitForm<ApiResponseT>(url: string, data: HTMLFormElement \\| FormData \\| Record<string, any>): Promise<T>**\n *   Converts input into `FormData`, POSTS as multipart, and parses JSON.\n *\n * ## Example\n * ```js\n * class MyComp extends Comp {\n *   greeting_ = \"Hello, world!\";\n *\n *   createHTML(): string {\n *     return `<button class=\"btn\">${this.greeting_}</button>`;\n *   }\n *\n *   createCSS(): string {\n *     return {\n *       class: \"btn\",\n *       background: \"blue100\",\n *       colour: \"white\",\n *       padding: [8, 16],\n *       borderRadius: 4,\n *       media: {\n *           size: 600,\n *           fontSize: 16\n *      );\n *   }\n *\n *   afterRender(): void {\n *     const btn = this.shadowRoot!.querySelector(\"button\")!;\n *     btn.addEventListener(\"click\", () => alert(this.greeting));\n *   }\n *\n *   static { Comp.register(this); }\n * }\n * ```\n */\nclass Comp extends HTMLElement {\n    /**\n     * ## register\n     *\n     * Registers a `Comp` subclass as a custom element under the “comp-…” namespace.\n     *\n     * ### Behavior\n     * - Converts class name to kebab-case\n     * - Prefixes the result with `\"comp-\"`\n     * - Calls `customElements.define()` once, avoiding duplicate registrations\n     *\n     * ### Parameters\n     * - `ctor: typeof Comp`\n     *   The subclass constructor that you want to register.\n     *\n     * ### Errors\n     * Throws an `Error` if stripping “Comp” yields an empty string (i.e. the class is\n     * named just `\"Comp\"` or doesn’t end in `\"Comp\"`).\n     *\n     * ### Example\n     * ```ts\n     * export class UserLoginPageComp extends Comp {\n     *   // … your createHTML/createCSS/hook …\n     *\n     *   // auto-register at load time\n     *   static {\n     *     Comp.register(this);\n     *   }\n     * }\n     *\n     * // After import, <comp-user-login-page> is available in the DOM\n     * ```\n     */\n    static register(ctor) {\n        const raw = ctor.name;\n        if (!raw)\n            throw new Error(`Can't auto-derive tag for ${ctor.name}`);\n        const tag = \"comp-\" + raw\n            .replace(/([a-z0-9])([A-Z])/g, \"$1-$2\")\n            .toLowerCase();\n        if (!Comp._registry.has(tag)) {\n            customElements.define(tag, ctor);\n            Comp._registry.add(tag);\n        }\n    }\n    constructor() {\n        super();\n        this.api = new _api_js__WEBPACK_IMPORTED_MODULE_0__.API();\n        this.effect = new _effects_js__WEBPACK_IMPORTED_MODULE_2__.Effects();\n        this.design = new _design_js__WEBPACK_IMPORTED_MODULE_1__.Design();\n        this.asyncStore = {};\n        this.attachShadow({ mode: \"open\" });\n        this.render();\n    }\n    /**\n     * ## host\n     *\n     * Overrides the default `:host` configuration.\n     *\n     * ### Behaviour:\n     * Nested components by default scale to fill the width of their parent due to\n     * the restrictions of Shadow DOM components.\n     *\n     * **Default config**\n     * ```css\n     *\n     * :host {display: block; width: 100%; box-sizing: border-box;}\n     * ```\n     *\n     * ### Parameters:\n     * - **css** (`string`): The new host CSS to be injected.\n     *\n     * ### Example:\n     * ```js\n     *\n     * class MyComp extends Comp {\n     *     constructor() {\n     *         super();\n     *         this.host({width: \"auto\", boxSizing: \"border-box\"});\n     *     }\n     * }\n     * ```\n     */\n    host(css) {\n        this.design.hostOverride = this.design.create(css);\n        this.render();\n        return this;\n    }\n    /**\n     * ## render\n     *\n     * Injects the component’s HTML and CSS into its shadow root and re-attaches logic.\n     *\n     * ### Behaviour\n     *  - If `beforeRender()` is implemented, invokes it immediately before DOM injection.\n     * - Calls `createHTML()` to get the latest HTML fragment.\n     * - Calls `createCSS()` to get the latest CSS string.\n     * - Sets `shadowRoot.innerHTML` to the combined template (via `createTemplate`).\n     * - If `afterRender()` is implemented, invokes it immediately after DOM injection.\n     * - Throws an Error if the shadow root is unavailable.\n     *\n     * ### Throws\n     * - `Error` if `this.shadowRoot` is `null` or undefined.\n     *\n     * ### Returns\n     * - `void`\n     *\n     * ### Example\n     * ```js\n     * // After subclass initialization, simply:\n     * this.render();\n     *\n     * // Or as part of a lifecycle:\n     * connectedCallback() {\n     *   // ensure all state is ready\n     *   this.render();\n     * }\n     * ```\n     */\n    render() {\n        if (!this.shadowRoot)\n            throw new Error(\"Shadow root is not available.\");\n        if (typeof this.beforeRender === \"function\")\n            this.beforeRender();\n        this.shadowRoot.innerHTML = this.createTemplate(this.createHTML(), this.compileCSSObjects(this.createCSS()));\n        if (typeof this.afterRender === \"function\")\n            this.afterRender();\n    }\n    /**\n     * Helper method conpiles CSSConfig objects into strings.\n     */\n    compileCSSObjects(css) {\n        const rawArray = Array.isArray(css) ? this.flatten(css) : [css];\n        return rawArray.map(entry => {\n            if (typeof entry === \"string\")\n                return entry;\n            else\n                return this.design.create(entry);\n        }).join(\"\\n\");\n    }\n    /**\n     * Helper method flattens arrays and compiles each config recursively.\n     */\n    flatten(items, out = []) {\n        for (const item of items) {\n            if (Array.isArray(item))\n                this.flatten(item, out);\n            else\n                out.push(item);\n        }\n        return out;\n    }\n    ;\n    /**\n     * ## update\n     *\n     * Re-renders the component by injecting fresh HTML and CSS into its shadow root.\n     *\n     * ### Behaviour\n     * - If both `newHTML` and `newCSS` are supplied, uses those values directly.\n     * - If either argument is omitted, calls the corresponding\n     *   `createHTML()` or `createCSS()` override to regenerate the missing piece.\n     * - Throws if the component’s shadow root is not attached.\n     * - After updating the DOM, invokes `hook()` so event listeners and other logic\n     *   are wired up again.\n     *\n     * ### Parameters\n     * - `newHTML?` (`string`): Optional HTML fragment to inject.\n     *   If omitted, runs `this.createHTML()`.\n     * - `newCSS?` (`string`): Optional CSS string to inject.\n     *   If omitted, runs `this.createCSS()`.\n     *\n     * ### Example\n     * ```js\n     * // Case 1: update both HTML and CSS explicitly\n     * this.update(\n     *   `<p>${this.message}</p>`,\n     *   this.css({ color: \"red\" })\n     * );\n     *\n     * // Case 2: regenerate from your subclass methods\n     * set message(text) {\n     *   this.message = text;\n     *   this.update();         // calls createHTML/createCSS internally\n     * }\n     * ```\n     */\n    update(newHTML, newCSS) {\n        if (!this.shadowRoot)\n            throw new Error(\"No shadow root\");\n        if (typeof this.beforeRender === \"function\")\n            this.beforeRender();\n        const html = newHTML || this.createHTML();\n        const css = newCSS || this.createCSS();\n        this.shadowRoot.innerHTML = this.createTemplate(html, this.compileCSSObjects(css));\n        if (typeof this.afterRender === \"function\")\n            this.afterRender();\n    }\n    /**\n     * ## request\n     *\n     * Performs an HTTP GET or POST and returns the parsed JSON body.\n     *\n     * ### Behaviour\n     * - Validates that `method` is `\"GET\"` or `\"POST\"`.\n     * - For POST, serialises `data` to JSON.\n     * - Throws on non-2xx responses or network errors.\n     *\n     * ### Type Parameters\n     * - `T` – the expected shape of the JSON response.\n     *\n     * ### Parameters\n     * - `url` (`string`): endpoint URL (absolute or relative).\n     * - `method` (`\"GET\" | \"POST\"`): HTTP verb.\n     * - `data?` (`object`): request payload for POST; ignored for GET.\n     *\n     * ### Returns\n     * `Promise<ApiResponseT>` – the deserialised JSON response.\n     * - `ok`: boolean\n     * - `status`: number\n     * - `data`?: T\n     * - `error`?: string\n     *\n     * ### Example\n     * ```ts\n     * // GET\n     * const usersResp = await this.request<User[]>(\"/api/users\", \"GET\");\n     * if (usersResp.ok) {\n     *     console.log(\"Got users:\", usersResp.data);\n     * } else {\n     *    console.error(\"Fetch users failed:\", usersResp.status, usersResp.error);\n     * }\n     *\n     * // POST\n     * const loginResp = await this.request<{ token: string }>(\"/api/login\", \"POST\",{ user: \"alice\", pass: \"s3cret\" });\n     *\n     * if (loginResp.ok) {\n     *    console.log(\"JWT =\", loginResp.data.token);\n     * } else {\n     *    console.error(\"Login error:\", loginResp.status, loginResp.error);\n     * }\n     * ```\n     */\n    async request(url, method, data) {\n        return this.api.request(url, method, data);\n    }\n    /**\n     * ## submitForm\n     *\n     * Gathers form data (from a form element, `FormData` instance, or plain object)\n     * and sends it via `multipart/form-data` POST, returning parsed JSON.\n     *\n     * ### Behaviour\n     * - If passed an `HTMLFormElement`, calls `new FormData(form)` to capture all fields.\n     * - If passed a `FormData` instance, sends it directly.\n     * - If passed a plain object, converts each key/value pair into FormData entries.\n     * - Uses `fetch()` under the hood and throws on non-2xx responses or network errors.\n     *\n     * ### Type Parameters\n     * - `T` – the expected shape of the JSON response.\n     *\n     * ### Parameters\n     * - `url` (`string`): the endpoint URL to POST to.\n     * - `data` (`HTMLFormElement | FormData | Record<string, any>`):\n     *   - An `HTMLFormElement` to be serialised\n     *   - A `FormData` object\n     *   - A plain object which will be converted to `FormData`\n     *\n     * ### Returns\n     * `Promise<T>` – the parsed JSON response body.\n     *\n     * ### Examples\n     *\n     * // 1) Passing a form element\n     * ```ts\n     *\n     * const form = document.querySelector('form')!;\n     * const result = await this.submitForm<{ success: boolean }>(\n     *   \"/api/profile\",\n     *   form\n     * );\n     * ```\n     *\n     * // 2) Passing a FormData instance\n     * ```ts\n     *\n     * const fd = new FormData();\n     * fd.append(\"username\", \"jay\");\n     * const result = await this.submitForm<{ id: number }>(\n     *   \"/api/users\",\n     *   fd\n     * );\n     * ```\n     *\n     * // 3) Passing a plain object\n     * ```ts\n     *\n     * const data = { name: \"Alice\", age: 30, newsletter: true };\n     * const result = await this.submitForm<{ status: \"ok\" }>(\n     *   \"/api/subscribe\",\n     *   data\n     * );\n     * ```\n     */\n    async submitForm(url, data) {\n        let formData;\n        if (data instanceof HTMLFormElement)\n            formData = new FormData(data);\n        else if (data instanceof FormData)\n            formData = data;\n        else {\n            formData = new FormData();\n            for (const [k, v] of Object.entries(data)) {\n                formData.append(k, String(v));\n            }\n        }\n        return this.api.submitForm(url, formData);\n    }\n    /**\n     * ## fetchOnce\n     *\n     * Fetches data exactly once for a given key and returns a live cache entry\n     * that tracks loading, success and error states. Subsequent calls with the\n     * same key return the cached result instead of re‐invoking the loader.\n     *\n     * ### Behavior\n     * - On first invocation the fetched data is stored within the component's `asyncStore`.\n     * - On subsequent calls, the data is retrieved from `asyncStore`\n     *\n     * ### Type Parameters\n     * - `T` – The expected element type.\n     *\n     * ### Parameters\n     * - `key` (`string`): The desired key from the request response.\n     * - `loader` (`Promise<T>`): A function that returns a `Promise<T>`. Called only once.\n     *\n     * ### Returns\n     * `FetchEntry<T>` – the fetched response object.\n     *\n     * ### Example\n     * ```ts\n     *\n     * // TypeScript\n     * createHTML() {\n     *   const { value: fact, loading, error } = this.fetchOnce<string>(\n     *     \"catFact\",\n     *     () => this.request(\"/fact\", \"GET\")\n     *          .then(res => res.ok ? res.data.fact : Promise.reject(res.error))\n     *   );\n     *\n     *   if (loading) return `<h1>Loading a random cat fact…</h1>`;\n     *   if (error) return `<h1>Failed to load fact: ${error}</h1>`;\n     *\n     *   return `<h1 class=\"fact\">${fact}</h1>`;\n     * }\n     * ```\n    */\n    fetchOnce(key, loader) {\n        let entry = this.asyncStore[key];\n        if (entry)\n            return entry;\n        entry = { value: undefined, loading: true, error: undefined };\n        this.asyncStore[key] = entry;\n        loader().then(result => {\n            entry.value = result;\n            entry.error = undefined;\n            entry.loading = false;\n            this.update();\n        }).catch(err => {\n            entry.error = err?.message || err;\n            entry.loading = false;\n            this.update();\n        });\n        return entry;\n    }\n    /**\n     * ## getById\n     *\n     * Retrieves an element from the shadow DOM by its ID.\n     *\n     * ### Behaviour\n     * - Strips a leading `#` if provided.\n     * - Delegates to `shadowRoot.getElementById`.\n     * - Returns `null` when no matching element is found.\n     *\n     * ### Type Parameters\n     * - `T` – The expected element type (defaults to `HTMLElement`).\n     *\n     * ### Parameters\n     * - `id` (`string`):\n     *   The identifier of the element, with or without a leading `#`.\n     *\n     * ### Returns\n     * `T | null` – The element matching the ID, or `null` if none exists.\n     *\n     * ### Examples\n     * ```ts\n     * // Lookup without '#'\n     * const btn = this.getById<HTMLButtonElement>('submitBtn');\n     * btn?.addEventListener('click', () => console.log('Clicked'));\n     *\n     * // Lookup with '#'\n     * const input = this.getById<HTMLInputElement>('#usernameInput');\n     * if (input) input.value = 'alice';\n     * ```\n     */\n    getById(id) {\n        const clean = id.startsWith('#') ? id.slice(1) : id;\n        return this.shadowRoot.getElementById(clean);\n    }\n    /**\n     * ## query\n     *\n     * Selects the first element in the shadow DOM matching a CSS selector.\n     *\n     * ### Behaviour\n     * - Delegates to `shadowRoot.querySelector`.\n     * - Returns `null` when no matching element is found.\n     *\n     * ### Type Parameters\n     * - `T` – The expected element type (defaults to `Element`).\n     *\n     * ### Parameters\n     * - `sel` (`string`):\n     *   A valid CSS selector (e.g. `'.foo'`, `'button'`, `'#bar'`, `[data-test]`, etc.).\n     *\n     * ### Returns\n     * `T | null` – The first matching element, or `null` if none exists.\n     *\n     * ### Examples\n     * ```ts\n     * // Query a single item\n     * const item = this.query<HTMLLIElement>('ul > li.active');\n     *\n     * // Query an input by attribute\n     * const email = this.query<HTMLInputElement>('input[name=\"email\"]');\n     * ```\n     */\n    query(sel) {\n        return this.shadowRoot.querySelector(sel);\n    }\n    /**\n     * ## queryAll\n     *\n     * Selects all elements in the shadow DOM matching a CSS selector.\n     *\n     * ### Behaviour\n     * - Delegates to `shadowRoot.querySelectorAll`.\n     * - Always returns a `NodeListOf<T>`, which may be empty.\n     *\n     * ### Type Parameters\n     * - `T` – The expected element type (defaults to `Element`).\n     *\n     * ### Parameters\n     * - `sel` (`string`):\n     *   A valid CSS selector for matching multiple elements.\n     *\n     * ### Returns\n     * `NodeListOf<T>` – A live list of all matching elements (empty if none).\n     *\n     * ### Examples\n     * ```ts\n     * // Get all active list items\n     * const items = this.queryAll<HTMLLIElement>('ul > li.active');\n     * items.forEach(li => li.style.color = 'red');\n     *\n     * // Get every button in the shadow root\n     * const buttons = this.queryAll<HTMLButtonElement>('button');\n     * buttons.forEach(btn => (btn.disabled = true));\n     * ```\n     */\n    queryAll(sel) {\n        return this.shadowRoot.querySelectorAll(sel);\n    }\n    /**\n     * Helper method that creates a template from component's HTML/CSS\n     */\n    createTemplate(html, css) {\n        return /* html */ `\n        ${html}\n        <style>\n        ${this.design.defaultComp()}\n        ${css}\n        </style>\n        `;\n    }\n}\nComp._registry = new Set();\n\n\n//# sourceURL=webpack:///./node_modules/jay-comp/dist/comp.js?\n}");

/***/ }),

/***/ "./node_modules/jay-comp/dist/design.js":
/*!**********************************************!*\
  !*** ./node_modules/jay-comp/dist/design.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Design: () => (/* binding */ Design)\n/* harmony export */ });\n/**\n * Copyright (c) 2025 Josh Bassett\n *\n * Filename:    design.ts\n * Author:      Josh Bassett\n * Date:        09/06/2025\n * Version:     1.4\n *\n * Licence:     Apache 2.0\n */\nclass Design {\n    /**\n     * Getter and Settter methods\n     */\n    set hostOverride(hostCSS) { this.hostOverride_ = hostCSS; }\n    get hostOverride() { return this.hostOverride_; }\n    /**\n     * API provides default values to be injected into every Comp when rendered.\n     */\n    defaultComp() {\n        return /* css */ `${this.resetStyles()}${this.hostOverride_ ? this.hostOverride_ : this.defaultHost()}${this.defaultFontStyle()}`;\n    }\n    /**\n     * Helper method provides standard reset values.\n     */\n    resetStyles() {\n        return `\n* {margin: 0; padding: 0;}`;\n    }\n    /**\n     * Helper method provides default :host config.\n     */\n    defaultHost() {\n        return `\n:host {display: block; width: 100%; box-sizing: border-box;}`;\n    }\n    /**\n     * Helper method provides default font styles modelled on Material Design 3 typography.\n     */\n    defaultFontStyle() {\n        return /* css */ `\nh1 {font-size: 57px; font-weight: 500; line-height: 64pt;}\nh2 {font-size: 45px; font-weight: 500; line-height: 52pt;}\nh3 {font-size: 36px; font-weight: 500; line-height: 44pt;}\nh4 {font-size: 32px; font-weight: 400; line-height: 40pt;}\nh5 {font-size: 28px; font-weight: 400; line-height: 36pt;}\nh6 {font-size: 24px; font-weight: 400; line-height: 32pt;}\np {font-size: 16px; font-weight: 400; line-height: 24pt;}\nlabel {font-size: 12px; font-weight: 500; line-height: 16pt;}`;\n    }\n    /**\n     * API abstracted through the Comp class, provides a method to build a CSS string.\n     *\n     * Method compiles base CSS and then appends media queries if applicable.\n     */\n    create(css) {\n        const selector = css.pseudoClass ?\n            `${css.class}:${css.pseudoClass}` :\n            css.class;\n        let cssText = `\n${selector ? `.${selector}` : ':host'} {${this.compileCSS(css)}}\\n`;\n        if (css.media && typeof css.media === \"object\" && !Array.isArray(css.media)) {\n            cssText += this.compileMedia(css.media, css.class, css.pseudoClass);\n        }\n        return cssText;\n    }\n    /**\n     * Method compiles a CSS string from a provided CSS Config object.\n     *\n     * Works by appending a CSS string and running checks against both the key and value.\n     */\n    compileCSS(css) {\n        let cssString = \"\";\n        for (let key in css) {\n            if (key === \"class\" || key == \"pseudoClass\" || key == \"media\")\n                continue;\n            let value = css[key];\n            const { propKey, propValue } = this.parseProperties(key, value);\n            cssString += `\\n  ${this.americanise(propKey)}: ${this.americanise(propValue)};`;\n        }\n        return cssString;\n    }\n    /**\n     * Method compiles a CSS media query string from a CSS Config object.\n     *\n     * Works by finding the breakpoint with the 'Bp' operator and uses the CSS key to create\n     * a media query heading.\n     *\n     * The 'Bp' value is removed to allow for the parseProperties function to compile the value.\n     *\n     * The media query is then assembled and returned.\n     */\n    compileMedia(media, parentClass, parentPseudo) {\n        const bp = Object.entries(media).find(([k]) => k.toLowerCase().endsWith(\"bp\"));\n        if (!bp)\n            throw new Error(\"Media config must include a *Bp key\");\n        const [breakKey, breakVal] = bp;\n        const { propKey: headingProp, propValue: headingVal } = this.parseBreakpoint(breakKey, breakVal);\n        const inner = { ...media };\n        for (const k of Object.keys(media))\n            if (k.toLowerCase().endsWith(\"bp\")) {\n                delete inner[k];\n            }\n        const cls = media.class || parentClass;\n        const pseudo = media.pseudoClass || parentPseudo;\n        const selector = `.${cls}${pseudo ? `:${pseudo}` : \"\"}`;\n        const innerCSS = this.compileCSS(inner);\n        return `\n@media (${headingProp}: ${headingVal}) {\n  ${selector} {\n    ${innerCSS}\n  }\n}`;\n    }\n    /**\n     * Helper method removes the 'Bp' operator and compiles and returns the CSS properties.\n     */\n    parseBreakpoint(key, val) {\n        const coreKey = key.slice(0, -\"Bp\".length);\n        return this.parseProperties(coreKey, val);\n    }\n    /**\n     * Helper method converts camel case variables to kebab case.\n     */\n    camelToKebab(key) {\n        return key.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n    /**\n     * Helper method translates UK -> US CSS property names.\n     */\n    americanise(variable) {\n        const convert = {\n            \"colour\": \"color\",\n            \"centre\": \"center\",\n            \"grey\": \"gray\",\n            \"behaviour\": \"behavior\"\n        };\n        const textValue = String(variable);\n        return convert[textValue] || textValue;\n    }\n    /**\n     * Method parses CSSValue objects and returns valid CSS.\n     *\n     * The method checks for operators that suffix a key, these are then used to validate the CSS type.\n     *\n     * Method handles all dataypes and arrays, with a recursive call to find all child CSS types.\n     *\n     * The returned CSS is a hash map of valid css properry key and value.\n     */\n    parseProperties(key, value) {\n        let propKey, propValue;\n        let suffix = \"\", unit = \"\";\n        const OPERATORS = {\n            Percent: \"%\", Var: \"var\", Url: \"url\", Calc: \"calc\",\n            Em: \"em\", Rem: \"rem\", Vw: \"vw\", Vh: \"vh\", Vmin: \"vmin\",\n            Vmax: \"vmax\", Ch: \"ch\", Ex: \"ex\", Pt: \"pt\", Pc: \"pc\",\n            In: \"in\", Cm: \"cm\", Mm: \"mm\", Fr: \"fr\", S: \"s\", Ms: \"ms\",\n            Deg: \"deg\", Rad: \"rad\", Grad: \"grad\", Turn: \"turn\",\n            Dpi: \"dpi\", Dpcm: \"dpcm\", Dppx: \"dppx\", Q: \"q\",\n            Hz: \"Hz\", KHz: \"kHz\"\n        };\n        const UNITLESS_PROPERTIES = [\n            \"opacity\", \"z-index\", \"line-height\", \"font-weight\",\n            \"flex\", \"order\", \"flex-grow\", \"flex-shrink\", \"grid-row\",\n            \"grid-column\", \"column-count\", \"widows\", \"orphans\", \"tab-size\"\n        ];\n        for (const k of Object.keys(OPERATORS))\n            if (key.endsWith(k)) {\n                suffix = k;\n                unit = OPERATORS[k];\n                key = key.slice(0, -k.length);\n                break;\n            }\n        propKey = this.camelToKebab(key);\n        propValue = propValue;\n        if (Array.isArray(value))\n            propValue = value\n                .map(v => this.parseProperties(propKey + suffix, v).propValue)\n                .join(\" \");\n        else if (typeof value === \"number\" && value === 0)\n            propValue = \"0\";\n        else if (typeof value === \"string\") {\n            if (suffix === \"Var\")\n                propValue = `var(--${value})`;\n            else if (suffix === \"Url\")\n                propValue = `url(${value})`;\n            else if (suffix === \"Calc\")\n                propValue = `calc(${value})`;\n            else\n                propValue = value;\n        }\n        else {\n            if (unit)\n                propValue = `${value}${unit}`;\n            else if (UNITLESS_PROPERTIES.includes(propKey))\n                propValue = String(value);\n            else\n                propValue = `${value}px`;\n        }\n        return { propKey, propValue };\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/jay-comp/dist/design.js?\n}");

/***/ }),

/***/ "./node_modules/jay-comp/dist/effects.js":
/*!***********************************************!*\
  !*** ./node_modules/jay-comp/dist/effects.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Effects: () => (/* binding */ Effects)\n/* harmony export */ });\n/**\n * Copyright (c) 2025 Josh Bassett, whondo.com\n *\n * Filename:    effect.ts\n * Authors:     Sarit Samkumpim, Josh Bassett\n * Date:        11/06/2025\n * Version:     1.1\n *\n * Licence:     Apache 2.0\n */\n/**\n * # Effects\n *\n * Class provides a CSS animation library.\n *\n * ### Overview:\n * The class provides a set of common reusable effects to help you build interactive\n * Comps quickly.\n *\n * The `prop()` API is used to define an animation property, then add the effect name\n * as the argument to access it within the CSS.\n *\n * ### Methods:\n * - **prop()**: API for defining a property.\n * - **fadeIn()**: Fade in effect.\n * - **fadeOut()**: Fade out effect.\n * - **fadeLeft()**: Fade left effect.\n * - **fadeRight()**: Fade right effect.\n * - **slideUp()**: Slide up from the bottom effect.\n * - **slideDown()**: Slide down from the top effect.\n * - **scale()**: Scale effect.\n * - **pulse()**: Pulse effect.\n * - **fadeOutLeft()**: Fade out left effect.\n * - **fadeOutRight()**: Fade out right effect.\n *\n * ### Example:\n * ```js\n * createCSS() {\n *     const effect = this.effect.slideUp(25); // Translates Y 25px\n *     const prop   = this.effect.prop(\"slideUp\", .5); // Runs for half a second\n *     const css = this.design.create({\n *         // css omitted\n *         animation: prop\n *     });\n *     return `\n *     ${effect}\n *     `;\n * }\n * ```\n */\nclass Effects {\n    /**\n     * ## Prop\n     *\n     * Creates a CSS animation property.\n     *\n     * ### Behaviour:\n     * Method creates a CSS animation property from the input. Note: the name of the effect needs\n     * to be present to target the correct animation.\n     *\n     * ### Parameters:\n     * - **name** (`string`): Name of effect.\n     * - **duration** (`string`): Duration of effect.\n     * - **timing** (`string`): Timing of effect.\n     * - **delay** (`string`): Delay of effect.\n     * - **iterate** (`string`): Repetitions of effect.\n     * - **direction** (`string`): Direction of effect.\n     * - **fillMode** (`string`): Style for effect when it's not playing.\n     *\n     * ### Returns:\n     * `string` - Valid CSS animation property.\n     *\n     * ### Example:\n     * ```js\n     * effects.prop(\"slideUp\", .5, \"ease-in-out\", .2);\n     * effects.prop(\"scale\", 1);\n     * effects.prop(\"fadeIn\", .5);\n     * ```\n     */\n    prop(name, duration, timing = \"ease\", delay = \"0\", iterate = \"1\", direction = \"normal\", fillMode = \"none\") {\n        return `${name} ${duration}s ${timing} ${delay}s ${iterate} ${direction} ${fillMode};`;\n    }\n    /**\n     * ## Fade In\n     *\n     * Provides an effect for fading in an element.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that gradually increase the opacity from 0 to 1.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal containing the keyframes for a fade-in effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeInCSS = effects.fadeIn();\n     * ```\n     */\n    fadeIn() {\n        return /* css */ `\n      @keyframes fadeIn {\n        0% {\n          opacity: 0;\n        }\n        100% {\n          opacity: 1;\n        }\n      }\n    `;\n    }\n    /**\n     * ## Fade Out\n     *\n     * Provides an effect for fading out an element.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that transition the element's opacity from 1 to 0.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal containing the keyframes for a fade-out effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeOutCSS = effects.fadeOut();\n     * ```\n     */\n    fadeOut() {\n        return /* css */ `\n      @keyframes fadeOut {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n        }\n      }\n    `;\n    }\n    /**\n     * ## Fade Left\n     *\n     * Provides an effect for fading in an element from the left.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that start with the element translated on the X-axis by a given value\n     * and with opacity 0, then transitions to full opacity and no translation.\n     *\n     * ### Parameters:\n     * - **translateX** (`number`): The number of pixels to translate the element from the left.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a fade-in from left effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeLeftCSS = effects.fadeLeft(20);\n     * ```\n     */\n    fadeLeft(translateX) {\n        return /* css */ `\n      @keyframes fadeLeft {\n        0% {\n          opacity: 0;\n          transform: translateX(${translateX}px);\n        }\n        100% {\n          opacity: 1;\n          transform: translateX(0);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Fade Right\n     *\n     * Provides an effect for fading in an element from the right.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that start with the element translated on the X-axis by a given value\n     * and with opacity 0, then transitions to full opacity and no translation.\n     *\n     * ### Parameters:\n     * - **translateX** (`number`): The number of pixels by which the element is translated to the right.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a fade-in from right effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeRightCSS = effects.fadeRight(20);\n     * ```\n     */\n    fadeRight(translateX) {\n        return /* css */ `\n      @keyframes fadeRight {\n        0% {\n          opacity: 0;\n          transform: translateX(${translateX}px);\n        }\n        100% {\n          opacity: 1;\n          transform: translateX(0);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Slide Up\n     *\n     * Provides an effect for sliding an element up into view.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that begin with the element translated downward along the Y-axis by a given number of pixels and invisible,\n     * and then transitions to no translation and full opacity.\n     *\n     * ### Parameters:\n     * - **translateY** (`number`): The vertical distance (in pixels) the element is offset downward.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a slide-up effect.\n     *\n     * ### Example:\n     * ```js\n     * const slideUpCSS = effects.slideUp(20);\n     * ```\n     */\n    slideUp(translateY) {\n        return /* css */ `\n      @keyframes slideUp {\n        0% {\n          opacity: 0;\n          transform: translateY(${translateY}px);\n        }\n        100% {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Slide Down\n     *\n     * Provides an effect for sliding an element down into view.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that begin with the element translated upward along the Y-axis by a given number of pixels and invisible,\n     * and then transitions to no translation and full opacity.\n     *\n     * ### Parameters:\n     * - **translateY** (`number`): The vertical distance (in pixels) the element is offset.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a slide-down effect.\n     *\n     * ### Example:\n     * ```js\n     * const slideDownCSS = effects.slideDown(20);\n     * ```\n     */\n    slideDown(translateY) {\n        return /* css */ `\n      @keyframes slideDown {\n        0% {\n          opacity: 0;\n          transform: translateY(${translateY}px);\n        }\n        100% {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Scale\n     *\n     * Provides an effect for scaling an element.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that transition the element's scale from an initial value to a target value,\n     * while also transitioning from transparent to fully opaque.\n     *\n     * ### Parameters:\n     * - **scaleFrom** (`number`): The initial scale factor.\n     * - **scaleTo** (`number`): The target scale factor.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a scaling effect.\n     *\n     * ### Example:\n     * ```js\n     * const scaleCSS = effects.scale(0.8, 1);\n     * ```\n     */\n    scale(scaleFrom, scaleTo) {\n        return /* css */ `\n      @keyframes scaleIn {\n        0% {\n          opacity: 0;\n          transform: scale(${scaleFrom});\n        }\n        100% {\n          opacity: 1;\n          transform: scale(${scaleTo});\n        }\n      }\n    `;\n    }\n    /**\n     * ## Pulse\n     *\n     * Provides a pulsing effect for an element.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that scale an element up slightly and then return it to its original size,\n     * creating a subtle pulsating appearance.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a pulsing effect.\n     *\n     * ### Example:\n     * ```js\n     * const pulseCSS = effects.pulse();\n     * ```\n     */\n    pulse() {\n        return /* css */ `\n      @keyframes pulsing {\n        0% {\n          transform: scale(1);\n        }\n        50% {\n          transform: scale(1.05);\n        }\n        100% {\n          transform: scale(1);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Fade Out Right\n     *\n     * Provides an effect for fading out an element to the right.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that begin with the element fully opaque and untransformed,\n     * then transition to full transparency while translating the element to the right.\n     *\n     * ### Parameters:\n     * - **translateX** (`number`): The horizontal distance (in pixels) the element is moved to the right.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a fade-out to right effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeOutRightCSS = effects.fadeOutRight(20);\n     * ```\n     */\n    fadeOutRight(translateX) {\n        return /* css */ `\n      @keyframes fadeOutRight {\n        0% {\n          opacity: 1;\n          transform: translateX(0);\n        }\n        100% {\n          opacity: 0;\n          transform: translateX(${translateX}px);\n        }\n      }\n    `;\n    }\n    /**\n     * ## Fade Out Left\n     *\n     * Provides an effect for fading out an element to the left.\n     *\n     * ### Behaviour:\n     * Generates CSS keyframes that begin with the element fully opaque and untransformed,\n     * then transition to full transparency while translating the element to the left.\n     *\n     * ### Parameters:\n     * - **translateX** (`number`): The horizontal distance (in pixels) the element is moved to the left.\n     *\n     * ### Returns:\n     * `string` - A CSS string literal with the keyframes for a fade-out to left effect.\n     *\n     * ### Example:\n     * ```js\n     * const fadeOutLeftCSS = effects.fadeOutLeft(20);\n     * ```\n     */\n    fadeOutLeft(translateX) {\n        return /* css */ `\n      @keyframes fadeOutLeft {\n        0% {\n          opacity: 1;\n          transform: translateX(0);\n        }\n        100% {\n          opacity: 0;\n          transform: translateX(${translateX}px);\n        }\n      }\n    `;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/jay-comp/dist/effects.js?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./app/static/jay-comps/imports.js");
/******/ 	
/******/ })()
;